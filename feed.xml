<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="https://ankushagarwal87.github.io/continuouslearning/feed.xml" rel="self" type="application/atom+xml" /><link href="https://ankushagarwal87.github.io/continuouslearning/" rel="alternate" type="text/html" /><updated>2022-05-15T03:30:30-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/feed.xml</id><title type="html">continuouslearning</title><subtitle>An easy to use blogging platform with support for Jupyter Notebooks.</subtitle><entry><title type="html">SAP - C01 - Identity and Federation</title><link href="https://ankushagarwal87.github.io/continuouslearning/aws/sap/2022/05/14/SAP-WIP.html" rel="alternate" type="text/html" title="SAP - C01 - Identity and Federation" /><published>2022-05-14T00:00:00-05:00</published><updated>2022-05-14T00:00:00-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/aws/sap/2022/05/14/SAP-WIP</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/aws/sap/2022/05/14/SAP-WIP.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2022-05-14-SAP-WIP.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;IAM&quot;&gt;IAM&lt;a class=&quot;anchor-link&quot; href=&quot;#IAM&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Types
    Users  - Long Term Credentials
    Groups
    Roles   - Short Term Credentials
        Service Roles
            Allow AWS services like EC2, Lambda, or others to perform actions in this account.
            Service Roles for EC2 Instance 
                Only One role can be assigned to EC2 Instance at a time.
            Service Linked Roles
                Service-linked roles are predefined by the service and include all the permissions that the  
                service requires to call other AWS services on your behalf.
        Cross Account Roles
            Allow entities in other AWS accounts belonging to perform actions.
        Web identity
            Allows users federated by the specified external web identity provider to assume this role.
        SAML 2.0 federation
            Allow users federated with SAML 2.0 from a corporate directory to perform actions.

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html&quot;&gt;https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html&lt;/a&gt;)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Policies
   AWS Managed
   Customer Managed
   Inline Policies
   Resouce Based Policies
        S3, SQS, SNS, KMS, etc

   Policy Structure
        Effect - Allow, Deny 
        Action - Put, Get...
        Resource - ARN
        Condition - Ip Address....
        Principal - At resource level policy

    Explicit DENY precedence over ALLOW.

IAM Security Tools
    Credential Report - Account Level - Users
    Access Advisor - User Level
    Access Analyzer - Resource Level 

IAM Role vs Resource Policy
    when you assume a role,whether it be a user, an application or a service you're going to give 
    up all your original permissions and you're going to take the permissions assigned to the role.

IAM Permission Boundary 
    Supported for users and roles, but not groups.
    Allow you to set the maximum permissions an IAM entity can get.
    Can be used with AWS Organization SCP&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;STS&quot;&gt;STS&lt;a class=&quot;anchor-link&quot; href=&quot;#STS&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Allow us to assume roles across different accounts within the same accounts and enable identity federation.
Credentials are going to be temporary between 15 minutes to 12 hours.
Ability to revoke active session &amp;amp; crdential for a role - AWSRevokeOlderSession
Can Add MFA for assuming Role - which can add extra security 

Provide access to AWS accounts owned by third parties
    Zone of trust is all the accounts and organizations that you own.
    Outside Zone of Trust = 3rd Parties
    External ID is a secret between you and the third party, and you have to define it.

    Confused Deputy 
        If any other account try to use 3rd Party Account to assume Role
        External ID - will prevent such attack

STS API
    AssumedRole
    AssumedRoleWithSAML
    AssumedRoleWithWebIdentity
    GetSessionToken - For MFA
    GetFederationToken
         A typical use is in a proxy application that gets temporary security credentials on 
         behalf of distributed applications inside a corporate network. 

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;https://aws.amazon.com/blogs/security/understanding-the-api-options-for-securely-delegating-access-to-your-aws-account/&quot;&gt;https://aws.amazon.com/blogs/security/understanding-the-api-options-for-securely-delegating-access-to-your-aws-account/&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Identity-Federation&quot;&gt;Identity Federation&lt;a class=&quot;anchor-link&quot; href=&quot;#Identity-Federation&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Corporate having own Identity System
Mobile/Web Application access to AWS resources
Flavours
    SAML2.0            
    Custom Identity Broker
    Web Identity Federation with(out) Cognito
    Web Identity Federation with Cognito
    SSO       

SAML2.0
    No need to create IAM users for each employee
    Need to setup trust between IAM &amp;amp; SAML2.0 Identity Provider
    Uses - AssumeRoleWithSAML
    Old Way - AWS SSO is new, managed &amp;amp; simpler way.

Custom Identity Broker
    Identity Broker authenticates users &amp;amp; request temporary credential from AWS
    Uses - AssumeRole or GetFederationToken

Web Identity Federation with(out) Cognito
    OpenID Connect Compatible IdP    - https://www.youtube.com/watch?v=t18YB3xDfXI
    Google, Facebook, Amazon

Web Identity Federation with Cognito
    Support anonymous users
    Support MFA
    Data Synchronization

Web Identity Federation IAM Policy
    We can identify the user with an IAM policy variable &amp;amp; apply conditions in Policy.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;AWS-Directory-Service&quot;&gt;AWS Directory Service&lt;a class=&quot;anchor-link&quot; href=&quot;#AWS-Directory-Service&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Microsoft Active Directory
    Database of objects - User Accounts, Computers...
Active Directory Federation Service
    Provides SSO across applications
    SAML across 3rd Party, AWS, Office 365

AWS Managed Microsoft AD
    Create your own AD in AWS
    Managed uers locally
    Supports MFA
    Establish Trust relationship with on-premises AD

AD Connector
    Directory Gateway(proxy) to redirect to on-premises AD
    Users are managed on on-premises AD
    Supports MFA

Simple AD
    AD compatible managed directory on AWS
    Cannot be joined with on-premises AD

Connect with on-premises AD - AWS Managed Microsoft AD
    Must Establish a Direct Connect or VPN Connection
    Replication doesn't happen
    Forest Trust Type
        AWS trust On-prmises
        On-premises trust AWS
        Both trust each other     

Active Directory Replication
    Create a replica of AD in EC2
    Establish trust between AWS Managed Microsoft AD &amp;amp; EC2

Connect with on-premises AD - AD Connector
    No caching
    Direct Connect or VPN Connection
    Doesn't work with SQL Server

Simple AD
    Supports joining EC2 instances, manage users &amp;amp; groups
    Doesn't support MFA, RDS SQL Server, AWS SSO
    Users - 500-5000
    Lower Cost, Low Scale
    No trust relationship&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ankush Agarwal</name></author><summary type="html"></summary></entry><entry><title type="html">SysOps Associate</title><link href="https://ankushagarwal87.github.io/continuouslearning/aws/sysops/2021/03/11/SysOps-Associate-WIP.html" rel="alternate" type="text/html" title="SysOps Associate" /><published>2021-03-11T00:00:00-06:00</published><updated>2021-03-11T00:00:00-06:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/aws/sysops/2021/03/11/SysOps-Associate-WIP</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/aws/sysops/2021/03/11/SysOps-Associate-WIP.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2021-03-11-SysOps Associate-WIP.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Overview&quot;&gt;Overview&lt;a class=&quot;anchor-link&quot; href=&quot;#Overview&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/continuouslearning/images/copied_from_nb/Intro.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;EC2&quot;&gt;EC2&lt;a class=&quot;anchor-link&quot; href=&quot;#EC2&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Changing Instance Type  - Steps applicable only for EBS Backed Instance
    Need to stop  
    New instance will be assigned
    EBS will get reasssigned

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Enhanced-Networking&quot;&gt;Enhanced Networking&lt;a class=&quot;anchor-link&quot; href=&quot;#Enhanced-Networking&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;EC2 Enhanced Networking (SR-IOV)
    Higher bandwidth, Higher PPS, Lower latency
    Option 1:Elastic Network Adaptor(ENA) upto 100 Gbps
    Option 2:Intel 82599 VF upto 10 Gbps - LEGACY
    Works for newer generation EC2 instances
Elastic Fabric Adaptor
    Improved ENA for HPC, only works for Linux
    Great for inter-node communications, tightly coupled workloads
    Leverages Message Passing Interface (MPI) standard
    Bypasses the underlying Linux OS to provide low latency, reliable transport

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Placement-Group&quot;&gt;Placement Group&lt;a class=&quot;anchor-link&quot; href=&quot;#Placement-Group&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Cluster
    is applicable only for specific instances
    Great network - 10 Gbps bandwidth between instances
Spread
    Limited to 7 instances per AZ per placement group
Partition
    Upto 7 partitions per AZ
    Upto 100s of EC2 instances

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Shutdown-Behaviour-using-OS&quot;&gt;Shutdown Behaviour using OS&lt;a class=&quot;anchor-link&quot; href=&quot;#Shutdown-Behaviour-using-OS&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Terminate Protection
    Only from CLI or Console
    Can enable/disable it on running instances
Shutdown Behaviour 
    Stop
    Terminate

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;EC2-Launch-Troubleshooting&quot;&gt;EC2 Launch Troubleshooting&lt;a class=&quot;anchor-link&quot; href=&quot;#EC2-Launch-Troubleshooting&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;#InstanceLimitExceeded
    Default Running vCPU limit in each region - 64
#InsuffientInstanceCapacity
    Try again after sometime
#Instance Terminate Immediately
    Reached EBS Volume Limit
    EBS Snapshot is corrupt
    Do not have permission to access KMS key for decryption
    Instance store backed AMI is missing a required part

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;EC2-SSH-Trouble&quot;&gt;EC2 SSH Trouble&lt;a class=&quot;anchor-link&quot; href=&quot;#EC2-SSH-Trouble&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Possible reason of timeout
    Security Group
    CPU load of the instance is high
    Instance does not have public IP 

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Instance-Type&quot;&gt;Instance Type&lt;a class=&quot;anchor-link&quot; href=&quot;#Instance-Type&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;On Demand
    Linux/Windows - Pay for seconds, other - hour
Dedicated hosts
    Physical server with a ec2 instance capacity fully dedicated to you
    Allocated for 3 year reservation
    Useful for software that have complicated licensing model - BYOL
EC2 Dedicated Instances
    Instances running on hardware that's dedicated to you
    May share hardware with other instances in same account
    No control over instance placement
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;/continuouslearning/images/copied_from_nb/DedicatedHosts.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;h4 id=&quot;Spot-Instances-&amp;amp;-Spot-Fleet&quot;&gt;Spot Instances &amp;amp; Spot Fleet&lt;a class=&quot;anchor-link&quot; href=&quot;#Spot-Instances-&amp;amp;-Spot-Fleet&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Can choose to stop or terminate your instances within 2 minutes grace period
First cancel the spot request then cancel the spot instances

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Instance-Type&quot;&gt;Instance Type&lt;a class=&quot;anchor-link&quot; href=&quot;#Instance-Type&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;R - RAM
C - Compute
M - Medium - web app
I - I/o - Database 
G - GPU
T2/T3 burstable instances
T2/T3 unlimited burst

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;/continuouslearning/images/copied_from_nb/InstanceType.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;h4 id=&quot;Elastic-IP&quot;&gt;Elastic IP&lt;a class=&quot;anchor-link&quot; href=&quot;#Elastic-IP&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;When you stop then start the instance - public ip changes
Avoid using Elastic IP
    Use a random public IP &amp;amp; register a DNS name to it
    Use a Load balancer with a static host name

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;CloudWatch-metrics-for-EC2&quot;&gt;CloudWatch metrics for EC2&lt;a class=&quot;anchor-link&quot; href=&quot;#CloudWatch-metrics-for-EC2&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;AWS provided metric
    CPU, Network, Disk(only for instance store) and Status Check Metric
Custom Metrics
    Basic resolution - 1 minute
    High Resolution - 1 second
    Include RAM, application level metrics      
Status Check
    Instance Status - Check the EC2 VM
    System Status - Check the underlying hardware        

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Unified-CloudWatch-Agent&quot;&gt;Unified CloudWatch Agent&lt;a class=&quot;anchor-link&quot; href=&quot;#Unified-CloudWatch-Agent&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Push logs &amp;amp; metrics to CloudWatch from EC2 or on-premise server
procstat plugin
    Collect metrics &amp;amp; monitor system utilization of individual processes
Download &amp;amp; Install cloudwatch agent in instance
Run config wizard
Can put config file in parameter Store
Can download config file in other ec2 instances

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;EC2-Instances-Status-Check&quot;&gt;EC2 Instances Status Check&lt;a class=&quot;anchor-link&quot; href=&quot;#EC2-Instances-Status-Check&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;System Status Checks
    Stop &amp;amp; Start
Instance Status Checks
    Reboot
CloudWatch Metrics
    StatusChedkFailed_System
    StatusCheckFailed_Instance
    StatusCheckFailed(for both)
Recovery
    CloudWatch Alarm
    Auto Scaling Group

SYSTEM status checks
    System status checks monitor the AWS systems on which your instance runs
    Problem with the underlying host. Example: 
        Loss of network connectivity
        Loss of system power
        Software issues on the physical host
        Hardware issues on the physical host that impact network reachability

    Either wait for AWS to fix the host, OR
    Move the EC2 instance to a new host = STOP &amp;amp; START the instance (if EBS backed)

INSTANCE status checks
    Instance status checks monitor the software and network configuration of your individual instance
    Example of issues
        Incorrect networking or startup configuration
        Exhausted memory
        Corrupted file system
        Incompatible kernel

    Requires your involvement to fix
        Restart the EC2 instance, OR
        Change the EC2 instance configuration     

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;EC2-Hibernate&quot;&gt;EC2 Hibernate&lt;a class=&quot;anchor-link&quot; href=&quot;#EC2-Hibernate&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Stop : Data on disk(EBS) is kept intact
Terminate : Any EBS volumes(root) also setup to be destroyed is lost
Hibernate : In-memory state(RAM) is preserved
    Root EBS must be encrypted

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;AMI&quot;&gt;AMI&lt;a class=&quot;anchor-link&quot; href=&quot;#AMI&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;AMI built are for a specific region
AMI are private by default - locked for your account/region
Stored in S3

AWS Backup Plans to Create AMI
    To maintain Integrity you need to reboot parameter while taking images
    EventBridge + Lambda + CreateImage API with reboot

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;EC2-Image-Builder&quot;&gt;EC2 Image Builder&lt;a class=&quot;anchor-link&quot; href=&quot;#EC2-Image-Builder&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Used to automate the creation of VM or container Image
Can be run on schedule&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Systems-Manager-(SSM)-&amp;amp;-Opswork&quot;&gt;Systems Manager (SSM) &amp;amp; Opswork&lt;a class=&quot;anchor-link&quot; href=&quot;#Systems-Manager-(SSM)-&amp;amp;-Opswork&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Helps you manage your EC2 &amp;amp; on-premise systems at scale
Get operation insight about the state of your infrastructure
Easily detects problem
Patching automation for enhanced compliance
Integrated with CloudWatch metrics/dashboard
Integrated with AWS Config

Resource Group
Operations Management
    Explorer
    Ops Center
    CloudWatch Dashboard
    PHD
    Incident Manager
Shared Resources
    Documents
Change Management
    Change Manager
    Automation(shut down EC2, create AMIs)
    Change Calendar
    Maintainance Windows
Application Management
    Application Manager
    AppConfig
    Parameter Store
Node Management
    Fleet Manager
    Compliance
    Inventory:Discover &amp;amp; Audit software installed
    Hybrid Activations
    Session Manager
    Run command
    State Manager:Define &amp;amp; maintaining configuration
    Patch Manager
    Distributer        

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;How-SSM-Works&quot;&gt;How SSM Works&lt;a class=&quot;anchor-link&quot; href=&quot;#How-SSM-Works&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;We need to install SSM Agents onto the systems we control
Installed by default on Linux AMI &amp;amp; some Ubuntu AMI
If an instance can't be controlled with SSM, probbaly an issue wih SSM Agent
Make sure that EC2 instance have proper IAM role to allow SSM actions

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Start-EC2-instances-with-SSM-Agent&quot;&gt;Start EC2 instances with SSM Agent&lt;a class=&quot;anchor-link&quot; href=&quot;#Start-EC2-instances-with-SSM-Agent&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Just add IAM role which allow connections to SSM, it will start showing in SSM Manage Instances

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;AWS-Tags-&amp;amp;-SSM-Resource-Groups&quot;&gt;AWS Tags &amp;amp; SSM Resource Groups&lt;a class=&quot;anchor-link&quot; href=&quot;#AWS-Tags-&amp;amp;-SSM-Resource-Groups&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Create, view or manage logical group of resources thanks to tags
Allow creation of logical group of resources such as 
    Applications
    Different layers of an application stack
    Production vs development environments
Regional Service
Works with EC2,S3,DynamoDB,Lambda

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;SSM-Documents-&amp;amp;-SSM-Run-Command&quot;&gt;SSM Documents &amp;amp; SSM Run Command&lt;a class=&quot;anchor-link&quot; href=&quot;#SSM-Documents-&amp;amp;-SSM-Run-Command&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Documents
    Can be in JSON or YAML
    You define parameters
    You define actions
    Many documents already exist in AWS
    Can be applied to
        State Manager
        Patch Manager
        Automation
        Run command
        Reference Parameter Store

Run Commands
    Execute a document(script) or just run a command
    Run command across multiple instance using resource groups
    Rate Control/Error Control
    Integrated with IAM &amp;amp; CloudTrail
    No need for SSH
    Results in the console or S3 or cloudwatch

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;SSM---Automation&quot;&gt;SSM - Automation&lt;a class=&quot;anchor-link&quot; href=&quot;#SSM---Automation&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Simplify common maintenance &amp;amp; deployment tasks of EC2 instances &amp;amp; other AWS resources
Example - Restart Instances, Create an AMI, EBS Snapshots
Automation Runbook
    SSM Documents of Type Automation
    Define actions performed on your EC2 instances or AWS resources
    Pre-defined runbooks or create custom runbooks
Can be Triggered
    AWS Console, CLI, SDK
    Event Bridge
    On a schedule using Maintenance Window
    By AWS Config for rules remediation

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;AWS-Parameter-Store&quot;&gt;AWS Parameter Store&lt;a class=&quot;anchor-link&quot; href=&quot;#AWS-Parameter-Store&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Secure storage for configurations &amp;amp; secret
Optional seamless encryption using KMS
Serverless, scalable, durable, easy SDK, free
Version tracking of configurations/secrets
Configurations management using path &amp;amp; IAM
Notifications with CloudWatch Events
Integration with CloudFormation

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;SSM-Inventory-&amp;amp;-Patches&quot;&gt;SSM Inventory &amp;amp; Patches&lt;a class=&quot;anchor-link&quot; href=&quot;#SSM-Inventory-&amp;amp;-Patches&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Inventory - List Software on an Instance
Inventory + Run Command - Patch Software
Patch Manager + Maintenance Window - Patch OS
Patch Manager - Gives you Compliance
State Manager - Ensures instance are in a consistence state(compliance)

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;SSM-Secure-Shell&quot;&gt;SSM Secure Shell&lt;a class=&quot;anchor-link&quot; href=&quot;#SSM-Secure-Shell&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Session Manager allows you to start a secure shell on your VM
Does not use SSH access &amp;amp; bastions hosts
Only EC2 now
Log actions done through secure shells to S3 &amp;amp; CloudWatch Logs
IAM Permission:Access SSM + Write to S3 + write to CloudWatch
CloudTrail can intercept StartSession events
AWS Secure Shell versus SSH
    No need to open the port 22 at all anymore (Security)
    No need for bastions hosts
    All commands are logged to S3/CloudWatch (auditing)
    Access to Secure Shell is done through User IAM,not SSH keys

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Opsworks&quot;&gt;Opsworks&lt;a class=&quot;anchor-link&quot; href=&quot;#Opsworks&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Chef or Puppet help you perform server configurations automatically or repetitive actions  &lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;High-Availablity-&amp;amp;-Scalability&quot;&gt;High Availablity &amp;amp; Scalability&lt;a class=&quot;anchor-link&quot; href=&quot;#High-Availablity-&amp;amp;-Scalability&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&quot;Load-Balancer-Overview&quot;&gt;Load Balancer Overview&lt;a class=&quot;anchor-link&quot; href=&quot;#Load-Balancer-Overview&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Expose a single point of DNS to your application
Seamlessly handle failure of downstream instances
Do regulare health check to your instances
Provide SSL Termination(HTTPS) for your websites -- CLB &amp;amp; ALB
Enforce stickiness with cookies
Can setup private or public Load Balancer
Load Balancer Errors 503 means at capacity or no registered target
If LB can't connect to your application, check your Security Groups

Types
    Classic - 2009
    Application - 2016
    Network - 2017

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Application-Load-Balancer&quot;&gt;Application Load Balancer&lt;a class=&quot;anchor-link&quot; href=&quot;#Application-Load-Balancer&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;ALB (Layer 7) allows to do:
    Load balancing to multiple HTTP applications across machine(target groups)
    Load balancing to multiple applications on the same machine(containers)
    Load balancing based on route in URL
    Load balancing based on hostname in URL

Are used for microservices &amp;amp; container based application (Docker &amp;amp; Amazon ECS)
Has a port mapping feature to redirect to a dynamic url

Stickiness can be enables at the target group level
    Same request goes to the same instance
    Stickiness is diretly generated by the ALB

ALB supports HTTP/HTTPS &amp;amp; WebSockets protocols

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Network-Load-Balancer&quot;&gt;Network Load Balancer&lt;a class=&quot;anchor-link&quot; href=&quot;#Network-Load-Balancer&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;NLB (Layer 4) allows to do:
    Forward TCP traffic to your instances
    Handles million of requests per seconds
    Support for static IP or elastic IP
    Less latency ~ 100 ms (vs 400 ms for ALB)
Can directly see the client IP

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Metrics,-Logging-&amp;amp;-Tracing-for-ELB&quot;&gt;Metrics, Logging &amp;amp; Tracing for ELB&lt;a class=&quot;anchor-link&quot; href=&quot;#Metrics,-Logging-&amp;amp;-Tracing-for-ELB&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;All LB metrics are directly pushed to CloudWatch metrics
    BackendConnectionErrors
    HealthyHostCount / UnHealthyHostCount
    HTTPCode_Backend_2XX:Successful Request
    HTTPCode_Backend_3XX:Redirect Request
    HTTPCode_ELB_4XX:Client Error
    HTTPCode_ELB_5XX:Server Error
    Latency
    RequestCount
    SurgeQueueLength
    SpillOverLength
Access Log can be stored in S3

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Auto-Scaling-Group&quot;&gt;Auto Scaling Group&lt;a class=&quot;anchor-link&quot; href=&quot;#Auto-Scaling-Group&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;A launch configuration
    AMI + Instance Type
    EC2 User Data
    EBS volumes
    SG
    SSH Key Pair
Min Size/Max Size/Initial Capacity
Network + Subnets Information
Load Balancer Information
Scaling Policies

Auto Scaling Alarms
    Cloudwatch alarms
    EC2 managed rules
    Custom metrics

AZ Rebalance
    Launch new instance then terminate old instance

    If you suspend the Launch process
        AZ won't launch instance 
        AZ won't terminate instance 

    If you suspend the Terminate process
        AZ can grow upto 10% of its size
        AZ will remian at this capacity since it can't terminate instance&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Elastic-Beanstalk&quot;&gt;Elastic Beanstalk&lt;a class=&quot;anchor-link&quot; href=&quot;#Elastic-Beanstalk&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Manged Service
Architecture Models
    Single Instance Deployment: Good for Dev
    LB + ASG: Good for Prod or Non-Prod
    ASG only: Good for non-web apps in production (workers,etc..)

Three components
    Application
    Application version
    Environment name&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ankush Agarwal</name></author><summary type="html"></summary></entry><entry><title type="html">AWS VPC - NAT vs EndPoint</title><link href="https://ankushagarwal87.github.io/continuouslearning/aws/2020/08/15/NAT-Gateway-vs-VPC-Gateway-End-Point.html" rel="alternate" type="text/html" title="AWS VPC - NAT vs EndPoint" /><published>2020-08-15T00:00:00-05:00</published><updated>2020-08-15T00:00:00-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/aws/2020/08/15/NAT-Gateway-vs-VPC-Gateway-End-Point</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/aws/2020/08/15/NAT-Gateway-vs-VPC-Gateway-End-Point.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-08-15-NAT Gateway vs VPC Gateway End Point.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Comparison&quot;&gt;Comparison&lt;a class=&quot;anchor-link&quot; href=&quot;#Comparison&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;The following table shows the options you have if you decide to stay in private subnets.
                        Gateway VPC Endpoint    Interface VPC Endpoint  NAT Gateway
Supported AWS services  S3, DynamoDB    some                    all
Price per hour1         free            $0.01                   $0.045
Price per GB1           free            $0.01                   $0.045

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As you can see, using Gateway VPC Endpoints is cheaper than using Interface VPC Endpoint which is cheaper than using NAT Gateways&lt;/p&gt;
&lt;p&gt;Nat Gateway Usage for 15 GB monthly usage for 1 NAT Gateway&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;730 hours in a month x 0.045 USD = 32.85 USD (Gateway usage hourly cost)
15 GB per month x 0.045 USD = 0.68 USD (NAT Gateway data processing cost)
32.85 USD + 0.68 USD = 33.53 USD (NAT Gateway processing and month hours)
1 NAT Gateways x 33.53 USD = 33.53 USD (Total NAT Gateway usage and data processing cost)

Total NAT Gateway usage and data processing cost (monthly): 33.53 USD


&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;InterFace EndPoint Usage for 15 GB Monthly Usage for 1 VPC EndPoint&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;730 hours in a month x 0.01 USD = 7.30 USD (Hourly cost for endpoint ENI)
15 GB per month x 0.01 USD = 0.15 USD (PrivateLink data processing cost)
7.30 USD + 0.15 USD = 7.45 USD (Hourly cost and data processing per endpoint ENI)
1 VPC endpoints x 1 ENIs per VPC endpoint x 7.45 USD = 7.45 USD (Total PrivateLink endpoints and data processing cost)

Total PrivateLink endpoints and data processing cost (monthly): 7.45 USD


&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Gateway EndPoint Usage for 15 GB Monthly Usage&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Intra region:
(15 GB x 0.01 USD per GB outbound) + (15 GB x 0.01 USD per GB inbound) = 0.30 USD 

Data Transfer cost (monthly): 0.30 USD&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Question&quot;&gt;Question&lt;a class=&quot;anchor-link&quot; href=&quot;#Question&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;We don't need NAT Gateway in Prod to run 24*7 for accessing EC2 instance or we can run it only when needed
If its free atleast Data transfer charges will not apply &lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;References&quot;&gt;References&lt;a class=&quot;anchor-link&quot; href=&quot;#References&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;https://docs.aws.amazon.com/vpc/latest/userguide/vpc-endpoints.html
https://docs.aws.amazon.com/vpc/latest/userguide/vpce-gateway.html&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ankush Agarwal</name></author><summary type="html"></summary></entry><entry><title type="html">Architecture Best Practices</title><link href="https://ankushagarwal87.github.io/continuouslearning/aws/architecture%20best%20practices/2020/08/11/Architecture-Best-Practices.html" rel="alternate" type="text/html" title="Architecture Best Practices" /><published>2020-08-11T00:00:00-05:00</published><updated>2020-08-11T00:00:00-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/aws/architecture%20best%20practices/2020/08/11/Architecture-Best-Practices</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/aws/architecture%20best%20practices/2020/08/11/Architecture-Best-Practices.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-08-11-Architecture Best Practices.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Overview&quot;&gt;Overview&lt;a class=&quot;anchor-link&quot; href=&quot;#Overview&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Design for failure and nothing will fail.
    Standby redundancy is often used for stateful components such as relational databases.
    Amazon Simple Storage Service (Amazon S3) and Amazon DynamoDB ensure that data is redundantly 
    stored across multiple facilities.

Implement elasticity.
    vertically and horizontally.
    Consider only storing a unique session identifier in a HTTP cookie and storing more detailed user 
    session information server-side. Most programming platforms provide a native session management 
    mechanism that works this way; however, these management mechanisms often store the session 
    information locally by default. This would result in a stateful architecture. 
    A common solution to this problem is to store user session information in a database. 
    Amazon DynamoDB is a great choice due to its scalability, high availability, and durability
    characteristics. For many platforms, there are open source, drop-in replacement libraries that 
    allow you to store native sessions in Amazon DynamoDB.

Leverage different storage options.        

Build security in every layer.
    Services like AWS Web Application Firewall (AWS WAF) can help protect your web applications 
    from SQL injection and other vulnerabilities in your application code
    With AWS Config Rules, you will also know if some component was out of compliance even for a brief 
    period of time, making both point-in-time and period-in-time audits very effective. 
    You can implement extensive logging for your applications using Amazon CloudWatch Logs and for the 
    actual AWS API calls by enabling AWS CloudTrail

Think parallel.
Loose coupling sets you free.
Don’t fear constraints.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ankush Agarwal</name></author><summary type="html"></summary></entry><entry><title type="html">Security on AWS</title><link href="https://ankushagarwal87.github.io/continuouslearning/aws/security/2020/08/09/Security-on-AWS.html" rel="alternate" type="text/html" title="Security on AWS" /><published>2020-08-09T00:00:00-05:00</published><updated>2020-08-09T00:00:00-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/aws/security/2020/08/09/Security-on-AWS</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/aws/security/2020/08/09/Security-on-AWS.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-08-09-Security on AWS.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Network-Monitoring-and-Protection&quot;&gt;Network Monitoring and Protection&lt;a class=&quot;anchor-link&quot; href=&quot;#Network-Monitoring-and-Protection&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Distributed Denial of Service (DDoS) Attacks 
Man in the Middle (MITM) Attacks
IP Spoofing 
Port Scanning
Packet Sniffing by Other Tenants&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;AWS-Account-Security-Features&quot;&gt;AWS Account Security Features&lt;a class=&quot;anchor-link&quot; href=&quot;#AWS-Account-Security-Features&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;AWS Credentials
    Passwords
    Access Keys
    Key Pairs
    X.509 Certificates
AWS CloudTrail&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Service-Specific-Security&quot;&gt;Service-Specific Security&lt;a class=&quot;anchor-link&quot; href=&quot;#Service-Specific-Security&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Compute
    Amazon Elastic Compute Cloud
        Amazon EC2 supports RSA 2048 SSH-2 Key pairs
    Amazon Elastic Block Store (Amazon EBS) 
        Encrypt Amazon EBS volumes and their snapshots with AES-256

Networking
    Elastic Load Balancing
        configures your load balancer with a pre-defined cipher set that is used for TLS negotiation
    Amazon Virtual Private Cloud
        Security features within Amazon VPC include security groups, network ACLs, routing tables, 
        and external gateway
    Amazon CloudFront
        To control access to the original copies of your objects in Amazon S3, Amazon CloudFront allows 
        you to create one or more Origin Access Identities and associate these with your distributions.
        To control who can download objects from Amazon CloudFront edge locations, the service uses 
        a signed-URL verification system.

Storage
    Amazon Simple Storage Service
    Amazon Glacier
        encrypts the data using AES-256
    AWS Storage Gateway
        Transfer to AWS over SSL and stored encrypted in Amazon S3 using AES-256

Database
    Amazon DynamoDB
        You can control access at the database level 
    Amazon Relational Database Service
        You can control Amazon RDS DB Instance access via DB security groups
    Amazon Redshift
         AES-256 block encryption
    Amazon ElastiCache
        Cache Security Group

Application Services
    Amazon Simple Queue Service
        AWS account or a user created with AWS IAM
    Amazon Simple Notification Service
        Amazon SNS allows topic owners to set policies for a topic that restrict who can publish or 
        subscribe to a topic

Analytics
    Amazon Elastic MapReduce
    Amazon Kinesis
        users under your AWS account using AWS IAM

Deployment and Management
    AWS Identity and Access Management

Mobile Services
    Amazon Cognito
        Your application authenticates with one of the well-known identity providers such as Google, 
        Facebook, and Amazon using the provider’s SDK
        After the end user is authenticated with the provider, an OAuth or OpenID Connect token returned 
        from the provider is passed by your application to Amazon Cognito, which returns a new Amazon 
        Cognito ID for the user and a set of temporary, limited-privilege AWS credentials.

Applications
    Amazon Workspaces &lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ankush Agarwal</name></author><summary type="html"></summary></entry><entry><title type="html">Additional Key Services</title><link href="https://ankushagarwal87.github.io/continuouslearning/aws/additional%20key%20services/2020/07/26/Additional-Key-Services.html" rel="alternate" type="text/html" title="Additional Key Services" /><published>2020-07-26T00:00:00-05:00</published><updated>2020-07-26T00:00:00-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/aws/additional%20key%20services/2020/07/26/Additional-Key-Services</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/aws/additional%20key%20services/2020/07/26/Additional-Key-Services.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-07-26-Additional Key Services.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Amazon-CloudFront&quot;&gt;Amazon CloudFront&lt;a class=&quot;anchor-link&quot; href=&quot;#Amazon-CloudFront&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;A Content Delivery Network (CDN) is a globally distributed network of caching servers that speed up 
    the downloading of web pages and other content.
Amazon CloudFront is AWS CDN. It can be used to deliver your web content using Amazon’s global network 
    of edge locations

Distributions To use Amazon CloudFront, you start by creating a distribution, which is identified by a 
    DNS domain name such as d111111abcdef8.cloudfront.net
Origins When you create a distribution, you must specify the DNS domain name of the origin—the Amazon 
    S3 bucket or HTTP server—from which you want Amazon CloudFront to get the definitive version of 
    your objects (web files). 
Cache Control Once requested and served from an edge location, objects stay in the cache until they expire
    or are evicted to make room for more frequently requested content

Signed URLs Use URLs that are valid only between certain times and optionally from certain IP addresses.
Signed Cookies Require authentication via public and private key pairs.
Origin Access Identities (OAI) Restrict access to an Amazon S3 bucket only to a special Amazon CloudFront
    user associated with your distribution.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;AWS-Storage-Gateway&quot;&gt;AWS Storage Gateway&lt;a class=&quot;anchor-link&quot; href=&quot;#AWS-Storage-Gateway&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;AWS Storage Gateway is a service connecting an on-premises software appliance with cloud-based storage 
    to provide seamless and secure integration between an organization’s on-premises IT environment and 
    AWS storage infrastructure.

Gateway-Cached Volumes 
Gateway-Cached volumes allow you to expand your local storage capacity into Amazon S3. 
All data stored on a Gateway-Cached volume is moved to Amazon S3, while recently read data is retained in 
    local storage to provide low-latency access. 
While each volume is limited to a maximum size of 32TB, a single gateway can support up to 32 volumes 
    for a maximum storage of 1 PB.
All Gateway-Cached volume data and snapshot data is transferred to Amazon S3 over encrypted Secure 
    Sockets Layer (SSL) connections. 
It is encrypted at rest in Amazon S3 using Server-Side Encryption (SSE). 
However, you cannot directly access this data with the Amazon S3 API or other tools such as the 
    Amazon S3 console; instead you must access it through the AWS Storage Gateway service.

Gateway-Stored Volumes 
Gateway-Stored volumes allow you to store your data on your on-premises storage and asynchronously back 
    up that data to Amazon S3. 
This provides low-latency access to all data, while also providing off-site backups taking advantage of 
    the durability of Amazon S3. 
The data is backed up in the form of Amazon Elastic Block Store (Amazon EBS) snapshots. 
While each volume is limited to a maximum size of 16TB, a single gateway can support up to 32 volumes 
    for a maximum storage of 512TB.

Gateway Virtual Tape Libraries (VTL) 
Gateway-VTL offers a durable, cost-effective solution to archive your data on the AWS cloud. 
The VTL interface lets you leverage your existing tape-based backup application infrastructure to store 
    data on virtual tape cartridges that you create on your Gateway-VTL.
A gateway can contain up to 1,500 tapes (1 PB) of total tape data. 
Virtual tapes appear in your gateway’s VTL, a virtualized version of a physical tape library.    &lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;AWS-Directory-Service&quot;&gt;AWS Directory Service&lt;a class=&quot;anchor-link&quot; href=&quot;#AWS-Directory-Service&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;AWS Directory Service is a managed service offering that provides directories that contain information 
    about your organization, including users, groups, computers, and other resources.

AWS Directory Service for Microsoft Active Directory(Enterprise Edition),also referred to as Microsoft AD
Simple AD
AD Connector
    AD Connector is a proxy service for connecting your on-premises Microsoft Active Directory to the 
        AWS cloud without requiring complex directory synchronization or the cost and complexity of 
        hosting a federation infrastructure.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;AWS-Key-Management-Service-(KMS)-and-AWS-CloudHSM&quot;&gt;AWS Key Management Service (KMS) and AWS CloudHSM&lt;a class=&quot;anchor-link&quot; href=&quot;#AWS-Key-Management-Service-(KMS)-and-AWS-CloudHSM&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;AWS KMS: A service enabling you to generate, store, enable/disable, and delete symmetric keys
AWS CloudHSM: A service providing you with secure cryptographic key storage by making Hardware 
    Security Modules (HSMs) available on the AWS cloud

Customer Managed Keys 
AWS KMS uses a type of key called a Customer Master Key (CMK) to encrypt and decrypt data.
CMKs are the fundamental resources that AWS KMS manages. 
They can be used inside of AWS KMS to encrypt or decrypt up to 4 KB of data directly. 
They can also be used to encrypt generated data keys that are then used to encrypt or decrypt larger 
    amounts of data outside of the service.

Data Keys 
You use data keys to encrypt large data objects within your own application outside AWS KMS.
When you call GenerateDataKey, AWS KMS returns a plaintext version of the key and ciphertext that 
    contains the key encrypted under the specified CMK. 
AWS KMS tracks which CMK was used to encrypt the data key.
You use the plaintext data key in your application to encrypt data, and you typically store the 
    encrypted key alongside your encrypted data.
To decrypt data in your application, pass the encrypted data key to the Decrypt function. 
AWS KMS uses the associated CMK to decrypt and retrieve your plaintext data key. 
Use the plaintext key to decrypt your data, and then remove the key from memory.

AWS CloudHSM 
AWS CloudHSM helps you meet corporate, contractual, and regulatory compliance requirements for data 
    security by using dedicated HSM appliances within the AWS cloud. 
An HSM is a hardware appliance that provides secure key storage and cryptographic operations within a 
    tamper-resistant hardware module. 
HSMs are designed to securely store cryptographic key material and use the key material without 
    exposing it outside the cryptographic boundary of the appliance.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;AWS-CloudTrail&quot;&gt;AWS CloudTrail&lt;a class=&quot;anchor-link&quot; href=&quot;#AWS-CloudTrail&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;AWS CloudTrail provides visibility into user activity by recording API calls made on your account. 
AWS CloudTrail records important information about each API call, including the name of the API, 
    the identity of the caller, the time of the API call, the request parameters, and the response 
    elements returned by the AWS service

A Trail That Applies to All Regions 
    When you create a trail that applies to all AWS regions, AWS CloudTrail creates the same trail in each 
    region, records the log files in each region, and delivers the log files to the single Amazon S3 
    bucket (and optionally to the Amazon CloudWatch Logs log group) that you specify. 
    This is the default option when you create a trail using the AWS CloudTrail console.

A Trail That Applies to One Region 
    You specify a bucket that receives events only from that region. 
    The bucket can be in any region that you specify. 
    If you create additional individual trails that apply to specific regions, you can have those 
        trails deliver event logs to a single Amazon S3 bucket.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Amazon-Kinesis&quot;&gt;Amazon Kinesis&lt;a class=&quot;anchor-link&quot; href=&quot;#Amazon-Kinesis&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Amazon Kinesis is a platform for handling massive streaming data on AWS, offering powerful services 
    to make it easy to load and analyze streaming data and also providing the ability for you to build 
    custom streaming data applications for specialized needs.

Amazon Kinesis Firehose:A service enabling you to load massive volumes of streaming data into AWS
Amazon Kinesis Streams:A service enabling you to build custom applications for more complex analysis 
    of streaming data in real time
Amazon Kinesis Analytics:A service enabling you to easily analyze streaming data real time with standard SQL

Amazon Kinesis Firehose 
    Amazon Kinesis Firehose receives stream data and stores it in Amazon S3, Amazon Redshift, or Amazon
    Elasticsearch. You do not need to write any code; just create a delivery stream and configure the
    destination for your data. Clients write data to the stream using an AWS API call and the data is
    automatically sent to the proper destination.

Amazon Kinesis Streams 
    Amazon Kinesis Streams enable you to collect and process large streams of data records in real time.
    Using AWS SDKs, you can create an Amazon Kinesis Streams application that processes the data as it
    moves through the stream. Because response time for data intake and processing is in near real time,
    the processing is typically lightweight. Amazon Kinesis Streams can scale to support nearly limitless 
    data streams by distributing incoming data across a number of shards&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Amazon-Elastic-MapReduce-(Amazon-EMR)&quot;&gt;Amazon Elastic MapReduce (Amazon EMR)&lt;a class=&quot;anchor-link&quot; href=&quot;#Amazon-Elastic-MapReduce-(Amazon-EMR)&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Amazon Elastic MapReduce (Amazon EMR) provides you with a fully managed, on-demand Hadoop framework. 
Amazon EMR reduces the complexity and up-front costs of setting up Hadoop and, combined with the scale of 
AWS, gives you the ability to spin up large Hadoop clusters instantly and start processing within minutes.

Hadoop Distributed File System (HDFS) 
HDFS is the standard file system that comes with Hadoop. 
All data is replicated across multiple instances to ensure durability. Amazon EMR can use Amazon EC2 
instance storage or Amazon EBS for HDFS. When a cluster is shut down, instance storage is lost and the 
data does not persist. HDFS can also make use of Amazon EBS storage, trading in the cost effectiveness 
of instance storage for the ability to shut down a cluster without losing data.

EMR File System (EMRFS) 
EMRFS is an implementation of HDFS that allows clusters to store data on Amazon S3.
EMRFS allows you to get the durability and low cost of Amazon S3 while preserving your data even if the 
cluster is shut down.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;AWS-Data-Pipeline&quot;&gt;AWS Data Pipeline&lt;a class=&quot;anchor-link&quot; href=&quot;#AWS-Data-Pipeline&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;AWS Data Pipeline is a web service that helps you reliably process and move data between different AWS 
compute and storage services, and also on-premises data sources, at specified intervals. 
With AWS Data Pipeline, you can regularly access your data where it’s stored, transform and process it 
at scale, and efficiently transfer the results to AWS services such as Amazon S3, Amazon Relational 
Database Service (Amazon RDS), Amazon DynamoDB, and Amazon EMR.

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;/continuouslearning/images/copied_from_nb/my_icons/Pipeline.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;AWS-Import/Export&quot;&gt;AWS Import/Export&lt;a class=&quot;anchor-link&quot; href=&quot;#AWS-Import/Export&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;AWS Snowball 
AWS Snowball uses Amazon-provided shippable storage appliances shipped through UPS. 
Each AWS Snowball is protected by AWS KMS and made physically rugged to secure and protect your data 
while the device is in transit. 
At the time of this writing, AWS Snowballs come in two sizes: 50TB and 80TB, and the availability of 
each varies by region.
You can import and export data between your on-premises data storage locations and Amazon S3.

AWS Import/Export Disk 
AWS Import/Export Disk supports transfers data directly onto and off of storage devices you own using 
the Amazon high-speed internal network.
You can import your data into Amazon Glacier and Amazon EBS, in addition to Amazon S3.
You can export data from Amazon S3.
Encryption is optional and not enforced.
Unlike AWS Snowball, AWS Import/Export Disk has an upper limit of 16TB.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;DevOps&quot;&gt;DevOps&lt;a class=&quot;anchor-link&quot; href=&quot;#DevOps&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;AWS OpsWorks is a configuration management service that helps you configure and operate applications 
using Chef.    
You can define an application’s architecture and the specification of each component, including 
package installation, software configuration, and resources such as storage.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;/continuouslearning/images/copied_from_nb/my_icons/Ops.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;The stack is the core AWS OpsWorks component. 
It is basically a container for AWS resources—Amazon EC2 instances, Amazon RDS database instances, 
and so on—that have a common purpose and make sense to be logically managed together.
You define the elements of a stack by adding one or more layers. 
A layer represents a set of resources that serve a particular purpose, such as load balancing, 
web applications, or hosting a database server.
One of the key AWS OpsWorks features is a set of lifecycle events that automatically run a specified 
set of recipes at the appropriate time on each instance.
Finally, AWS OpsWorks sends all of your resource metrics to Amazon CloudWatch, making it easy to view
graphs and set alarms to help you troubleshoot and take automated action based on the state of your resources
Use Cases   
    Host Multi-Tier Web Applications 
    Support Continuous Integration&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;AWS-CloudFormation&quot;&gt;AWS CloudFormation&lt;a class=&quot;anchor-link&quot; href=&quot;#AWS-CloudFormation&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;AWS CloudFormation is a service that helps you model and set up your AWS resources so that you can spend
less time managing those resources and more time focusing on your applications that run in AWS.
You create AWS CloudFormation templates to define your AWS resources and their properties. 
A template is a text file whose format complies with the JSON standard. 
AWS CloudFormation uses these templates as blueprints for building your AWS resources.

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;/continuouslearning/images/copied_from_nb/my_icons/CF.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Use Case
    Quickly Launch New Test Environments
    Reliably Replicate Configuration Between Environments
    Launch Applications in New AWS Regions&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;AWS-Elastic-Beanstalk&quot;&gt;AWS Elastic Beanstalk&lt;a class=&quot;anchor-link&quot; href=&quot;#AWS-Elastic-Beanstalk&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;AWS Elastic Beanstalk is the fastest and simplest way to get an application up and running on AWS. 
Developers can simply upload their application code, and the service automatically handles all of the 
details, such as resource provisioning, load balancing, Auto Scaling, and monitoring.   &lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;AWS-Trusted-Advisor&quot;&gt;AWS Trusted Advisor&lt;a class=&quot;anchor-link&quot; href=&quot;#AWS-Trusted-Advisor&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;AWS Trusted Advisor draws upon best practices learned from the aggregated operational history of serving 
over a million AWS customers
AWS Trusted Advisor provides best practices in four categories: cost optimization, security, 
fault tolerance, and performance improvement&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;AWS-Config&quot;&gt;AWS Config&lt;a class=&quot;anchor-link&quot; href=&quot;#AWS-Config&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;AWS Config is a fully managed service that provides you with an AWS resource inventory, configuration 
history, and configuration change notifications to enable security and governance&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ankush Agarwal</name></author><summary type="html"></summary></entry><entry><title type="html">DNS &amp;amp; Route 53</title><link href="https://ankushagarwal87.github.io/continuouslearning/aws/dns/route%2053/2020/07/24/Domain-Name-System-(DNS)-and-Amazon-Route-53.html" rel="alternate" type="text/html" title="DNS &amp; Route 53" /><published>2020-07-24T00:00:00-05:00</published><updated>2020-07-24T00:00:00-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/aws/dns/route%2053/2020/07/24/Domain-Name-System-(DNS)-and-Amazon-Route-53</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/aws/dns/route%2053/2020/07/24/Domain-Name-System-(DNS)-and-Amazon-Route-53.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-07-24-Domain Name System (DNS) and Amazon Route 53.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Domain-Name-System-(DNS)-Concepts&quot;&gt;Domain Name System (DNS) Concepts&lt;a class=&quot;anchor-link&quot; href=&quot;#Domain-Name-System-(DNS)-Concepts&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Top-Level Domains (TLDs)
    A Top-Level Domain (TLD) is the most general part of the domain. 
    The TLD is the farthest portion to the right (as separated by a dot). 
    Common TLDs are .com, .net, .org, .gov, .edu, and .io.

 Domain Names
     Each domain name becomes registered in a central database, known as the WhoIS database.

 IP Addresses
 Hosts
 Subdomains
 Fully Qualified Domain Name (FQDN)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;/continuouslearning/images/copied_from_nb/my_icons/DNS.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Name Servers
    A name server is a computer designated to translate domain names into IP addresses.
Zone Files
    A zone file is a simple text file that contains the mappings between domain names and IP addresses.
Top-Level Domain (TLD) Name Registrars&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Amazon-Route-53-Overview&quot;&gt;Amazon Route 53 Overview&lt;a class=&quot;anchor-link&quot; href=&quot;#Amazon-Route-53-Overview&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Amazon Route 53 is a highly available and scalable cloud DNS web service
Amazon Route 53 performs three main functions:
    Domain registration
    DNS service
    Health checking
When you create a resource record set, you choose a routing policy, which determines how Amazon Route 53
    responds to queries. 
Routing policy options are simple, weighted, latency-based, failover, and geolocation.
Routing policies can be associated with health checks, so resource health status is considered before it 
    even becomes a candidate in a conditional decision tree.

Simple
This is the default routing policy when you create a new resource. 
Use a simple routing policy when you have a single resource that performs a given function for your domain

Weighted
With weighted DNS, you can associate multiple resources (such as Amazon Elastic Compute Cloud [Amazon EC2]
    instances or Elastic Load Balancing load balancers) with a single DNS name.

Latency-Based
Latency-based routing allows you to route your traffic based on the lowest network latency for your end 
    user (for example, using the AWS region that will give them the fastest response time).

Failover
Use a failover routing policy to configure active-passive failover, in which one resource takes all the 
    traffic when it’s available and the other resource takes all the traffic when the first resource 
    isn’t available.

Geolocation
Geolocation routing lets you choose where Amazon Route 53 will send your traffic based on the 
    geographic location of your users (the location from which DNS queries originate). &lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ankush Agarwal</name></author><summary type="html"></summary></entry><entry><title type="html">Amazon ElastiCache</title><link href="https://ankushagarwal87.github.io/continuouslearning/aws/elasticache/2020/07/24/Amazon-ElastiCache.html" rel="alternate" type="text/html" title="Amazon ElastiCache" /><published>2020-07-24T00:00:00-05:00</published><updated>2020-07-24T00:00:00-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/aws/elasticache/2020/07/24/Amazon-ElastiCache</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/aws/elasticache/2020/07/24/Amazon-ElastiCache.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-07-24-Amazon ElastiCache.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Amazon-ElastiCache&quot;&gt;Amazon ElastiCache&lt;a class=&quot;anchor-link&quot; href=&quot;#Amazon-ElastiCache&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;With Amazon ElastiCache, you can choose from a Memcached or Redis protocol-compliant cache engine and 
    quickly launch a cluster within minutes.
Memcached provides a very simple interface that allows you to write and read objects into 
    in-memory key/value data stores.
With Amazon ElastiCache, you can elastically grow and shrink a cluster of Memcached nodes to meet your 
    demands. 
You can partition your cluster into shards and support parallelized operations for very high 
    performance throughput. 

Memcached deals with objects as blobs that can be retrieved using a unique key.
Unlike Memcached, Redis supports the ability to persist the in-memory data onto disk. 
This allows you to create snapshots that back up your data and then recover or replicate from the backups.
Redis clusters also can support up to five read replicas to offload read requests. 
In the event of failure of the primary node, a read replica can be promoted and become the new master 
    using Multi-AZ replication groups.
Redis also has advanced features that make it easy to sort and rank data.
A single Memcached cluster can contain up to 20 nodes. 
Redis clusters are always made up of a single node; however, multiple clusters can be grouped into a 
    Redis replication group.

Horizontal Scaling 
Amazon ElastiCache also adds additional functionality that allows you to scale horizontally the size of 
    your cache environment. 
This functionality differs depending on the cache engine you have selected. 
With Memcached, you can partition your data and scale horizontally to 20 nodes or more. 
With Auto Discovery, your application can discover Memcached nodes that are added or removed from a cluster
While you can only have one node handling write commands, you can have up to five read replicas 
    handling read-only requests.

Vertical Scaling
You can, however, quickly spin up a new cluster with the desired cache node types and start redirecting 
    traffic to the new cluster. 
It’s important to understand that a new Memcached cluster always starts empty, while a Redis cluster 
    can be initialized from a backup.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ankush Agarwal</name></author><summary type="html"></summary></entry><entry><title type="html">SQS, SWF, and SNS</title><link href="https://ankushagarwal87.github.io/continuouslearning/aws/sqs/swf/sns/2020/07/18/SQS,-SWF,-and-SNS.html" rel="alternate" type="text/html" title="SQS, SWF, and SNS" /><published>2020-07-18T00:00:00-05:00</published><updated>2020-07-18T00:00:00-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/aws/sqs/swf/sns/2020/07/18/SQS,-SWF,-and-SNS</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/aws/sqs/swf/sns/2020/07/18/SQS,-SWF,-and-SNS.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-07-18-SQS, SWF, and SNS.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Amazon-Simple-Queue-Service-(Amazon-SQS)&quot;&gt;Amazon Simple Queue Service (Amazon SQS)&lt;a class=&quot;anchor-link&quot; href=&quot;#Amazon-Simple-Queue-Service-(Amazon-SQS)&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Amazon SQS is a fast, reliable, scalable, and fully managed message queuing service.
Amazon SQS makes it simple and cost effective to decouple the components of a cloud application.
You can use Amazon SQS to transmit any volume of data, at any level of throughput

With Amazon SQS, you can offload the administrative burden of operating and scaling a highly 
    available messaging cluster while paying a low price for only what you use.
Amazon SQS ensures delivery of each message at least once and supports multiple readers and writers 
    interacting with the same queue. 
A single queue can be used simultaneously by many distributed application components, with no need for 
    those components to coordinate with one another to share the queue. 
Although most of the time each message will be delivered to your application exactly once, 
    you should design your system to be idempotent

Amazon SQS is engineered to be highly available and to deliver messages reliably and efficiently; 
    however, the service does not guarantee First In, First Out (FIFO) delivery of messages. 
If your system requires that order be preserved, you can place sequencing information in each message 
    so that you can reorder the messages when they are retrieved from the queue.

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;/continuouslearning/images/copied_from_nb/my_icons/SQS.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Delay-Queues-and-Visibility-Timeouts&quot;&gt;Delay Queues and Visibility Timeouts&lt;a class=&quot;anchor-link&quot; href=&quot;#Delay-Queues-and-Visibility-Timeouts&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Delay Queues allow you to postpone the delivery of new messages in a queue for a specific number of seconds. 
If you create a delay queue, any message that you send to that queue will be invisible to consumers 
    for the duration of the delay period.
Amazon SQS supports up to 12 hours’ maximum visibility timeout.
By default, the message visibility timeout is set to 30 seconds
The default message retention period that can be set in Amazon SQS is four days.
The longest configurable message retention period for Amazon SQS is 14 days.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Queue-and-Message-Identifiers&quot;&gt;Queue and Message Identifiers&lt;a class=&quot;anchor-link&quot; href=&quot;#Queue-and-Message-Identifiers&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Amazon SQS uses three identifiers that you need to be familiar with: queue URLs, message IDs, 
    and receipt handles.
Amazon SQS assigns each message a unique ID that it returns to you in the SendMessage response.
Each time you receive a message from a queue, you receive a receipt handle for that message.

Queue Operations, Unique IDs, and Metadata
Message Attributes
Long Polling
    When your application queries the Amazon SQS queue for messages, it calls the function ReceiveMessage.
        ReceiveMessage will check for the existence of a message in the queue and return immediately, 
        either with or without a message. 
    If your code makes periodic calls to the queue, this pattern is sufficient. 
    With long polling, you send a WaitTimeSeconds argument to ReceiveMessage of up to 20 seconds. 
    If there is no message in the queue, then the call will wait up to WaitTimeSeconds for a message to
        appear before returning.

Dead Letter Queues
Access Control        
    You want to grant another AWS account a particular type of access to your queue.
    You want to grant another AWS account access to your queue for a specific period of time.
    You want to grant another AWS account access to your queue only if the requests come from your 
        Amazon EC2 instances.
    You want to deny another AWS account access to your queue.

    Amazon SQS Access Control allows you to assign policies to queues that grant specific interactions 
        to other accounts without that account having to assume IAM roles from your account.

Tradeoff Message Durability and Latency
    Amazon SQS does not return success to a SendMessage API call until the message is durably stored in 
        Amazon SQS.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Amazon-Simple-Workflow-Service-(Amazon-SWF)&quot;&gt;Amazon Simple Workflow Service (Amazon SWF)&lt;a class=&quot;anchor-link&quot; href=&quot;#Amazon-Simple-Workflow-Service-(Amazon-SWF)&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Amazon SWF makes it easy to build applications that coordinate work across distributed components. 
In Amazon SWF, a task represents a logical unit of work that is performed by a component of your 
    application. 
Coordinating tasks across the application involves managing inter-task dependencies, scheduling, and
    concurrency in accordance with the logical flow of the application. 
Amazon SWF gives you full control over implementing and coordinating tasks without worrying about
    underlying complexities such as tracking their progress and maintaining their state.

Workflows
    Using Amazon SWF, you can implement distributed, asynchronous applications as workflows. 
    Workflows coordinate and manage the execution of activities that can be run asynchronously across 
        multiple computing devices and that can feature both sequential and parallel processing.
    When designing a workflow, analyze your application to identify its component tasks, which are represented 
        in Amazon SWF as activities. 
    The workflow’s coordination logic determines the order in which activities are executed.

Workflow Domains
    Domains provide a way of scoping Amazon SWF resources within your AWS account.

Workflow History
    The workflow history is a detailed, complete, and consistent record of every event that occurred 
        since the workflow execution started.

Actors
    Amazon SWF consists of a number of different types of programmatic features known as actors. 
    Actors can be workflow starters, deciders, or activity workers. 
    These actors communicate with Amazon SWF through its API. 
    You can develop actors in any programming language.

Tasks
    Amazon SWF provides activity workers and deciders with work assignments, given as one of three 
        types of tasks: activity tasks, AWS Lambda tasks, and decision tasks.

Task Lists
    Task lists provide a way of organizing the various tasks associated with a workflow. 

Long Polling
    Deciders and activity workers communicate with Amazon SWF using long polling&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Amazon-Simple-Notification-Service-(Amazon-SNS)&quot;&gt;Amazon Simple Notification Service (Amazon SNS)&lt;a class=&quot;anchor-link&quot; href=&quot;#Amazon-Simple-Notification-Service-(Amazon-SNS)&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Amazon SNS follows the publish-subscribe (pub-sub) messaging paradigm, with notifications being delivered 
    to clients using a push mechanism that eliminates the need to check periodically (or poll) for 
    new information and updates
You can use Amazon SNS to send Short Message Service (SMS) messages to mobile device users in the United 
    States or to email recipients worldwide.

Common Amazon SNS Scenarios
    Fanout
    Application and System Alerts
    Push Email and Text Messaging
    Mobile Push Notifications&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ankush Agarwal</name></author><summary type="html"></summary></entry><entry><title type="html">HashiCorp</title><link href="https://ankushagarwal87.github.io/continuouslearning/hashicorp/2020/07/12/HashiCorp.html" rel="alternate" type="text/html" title="HashiCorp" /><published>2020-07-12T00:00:00-05:00</published><updated>2020-07-12T00:00:00-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/hashicorp/2020/07/12/HashiCorp</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/hashicorp/2020/07/12/HashiCorp.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-07-12-HashiCorp.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;&lt;img src=&quot;/continuouslearning/images/copied_from_nb/my_icons/image.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Steps&quot;&gt;Steps&lt;a class=&quot;anchor-link&quot; href=&quot;#Steps&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Options
    CLI Command
    API call
    Web UI

Step 1: Configure Transit Secrets Engine
Step 2: Encrypt Secrets
Step 3: Decrypt ciphertext
Step 4: Rotate the Encryption Key
Step 5: Update Key Configuration
Step 6: Generate Data Key
    Can call API to get encypted key &amp;amp; decrypt the file (no need of sending entire file)

Vault HTTP API imposes a maximum request size of 32MB to prevent a denial of service attack. 
This can be tuned per listener block in the Vault server configuration.


Question
    Why don't have own method of encryption/decryption rather then on service
    How hashicorp validate user (who is asking for key or encrypt/decrypt request)
        https://www.youtube.com/watch?v=lZnrrGxrInk&amp;amp;feature=emb_rel_end
    Do we really need to encrypt data when there is option of delete post processing
    If two files comes at the same time - How ABC will work
    Is single instance work on API/File Integration
    Can we not have FTP connector in the end to send file
        Output Port need to be open 
    Email Connector


Reference
    https://learn.hashicorp.com/vault/encryption-as-a-service/eaas-transit
    https://www.vaultproject.io/api-docs/secret/transit
    https://www.hashicorp.com/blog/how-vault-encrypts-application-data-during-transit-and-at-rest/
    https://www.hashicorp.com/resources/encryption-as-a-service-with-vault-s-transit-secret-engine/


Options
    We can have lambda function trigger when file comes to S3 
    Lambda function will dcrypt &amp;amp; again save to S3 
    Trigger ABC on S3


AWS Integration
    https://www.vaultproject.io/docs/auth/aws
    https://www.vaultproject.io/api/auth/aws
    IAM auth method
        The AWS STS API includes a method, sts:GetCallerIdentity, which allows you to validate the identity 
        of a client. The client signs a GetCallerIdentity query using the AWS Signature v4 algorithm 
        and sends it to the Vault server. The credentials used to sign the GetCallerIdentity request 
        can come from the EC2 instance metadata service for an EC2 instance, or from the AWS environment
        variables in an AWS Lambda function execution, which obviates the need for an operator to manually
        provision some sort of identity material first. However, the credentials can, in principle, come 
        from anywhere, not just from the locations AWS has provided for you.

        AWS Security Token Service (AWS STS) is a web service that enables you to request temporary, 
        limited-privilege credentials for AWS Identity and Access Management (IAM) users

        GetCallerIdentity
            Returns details about the IAM user or role whose credentials are used to call the operation. 
            https://docs.aws.amazon.com/STS/latest/APIReference/API_GetCallerIdentity.html

    EC2 auth method
        Amazon EC2 instances have access to metadata which describes the instance. 
        The Vault EC2 auth method leverages the components of this metadata to authenticate and 
            distribute an initial Vault token to an EC2 instance.

ABC
    An enterprise-level FTP Client is included in the Core edition, which provides an intuitive
    browser-based administrator, extensive security features, user management, file triggers, and 
    detailed audit trails.

Lambda
    https://docs.aws.amazon.com/lambda/latest/dg/with-s3.html&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ankush Agarwal</name></author><summary type="html"></summary></entry></feed>
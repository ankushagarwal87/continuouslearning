<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="https://ankushagarwal87.github.io/continuouslearning/feed.xml" rel="self" type="application/atom+xml" /><link href="https://ankushagarwal87.github.io/continuouslearning/" rel="alternate" type="text/html" /><updated>2022-11-07T01:32:38-06:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/feed.xml</id><title type="html">continuouslearning</title><subtitle>An easy to use blogging platform with support for Jupyter Notebooks.</subtitle><entry><title type="html">Java Interview Question</title><link href="https://ankushagarwal87.github.io/continuouslearning/interview/2022/11/06/Interview-Question-EPAM.html" rel="alternate" type="text/html" title="Java Interview Question" /><published>2022-11-06T00:00:00-05:00</published><updated>2022-11-06T00:00:00-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/interview/2022/11/06/Interview-Question---EPAM</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/interview/2022/11/06/Interview-Question-EPAM.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2021-4-05-Interview Question - EPAM.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Abstraction&quot;&gt;Abstraction&lt;a class=&quot;anchor-link&quot; href=&quot;#Abstraction&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;OOPS Concept
Difference between Abstraction and Encapsulation
What is the use of polymorphism
types of polymorphism  --static &amp;amp; dynamic

https://www.guru99.com/java-data-abstraction.html
What is Abstraction in OOP?

Abstraction is the concept of object-oriented programming that &quot;shows&quot; only essential attributes and &quot;hides&quot; unnecessary information.

Abstraction in Object Oriented Programming solves the issues at the design level.   
Encapsulation solves it implementation level.
Abstraction in Programming is about hiding unwanted details while showing most essential information.
Encapsulation means binding the code and data into a single unit.
Data Abstraction in Java allows focussing on what the information object must contain   
Encapsulation means hiding the internal details or mechanics of how an object does something for security reasons. 

https://www.geeksforgeeks.org/abstraction-in-java-2/
In java, abstraction is achieved by interfaces and abstract classes. We can achieve 100% abstraction using interfaces.
Encapsulation is data hiding(information hiding) while Abstraction is detail hiding(implementation hiding).
While encapsulation groups together data and methods that act upon the data, data abstraction deals with exposing the interface to the user and hiding the details of implementation

https://www.geeksforgeeks.org/difference-between-abstraction-and-encapsulation-in-java-with-examples/?ref=rp
Another way to think about encapsulation is, it is a protective shield that prevents the data from being accessed by the code outside this shield.
Encapsulation can be achieved by Declaring all the variables in the class as private and writing public methods in the class to set and get the values of variables.

Data Abstraction is the property by virtue of which only the essential details are displayed to the user. The trivial or the non-essentials units are not displayed to the user.

https://beginnersbook.com/2013/04/oops-concepts/


Why And When To Use &quot;Inheritance&quot; and &quot;Polymorphism&quot;?
It is useful for code reusability: reuse attributes and methods of an existing class when you create a new class.

https://stackoverflow.com/questions/11064409/why-to-use-polymorphism
One of the best cases one can make for using polymorphism is the ability to refer to interfaces rather than implementations.

https://stackify.com/oop-concept-polymorphism/
Within an inheritance hierarchy, a subclass can override a method of its superclass. That enables the developer of the subclass to customize or completely replace the behavior of that method.
It also creates a form of polymorphism. Both methods, implemented by the super- and subclass, share the same name and parameters but provide different functionality.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Exception&quot;&gt;Exception&lt;a class=&quot;anchor-link&quot; href=&quot;#Exception&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;why is there checked exceptions
Checked vs Unchecked
synchronous and asynchronous exceptions
Why we need custom exceptions-How to define it
Should we catch Throwable class
New Try-With-Resource

https://howtodoinjava.com/java/exception-handling/checked-vs-unchecked-exceptions-in-java/
Java forces you to handle these error scenarios in some manner in your application code. 
They will come immediately into your face, once you start compiling your program

Java also provides UncheckedExceptions, the occurrences of which are not checked by the compiler. 
They will come into life/occur into your program, once any buggy code is executed.

A method is not forced by compiler to declare the unchecked exceptions thrown by its implementation. 
Generally, such methods almost always do not declare them, as well.
Unchecked Exceptions are subclasses of RuntimeException. 
Example of unchecked exceptions are : ArithmeticException, ArrayStoreException, ClassCastException and so on.

Remember the biggest difference between checked and unchecked exceptions is that checked exceptions are forced by compiler and used to indicate exceptional conditions that are out of the control of the program (for example, I/O errors), while unchecked exceptions are occurred during runtime and used to indicate programming errors (for example, a null pointer).

https://howtodoinjava.com/java/exception-handling/asynchronous-and-synchronous-exceptions-in-java/
Synchronous exceptions happen at a specific program statement
Asynchronous exceptions can raise practically anywhere
Examples of naturally asynchronous events include pressing Ctrl-C to interrupt a program

https://howtodoinjava.com/best-practices/java-exception-handling-best-practices/

https://www.baeldung.com/java-catch-throwable-bad-practice
The Throwable class has two direct sub-classes – namely, the Error and Exception classes.
Error and its sub-classes are unchecked exceptions, while the sub-classes of Exception can be either checked or unchecked exceptions.

The general rule in handling exceptions is that the try-catch block must be as specific as possible in catching exceptions. That is, a catch-all scenario must be avoided.
Catching Throwable in our case violates this general rule. 
To react to recoverable and irrecoverable situations separately, the calling code would have to inspect the instance of the Throwable object inside the catch block.

https://stackoverflow.com/questions/6083248/is-it-a-bad-practice-to-catch-throwable
Throwable is the superclass of all the errors and excetions. If you use Throwable in a catch clause, it will not only catch all exceptions, it will also catch all errors. Errors are thrown by the JVM to indicate serious problems that are not intended to be handled by an application. Typical examples for that are the OutOfMemoryError or the StackOverflowError. Both are caused by situations that are outside of the control of the application and can’t be handled. So you shouldn't catch Throwables unless your are pretty confident that it will only be an exception reside inside Throwable

https://stackify.com/best-practices-exceptions-java/
You can use it if your resource implements the AutoCloseable interface. That’s what most Java standard resources do.When you open the resource in the try clause, it will get automatically closed after the try block got executed, or an exception handled.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Singleton&quot;&gt;Singleton&lt;a class=&quot;anchor-link&quot; href=&quot;#Singleton&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;what is singleton class.
How to create one
Can multiple instance call the method at once -- what will happen -using synchronised &amp;amp; double locking
Early vs Lazy Initialisation
Serializable     

https://www.geeksforgeeks.org/singleton-class-java/
In object-oriented programming, a singleton class is a class that can have only one object (an instance of the class) at a time.

To design a singleton class:

Make constructor as private.
Write a static method that has return type object of this singleton class. 
Here, the concept of Lazy initialization is used to write this static method.

https://www.javatpoint.com/singleton-design-pattern-in-java

Static member: It gets memory only once because of static, it contains the instance of the Singleton class.
Private constructor: It will prevent to instantiate the Singleton class from outside the class.
Static factory method: This provides the global point of access to the Singleton object and returns the instance to the caller.

https://www.journaldev.com/1377/java-singleton-design-pattern-best-practices-examples
Serialization and Singleton
It destroys the singleton pattern, to overcome this scenario all we need to do it provide the implementation of readResolve() method.

https://en.wikipedia.org/wiki/Singleton_pattern
Anti-pattern considerations

The Singleton Pattern is generally considered an &quot;Anti-Pattern&quot; for the following reasons:
Singleton classes break object-oriented design principles

It cannot be inherited from. To add new functionality, a new class cannot be descended to contain that functionality, breaking Separation of Concern.
No control over creation. It is impossible to tell if a reference is of an existing instance or a new instance.
Prevents dependency injection. As there is only a single instance of the class, a dependency cannot be injected into it. If done via a property, the dependency is changed for all references to that instance.

Singleton classes do not allow for test-driven development (TDD).

As there is no control over creation, a &quot;clean&quot; instance of the object cannot be used for each test.
Without dependency injection mock objects cannot be used in tests.

https://www.edureka.co/blog/singleton-class-in-java/
What is a Singleton Class in Java?

In layman terms, a Singleton class in Java is the class which allows access to it through a single instance at a time. This design pattern is for restricting the unnecessary instantiation of a class and ensuring that only one object of the class exists at any point of time per JVM instance

But why do we need a Singleton Class in the first place?

Well, by restricting the instance creation of a class it saves memory space as now the object won’t be created each time a new request is made. Instead, a single object will be used repeatedly. This is the reason the Singleton pattern in Java is mostly used with multi-threaded and database applications. It is basically used for logging, caching, thread pooling, configuration settings and many more.

https://www.oracle.com/technical-resources/articles/java/singleton.html
Multiple Singletons in Two or More Virtual Machines

When copies of the Singleton class run in multiple VMs, an instance is created for each machine. That each VM can hold its own Singleton might seem obvious but, in distributed systems such as those using EJBs, Jini, and RMI, it's not so simple. Since intermediate layers can hide the distributed technologies, to tell where an object is really instantiated may be difficult.

Multiple Singletons Simultaneously Loaded by Different Class Loaders

When two class loaders load a class, you actually have two copies of the class, and each one can have its own Singleton instance. That is particularly relevant in servlets running in certain servlet engines (iPlanet for example), where each servlet by default uses its own class loader. Two different servlets accessing a joint Singleton will, in fact, get two different objects.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ankush Agarwal</name></author><summary type="html"></summary></entry><entry><title type="html">SAP - C01 - Identity and Federation</title><link href="https://ankushagarwal87.github.io/continuouslearning/aws/sap/2022/05/14/SAP-WIP.html" rel="alternate" type="text/html" title="SAP - C01 - Identity and Federation" /><published>2022-05-14T00:00:00-05:00</published><updated>2022-05-14T00:00:00-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/aws/sap/2022/05/14/SAP-WIP</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/aws/sap/2022/05/14/SAP-WIP.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2022-05-14-SAP-WIP.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;IAM&quot;&gt;IAM&lt;a class=&quot;anchor-link&quot; href=&quot;#IAM&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Types
    Users  - Long Term Credentials
    Groups
    Roles   - Short Term Credentials
        Service Roles
            Allow AWS services like EC2, Lambda, or others to perform actions in this account.
            Service Roles for EC2 Instance 
                Only One role can be assigned to EC2 Instance at a time.
            Service Linked Roles
                Service-linked roles are predefined by the service and include all the permissions that the  
                service requires to call other AWS services on your behalf.
        Cross Account Roles
            Allow entities in other AWS accounts belonging to perform actions.
        Web identity
            Allows users federated by the specified external web identity provider to assume this role.
        SAML 2.0 federation
            Allow users federated with SAML 2.0 from a corporate directory to perform actions.

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html&quot;&gt;https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html&lt;/a&gt;)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Policies
   AWS Managed
   Customer Managed
   Inline Policies
   Resouce Based Policies
        S3, SQS, SNS, KMS, etc

   Policy Structure
        Effect - Allow, Deny 
        Action - Put, Get...
        Resource - ARN
        Condition - Ip Address....
        Principal - At resource level policy

    Explicit DENY precedence over ALLOW.

IAM Security Tools
    Credential Report - Account Level - Users
    Access Advisor - User Level
    Access Analyzer - Resource Level 

IAM Role vs Resource Policy
    when you assume a role,whether it be a user, an application or a service you're going to give 
    up all your original permissions and you're going to take the permissions assigned to the role.

IAM Permission Boundary 
    Supported for users and roles, but not groups.
    Allow you to set the maximum permissions an IAM entity can get.
    Can be used with AWS Organization SCP&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;STS&quot;&gt;STS&lt;a class=&quot;anchor-link&quot; href=&quot;#STS&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Allow us to assume roles across different accounts within the same accounts and enable identity federation.
Credentials are going to be temporary between 15 minutes to 12 hours.
Ability to revoke active session &amp;amp; crdential for a role - AWSRevokeOlderSession
Can Add MFA for assuming Role - which can add extra security 

Provide access to AWS accounts owned by third parties
    Zone of trust is all the accounts and organizations that you own.
    Outside Zone of Trust = 3rd Parties
    External ID is a secret between you and the third party, and you have to define it.

    Confused Deputy 
        If any other account try to use 3rd Party Account to assume Role
        External ID - will prevent such attack

STS API
    AssumedRole
    AssumedRoleWithSAML
    AssumedRoleWithWebIdentity
    GetSessionToken - For MFA
    GetFederationToken
         A typical use is in a proxy application that gets temporary security credentials on 
         behalf of distributed applications inside a corporate network. 

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&quot;https://aws.amazon.com/blogs/security/understanding-the-api-options-for-securely-delegating-access-to-your-aws-account/&quot;&gt;https://aws.amazon.com/blogs/security/understanding-the-api-options-for-securely-delegating-access-to-your-aws-account/&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Identity-Federation&quot;&gt;Identity Federation&lt;a class=&quot;anchor-link&quot; href=&quot;#Identity-Federation&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Corporate having own Identity System
Mobile/Web Application access to AWS resources
Flavours
    SAML2.0            
    Custom Identity Broker
    Web Identity Federation with(out) Cognito
    Web Identity Federation with Cognito
    SSO       

SAML2.0
    No need to create IAM users for each employee
    Need to setup trust between IAM &amp;amp; SAML2.0 Identity Provider
    Uses - AssumeRoleWithSAML
    Old Way - AWS SSO is new, managed &amp;amp; simpler way.

Custom Identity Broker
    Identity Broker authenticates users &amp;amp; request temporary credential from AWS
    Uses - AssumeRole or GetFederationToken

Web Identity Federation with(out) Cognito
    OpenID Connect Compatible IdP    - https://www.youtube.com/watch?v=t18YB3xDfXI
    Google, Facebook, Amazon

Web Identity Federation with Cognito
    Support anonymous users
    Support MFA
    Data Synchronization

Web Identity Federation IAM Policy
    We can identify the user with an IAM policy variable &amp;amp; apply conditions in Policy.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;AWS-Directory-Service&quot;&gt;AWS Directory Service&lt;a class=&quot;anchor-link&quot; href=&quot;#AWS-Directory-Service&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Microsoft Active Directory
    Database of objects - User Accounts, Computers...
Active Directory Federation Service
    Provides SSO across applications
    SAML across 3rd Party, AWS, Office 365

AWS Managed Microsoft AD
    Create your own AD in AWS
    Managed uers locally
    Supports MFA
    Establish Trust relationship with on-premises AD

AD Connector
    Directory Gateway(proxy) to redirect to on-premises AD
    Users are managed on on-premises AD
    Supports MFA

Simple AD
    AD compatible managed directory on AWS
    Cannot be joined with on-premises AD

Connect with on-premises AD - AWS Managed Microsoft AD
    Must Establish a Direct Connect or VPN Connection
    Replication doesn't happen
    Forest Trust Type
        AWS trust On-prmises
        On-premises trust AWS
        Both trust each other     

Active Directory Replication
    Create a replica of AD in EC2
    Establish trust between AWS Managed Microsoft AD &amp;amp; EC2

Connect with on-premises AD - AD Connector
    No caching
    Direct Connect or VPN Connection
    Doesn't work with SQL Server

Simple AD
    Supports joining EC2 instances, manage users &amp;amp; groups
    Doesn't support MFA, RDS SQL Server, AWS SSO
    Users - 500-5000
    Lower Cost, Low Scale
    No trust relationship&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ankush Agarwal</name></author><summary type="html"></summary></entry><entry><title type="html">Java Interview Question</title><link href="https://ankushagarwal87.github.io/continuouslearning/interview/2021/03/27/Interview-Question-Congnizant.html" rel="alternate" type="text/html" title="Java Interview Question" /><published>2021-03-27T00:00:00-05:00</published><updated>2021-03-27T00:00:00-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/interview/2021/03/27/Interview-Question---Congnizant</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/interview/2021/03/27/Interview-Question-Congnizant.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2021-03-27-Interview Question - Congnizant.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Topics&quot;&gt;Topics&lt;a class=&quot;anchor-link&quot; href=&quot;#Topics&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;OOPS
Core Java 
    JVM
    Collection
    Generics
    Concurrency
    Synchronised
    Serializable
    Sticky
    Inner Class
    Beans
    Exception
Webservice 
    SOAP
    REST
EE
    Spring
    Microservices
Java 8
    Lambda
    Streams
DB Framework
    Hibernate
    JDBC
Messaging Framework
    JMS
    Camel
Version Control
    Git
Build
    Maven
    Packaging
Deployment
    Jenkins
    Bamboo
Scan
    Sonar
    Fortify
    Whitesource
Automation
    Selenium
    Cucumber
Junit
    Mockito
Code Coverage
    Jacoco
Logging
    Different framework
    Kibana
    ELK
Design Pattern
Security&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Association,-Composition-and-Aggregation-in-Java&quot;&gt;Association, Composition and Aggregation in Java&lt;a class=&quot;anchor-link&quot; href=&quot;#Association,-Composition-and-Aggregation-in-Java&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Different type of association
Difference between Composition &amp;amp; Aggregation
When to use Composition or Aggregation
How to create Composition
Dept - Students --- Aggregation
Building -- Rooms --- Composition
- I have three classes A, B, and C and i want to access methods of A and B class into C class and you have below option which one you will prefer.
  a. Aggregation   ---ideally this but also depends on relationship &amp;amp; lifecycle
  b. Composition   ---
  c. Inheritance   ---variable not needed so should not use it


https://www.geeksforgeeks.org/association-composition-aggregation-java/
In Object-Oriented programming, an Object communicates to other Object to use functionality and services provided by that object. Composition and Aggregation are the two forms of association.
Association is relation between two separate classes which establishes through their Objects. 
Association can be one-to-one, one-to-many, many-to-one, many-to-many.

    Dependency: Aggregation implies a relationship where the child can exist independently of the parent. For example, Bank and Employee, delete the Bank and the Employee still exist. whereas Composition implies a relationship where the child cannot exist independent of the parent. Example: Human and heart, heart don’t exist separate to a Human
Type of Relationship: Aggregation relation is “has-a” and composition is “part-of” relation.
Type of association: Composition is a strong Association whereas Aggregation is a weak Association.

https://www.baeldung.com/java-composition-aggregation-association
Composition is a “belongs-to” type of relationship. It means that one of the objects is a logically larger     structure, which contains the other object. In other words, it's part or member of the other object.
Alternatively, we often call it a “has-a” relationship (as opposed to an “is-a” relationship, which is inheritance).

Aggregation is also a “has-a” relationship. What distinguishes it from composition, that it doesn't involve owning. As a result, the lifecycles of the objects aren't tied: every one of them can exist independently of each other.

https://howtodoinjava.com/java/oops/association-aggregation-composition/
We call association those relationships whose objects have an independent lifecycle and where there is no ownership between the objects.

https://stackoverflow.com/questions/11881552/implementation-difference-between-aggregation-and-composition-in-java
In the case of composition, the Engine is completely encapsulated by the Car. There is no way for the outside world to get a reference to the Engine. The Engine lives and dies with the car. With aggregation, the Car also performs its functions through an Engine, but the Engine is not always an internal part of the Car. Engines may be swapped, or even completely removed. Not only that, but the outside world can still have a reference to the Engine, and tinker with it regardless of whether it's in the Car. 

For Composition it is necessary that the dependent object is always created with the identity of its associated object. You can use an inner class for the same.

https://javarevisited.blogspot.com/2014/02/ifference-between-association-vs-composition-vs-aggregation.html#axzz6q96CC4zv
The composition is stronger than Aggregation.  In Short, a relationship between two objects is referred to as an association, and an association is known as composition when one object owns another while an association is known as aggregation when one object uses another object.

Read more: https://javarevisited.blogspot.com/2014/02/ifference-between-association-vs-composition-vs-aggregation.html#ixzz6q9S2LNNc&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Abstract-class-and-Interface.&quot;&gt;Abstract class and Interface.&lt;a class=&quot;anchor-link&quot; href=&quot;#Abstract-class-and-Interface.&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Difference between Abstract class and Interface in Java 8
Why constructor in Abstract class if it can't be instantiated
Why difference in Interface was being done in Java 8
when to use abstract class and interface

Read more: https://www.java67.com/2017/08/difference-between-abstract-class-and-interface-in-java8.html#ixzz6qF6pGuYn
Ever since JDK 8 has allowed concrete (non-abstract) methods on the interface like default and static methods, many of my readers have asked me how should they answer the classical abstract class vs interface questions. Earlier, an interface cannot have any concrete methods and that was the main difference between abstract class and interface but now that is not the case.

the main difference between an abstract class and interface in Java 8 is the fact that an abstract class is a class and an interface is an interface. A class can have a state which can be modified by non-abstract methods but an interface cannot have the state because they can't have instance variables.

The second difference is that an interface cannot have a constructor even in Java 8 but you may remember that abstract class can also have a constructor in Java.

https://www.journaldev.com/1607/difference-between-abstract-class-and-interface-in-java
Interface or Abstract Class

Whether to choose between Interface or abstract class for providing a contract for subclasses is a design decision and depends on many factors. Let’s see when Interfaces are the best choice and when can we use abstract classes.

Java doesn’t support multiple class level inheritance, so every class can extend only one superclass. But a class can implement multiple interfaces. So most of the times Interfaces are a good choice for providing the base for class hierarchy and contract. Also coding in terms of interfaces is one of the best practices for coding in java.
If there are a lot of methods in the contract, then abstract class is more useful because we can provide a default implementation for some of the methods that are common for all the subclasses. Also if subclasses don’t need to implement a particular method, they can avoid providing the implementation but in case of interface, the subclass will have to provide the implementation for all the methods even though it’s of no use and implementation is just empty block.
If our base contract keeps on changing then interfaces can cause issues because we can’t declare additional methods to the interface without changing all the implementation classes, with the abstract class we can provide the default implementation and only change the implementation classes that are actually going to use the new methods.

Use Abstract classes and Interface both

Using interfaces and abstract classes together is the best approach to design a system. For example, in JDK java.util.List is an interface that contains a lot of methods, so there is an abstract class java.util.AbstractList that provides a skeletal implementation for all the methods of List interface so that any subclass can extend this class and implement only required methods.

We should always start with an interface as the base and define methods that every subclass should implement and then if there are some methods that only certain subclass should implement, we can extend the base interface and create a new interface with those methods.

The subclasses will have the option to chose between the base interface or the child interface to implement according to its requirements.

If the number of methods grows a lot, it’s not a bad idea to provide a skeletal abstract class implementing the child interface and providing flexibility to the subclasses to chose between interface and an abstract class.

An abstract class is a special type of class that cannot be instantiated. An abstract class is designed to be inherited by subclasses that either implement or override its methods.

https://www.guru99.com/interface-vs-abstract-class-java.html

https://dzone.com/articles/when-to-use-abstract-class-and-intreface
Consider using abstract classes if any of these statements apply to your situation:

You want to share code among several closely related classes.
You expect that classes that extend your abstract class have many common methods or fields or require access modifiers other than public (such as protected and private).
You want to declare non-static or non-final fields. This enables you to define methods that can access and modify the state of the object to which they belong.

Consider using interfaces if any of these statements apply to your situation:

You expect that unrelated classes would implement your interface. For example, the interfaces Comparable and Cloneable are implemented by many unrelated classes.
You want to specify the behavior of a particular data type, but not concerned about who implements its behavior.
You want to take advantage of multiple inheritances.

A constructor is used to initializing non-static data members and as there are no non-static data members in the interface, there is no need of constructor in Interface

The main purpose of the constructor is to initialize the newly created object. In abstract class, we have an instance variable, abstract methods, and non-abstract methods. We need to initialize the non-abstract methods and instance variables, therefore abstract classes have a constructor. 

The constructor inside the abstract class can only be called during constructor chaining i.e. when we create an instance of sub-classes. This is also one of the reasons abstract class can have a constructor.


https://stackoverflow.com/questions/2170500/why-do-abstract-classes-in-java-have-constructors
A constructor in Java doesn't actually &quot;build&quot; the object, it is used to initialize fields.

Imagine that your abstract class has fields x and y, and that you always want them to be initialized in a certain way, no matter what actual concrete subclass is eventually created. So you create a constructor and initialize these fields.

Now, if you have two different subclasses of your abstract class, when you instantiate them their constructors will be called, and then the parent constructor will be called and the fields will be initialized.

If you don't do anything, the default constructor of the parent will be called. However, you can use the super keyword to invoke specific constructor on the parent class.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;ArrayList-and-LinkedList&quot;&gt;ArrayList and LinkedList&lt;a class=&quot;anchor-link&quot; href=&quot;#ArrayList-and-LinkedList&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;When will you use LinkedList vs ArrayList
Which one should I use if I need synchronised structure  -- No
How can I make them synchronize  --Collections.synchronizedList
Which can act as a Queue  -- LinkedList since it implement Deque interface too    
Can you implement custom LinkedList
What is the complexity of adding a element in ArrayList -- O(n)  -- array need to be resized
When can you have ConcurrentModificationException 

https://www.javatpoint.com/difference-between-arraylist-and-linkedlist

https://www.geeksforgeeks.org/arraylist-vs-linkedlist-java/    
ArrayList is a part of the collection framework. It is present in the java.util package and provides us dynamic arrays in Java. Though, it may be slower than standard arrays but can be helpful in programs where lots of manipulation in the array is needed. We can dynamically add and remove items. It automatically resizes itself. 

This class implements the LinkedList Data Structure. Linked List are linear data structures where the elements are not stored in contiguous locations and every element is a separate object with a data part and address part. The elements are linked using pointers and addresses. Each element is known as a node. Due to the dynamicity and ease of insertions and deletions, they are preferred over the arrays.

This class implements both the List interface and the Deque interface. Therefore, it can act as a list and a deque.

https://beginnersbook.com/2013/12/difference-between-arraylist-and-linkedlist-in-java/
ArrayList Vs LinkedList
1) Search: ArrayList search operation is pretty fast compared to the LinkedList search operation. get(int index) in ArrayList gives the performance of O(1) while LinkedList performance is O(n).

2) Deletion: LinkedList remove operation gives O(1) performance while ArrayList gives variable performance: O(n) in worst case (while removing first element) and O(1) in best case (While removing last element).

3) Inserts Performance: LinkedList add method gives O(1) performance while ArrayList gives O(n) in worst case. Reason is same as explained for remove.

4) Memory Overhead: ArrayList maintains indexes and element data while LinkedList maintains element data and two pointers for neighbor nodes hence the memory consumption is high in LinkedList comparatively.

Both these classes are non-synchronized and can be made synchronized explicitly by using Collections.synchronizedList method.

When to use LinkedList and when to use ArrayList?

1) As explained above the insert and remove operations give good performance (O(1)) in LinkedList compared to ArrayList(O(n)). Hence if there is a requirement of frequent addition and deletion in application then LinkedList is a best choice.

2) Search (get method) operations are fast in Arraylist (O(1)) but not in LinkedList (O(n)) so If there are less add and remove operations and more search operations requirement, ArrayList would be your best bet.

https://www.baeldung.com/java-arraylist-linkedlist
To add a new item, we should first initialize a brand new array with more capacity and copy all existing items to the new array. Only after copying current elements can we add the new item. Hence, the time complexity is O(n) in the worst case since we have to copy n elements first.

https://stackoverflow.com/questions/322715/when-to-use-linkedlist-over-arraylist-in-java
Also, if you have large lists, keep in mind that memory usage is also different. Each element of a LinkedList has more overhead since pointers to the next and previous elements are also stored. ArrayLists don't have this overhead. However, ArrayLists take up as much memory as is allocated for the capacity, regardless of whether elements have actually been added.

Practice is very different, as LinkedList is a Cache Hostile Data structure. From performance POV - there are very little cases where LinkedList could be better performing than the Cache-friendly ArrayList.

LinkedList takes much more time to accomplish the same job. source Source Code

There are two main reasons for this:

Mainly - that the nodes of the LinkedList are scattered randomly across the memory. RAM (&quot;Random Access Memory&quot;) isn't really random and blocks of memory need to be fetched to cache. This operation takes time, and when such fetches happen frequently - the memory pages in the cache need to be replaced all the time -&amp;gt; Cache misses -&amp;gt; Cache is not efficient. ArrayList elements are stored on continuous memory - which is exactly what the modern CPU architecture is optimizing for.

Secondary LinkedList required to hold back/forward pointers, which means 3 times the memory consumption per value stored compared to ArrayList.

Reverse Iterator
LinkedList can be iterated in reverse direction using descendingIterator() while there is no descendingIterator() in ArrayList , so we need to write our own code to iterate over the ArrayList in reverse direction.

Memory Overhead
Memory overhead in LinkedList is more as compared to ArrayList as a node in LinkedList needs to maintain the addresses of the next and previous node. While In ArrayList each index only holds the actual object(data).

The iterator and listIterator returned by these classes are fail-fast (if list is structurally modified at any time after the iterator is created, in any way except through the iterator’s own remove or add methods, the iterator will throw a ConcurrentModificationException).&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;I-want-to-implement-cache-storage-which-datastructure-you-will-prefer&quot;&gt;I want to implement cache storage which datastructure you will prefer&lt;a class=&quot;anchor-link&quot; href=&quot;#I-want-to-implement-cache-storage-which-datastructure-you-will-prefer&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;https://www.geeksforgeeks.org/lru-cache-implementation/
LinkedHashSet that maintains insertion order of elements

http://java-planet.blogspot.com/2005/08/how-to-set-up-simple-lru-cache-using.html
The other feature - the one we're interested in here - is that LinkedHashMap has an option to use access-order instead of insertion order, and includes a way to remove the least-recently accessed entries automatically. This makes it well suited for creating LRU caches.

https://commons.apache.org/proper/commons-collections/apidocs/org/apache/commons/collections4/map/LRUMap.html&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Synchronized-Hashmap-and-ConcurrentHashMap&quot;&gt;Synchronized Hashmap and ConcurrentHashMap&lt;a class=&quot;anchor-link&quot; href=&quot;#Synchronized-Hashmap-and-ConcurrentHashMap&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;How a HashMap can be Synchronized in Java
Which one is better in term of performance
ConcurrentHashMap vs Hashtable vs Synchronized Map
fail-fast-and-fail-safe-iterators-in-java-

https://crunchify.com/hashmap-vs-concurrenthashmap-vs-synchronizedmap-how-a-hashmap-can-be-synchronized-in-java/
HashMap is a non-synchronized collection class

If you have very highly concurrent application in which you may want to modify or read key value in different threads then it’s ideal to use Concurrent Hashmap    
So what does the thread-safe Map means? If multiple threads access a hash map concurrently, and at least one of the threads modifies the map structurally, it must be synchronized externally to avoid an inconsistent view of the contents.

There are two ways we could synchronized HashMap
Java Collections synchronizedMap() method
Use ConcurrentHashMap

ConcurrentHashMap
You should use ConcurrentHashMap when you need very high concurrency in your project.
It is thread safe without synchronizing the whole map.
Reads can happen very fast while write is done with a lock.
There is no locking at the object level.
The locking is at a much finer granularity at a segment level .

SynchronizedHashMap
Synchronization at Object level.
Every read/write operation needs to acquire lock.
Locking the entire collection is a performance overhead.
This essentially gives access to only one thread to the entire map &amp;amp; blocks all the other threads.
It may cause contention.
SynchronizedHashMap returns Iterator, which fails-fast on concurrent modification.

https://stackoverflow.com/questions/1291836/concurrenthashmap-vs-synchronized-hashmap

https://dzone.com/articles/java-7-hashmap-vs
The performance boost is definitely due to the improved ConcurrentHashMap performance such as the non-blocking get() operation.

https://www.baeldung.com/java-synchronizedmap-vs-concurrenthashmap   
In ConcurrentHashMap, read operations are non-blocking, whereas write operations take a lock on a particular segment or bucket. The default bucket or concurrency level is 16, which means 16 threads can write at any instant after taking a lock on a segment or bucket.

For objects like HashMap, performing concurrent operations is not allowed. Therefore, if we try to update a HashMap while iterating over it, we will receive a ConcurrentModificationException. This will also occur when using synchronizedMap():

Collections.synchronizedMap() and ConcurrentHashMap handle null keys and values differently.
ConcurrentHashMap doesn't allow null in keys or values:
However, when using Collections.synchronizedMap(), null support depends on the input Map. We can have one null as a key and any number of null values when Collections.synchronizedMap() is backed by HashMap or LinkedHashMap, whereas if we're using TreeMap, we can have null values but not null keys.

https://javarevisited.blogspot.com/2011/04/difference-between-concurrenthashmap.html#axzz6qJaVm856
Though all three collection classes are thread-safe and can be used in multi-threaded, concurrent Java application, there is a significant difference between them, which arise from the fact that how they achieve their thread-safety. Hashtable is a legacy class from JDK 1.1 itself, which uses synchronized methods to achieve thread-safety. 
All methods of Hashtable are synchronized which makes them quite slow due to contention if a number of thread increases. 
Synchronized Map is also not very different than Hashtable and provides similar performance in concurrent Java programs. 
The only difference between Hashtable and Synchronized Map is that later is not a legacy and you can wrap any Map to create it's synchronized version by using Collections.synchronizedMap() method.
On the other hand, ConcurrentHashMap is specially designed for concurrent use i.e. more than one thread. By default it simultaneously allows 16 threads to read and write from Map without any external synchronization


https://javaconceptoftheday.com/fail-fast-and-fail-safe-iterators-in-java-with-examples/
A system is called fail-fast if it is shut down immediately when an error is occurred. These systems don’t carry on with the errors. They immediately stop operating when a fault is occurred in the system. The errors in the fail-fast systems are immediately exposed. But, fail-safe systems are not like that. They don’t stop operating even when a fault is occurred in the system. They continue the operation by hiding the errors.

Fail-Fast iterators immediately throw ConcurrentModificationException if a collection is modified while iterating over it. Where as Fail-Safe iterators don’t throw any exceptions if a collection is modified while iterating over it. Because, they operate on the clone of the collection, not on the actual collection

Fail-Fast Iterators In Java :

Fail-Fast iterators, returned by most of the collection types, doesn’t tolerate any structural modifications to a collection while iterating over it. (Structural modifications means add, remove or updating an element in the collection). They throw ConcurrentModificationException if a collection is structurally modified while iteration is going on the collection. But, they don’t throw any exceptions if the collection is modified by the iterator’s own methods like remove().

Fail-Safe iterators don’t throw any exceptions if the collection is modified while iterating over it. Because, they iterate on the clone of the collection not on the original collection. So, any structural modifications done on the original collection goes unnoticed by these iterators.

But, these iterators have some drawbacks. One of them is that it is not always guaranteed that you will get up-to-date data while iterating. Because, any modifications to the collection after the creation of iterator is not updated in the iterator. One more disadvantage of these iterators is that there will be additional overhead of creating the copy of the collection in the terms of both time and memory.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ankush Agarwal</name></author><summary type="html"></summary></entry><entry><title type="html">SysOps Associate</title><link href="https://ankushagarwal87.github.io/continuouslearning/aws/sysops/2021/03/11/SysOps-Associate-WIP.html" rel="alternate" type="text/html" title="SysOps Associate" /><published>2021-03-11T00:00:00-06:00</published><updated>2021-03-11T00:00:00-06:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/aws/sysops/2021/03/11/SysOps-Associate-WIP</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/aws/sysops/2021/03/11/SysOps-Associate-WIP.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2021-03-11-SysOps Associate-WIP.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Overview&quot;&gt;Overview&lt;a class=&quot;anchor-link&quot; href=&quot;#Overview&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/continuouslearning/images/copied_from_nb/Intro.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;EC2&quot;&gt;EC2&lt;a class=&quot;anchor-link&quot; href=&quot;#EC2&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Changing Instance Type  - Steps applicable only for EBS Backed Instance
    Need to stop  
    New instance will be assigned
    EBS will get reasssigned

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Enhanced-Networking&quot;&gt;Enhanced Networking&lt;a class=&quot;anchor-link&quot; href=&quot;#Enhanced-Networking&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;EC2 Enhanced Networking (SR-IOV)
    Higher bandwidth, Higher PPS, Lower latency
    Option 1:Elastic Network Adaptor(ENA) upto 100 Gbps
    Option 2:Intel 82599 VF upto 10 Gbps - LEGACY
    Works for newer generation EC2 instances
Elastic Fabric Adaptor
    Improved ENA for HPC, only works for Linux
    Great for inter-node communications, tightly coupled workloads
    Leverages Message Passing Interface (MPI) standard
    Bypasses the underlying Linux OS to provide low latency, reliable transport

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Placement-Group&quot;&gt;Placement Group&lt;a class=&quot;anchor-link&quot; href=&quot;#Placement-Group&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Cluster
    is applicable only for specific instances
    Great network - 10 Gbps bandwidth between instances
Spread
    Limited to 7 instances per AZ per placement group
Partition
    Upto 7 partitions per AZ
    Upto 100s of EC2 instances

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Shutdown-Behaviour-using-OS&quot;&gt;Shutdown Behaviour using OS&lt;a class=&quot;anchor-link&quot; href=&quot;#Shutdown-Behaviour-using-OS&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Terminate Protection
    Only from CLI or Console
    Can enable/disable it on running instances
Shutdown Behaviour 
    Stop
    Terminate

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;EC2-Launch-Troubleshooting&quot;&gt;EC2 Launch Troubleshooting&lt;a class=&quot;anchor-link&quot; href=&quot;#EC2-Launch-Troubleshooting&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;#InstanceLimitExceeded
    Default Running vCPU limit in each region - 64
#InsuffientInstanceCapacity
    Try again after sometime
#Instance Terminate Immediately
    Reached EBS Volume Limit
    EBS Snapshot is corrupt
    Do not have permission to access KMS key for decryption
    Instance store backed AMI is missing a required part

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;EC2-SSH-Trouble&quot;&gt;EC2 SSH Trouble&lt;a class=&quot;anchor-link&quot; href=&quot;#EC2-SSH-Trouble&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Possible reason of timeout
    Security Group
    CPU load of the instance is high
    Instance does not have public IP 

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Instance-Type&quot;&gt;Instance Type&lt;a class=&quot;anchor-link&quot; href=&quot;#Instance-Type&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;On Demand
    Linux/Windows - Pay for seconds, other - hour
Dedicated hosts
    Physical server with a ec2 instance capacity fully dedicated to you
    Allocated for 3 year reservation
    Useful for software that have complicated licensing model - BYOL
EC2 Dedicated Instances
    Instances running on hardware that's dedicated to you
    May share hardware with other instances in same account
    No control over instance placement
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;/continuouslearning/images/copied_from_nb/DedicatedHosts.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;h4 id=&quot;Spot-Instances-&amp;amp;-Spot-Fleet&quot;&gt;Spot Instances &amp;amp; Spot Fleet&lt;a class=&quot;anchor-link&quot; href=&quot;#Spot-Instances-&amp;amp;-Spot-Fleet&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Can choose to stop or terminate your instances within 2 minutes grace period
First cancel the spot request then cancel the spot instances

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Instance-Type&quot;&gt;Instance Type&lt;a class=&quot;anchor-link&quot; href=&quot;#Instance-Type&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;R - RAM
C - Compute
M - Medium - web app
I - I/o - Database 
G - GPU
T2/T3 burstable instances
T2/T3 unlimited burst

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;/continuouslearning/images/copied_from_nb/InstanceType.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;h4 id=&quot;Elastic-IP&quot;&gt;Elastic IP&lt;a class=&quot;anchor-link&quot; href=&quot;#Elastic-IP&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;When you stop then start the instance - public ip changes
Avoid using Elastic IP
    Use a random public IP &amp;amp; register a DNS name to it
    Use a Load balancer with a static host name

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;CloudWatch-metrics-for-EC2&quot;&gt;CloudWatch metrics for EC2&lt;a class=&quot;anchor-link&quot; href=&quot;#CloudWatch-metrics-for-EC2&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;AWS provided metric
    CPU, Network, Disk(only for instance store) and Status Check Metric
Custom Metrics
    Basic resolution - 1 minute
    High Resolution - 1 second
    Include RAM, application level metrics      
Status Check
    Instance Status - Check the EC2 VM
    System Status - Check the underlying hardware        

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Unified-CloudWatch-Agent&quot;&gt;Unified CloudWatch Agent&lt;a class=&quot;anchor-link&quot; href=&quot;#Unified-CloudWatch-Agent&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Push logs &amp;amp; metrics to CloudWatch from EC2 or on-premise server
procstat plugin
    Collect metrics &amp;amp; monitor system utilization of individual processes
Download &amp;amp; Install cloudwatch agent in instance
Run config wizard
Can put config file in parameter Store
Can download config file in other ec2 instances

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;EC2-Instances-Status-Check&quot;&gt;EC2 Instances Status Check&lt;a class=&quot;anchor-link&quot; href=&quot;#EC2-Instances-Status-Check&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;System Status Checks
    Stop &amp;amp; Start
Instance Status Checks
    Reboot
CloudWatch Metrics
    StatusChedkFailed_System
    StatusCheckFailed_Instance
    StatusCheckFailed(for both)
Recovery
    CloudWatch Alarm
    Auto Scaling Group

SYSTEM status checks
    System status checks monitor the AWS systems on which your instance runs
    Problem with the underlying host. Example: 
        Loss of network connectivity
        Loss of system power
        Software issues on the physical host
        Hardware issues on the physical host that impact network reachability

    Either wait for AWS to fix the host, OR
    Move the EC2 instance to a new host = STOP &amp;amp; START the instance (if EBS backed)

INSTANCE status checks
    Instance status checks monitor the software and network configuration of your individual instance
    Example of issues
        Incorrect networking or startup configuration
        Exhausted memory
        Corrupted file system
        Incompatible kernel

    Requires your involvement to fix
        Restart the EC2 instance, OR
        Change the EC2 instance configuration     

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;EC2-Hibernate&quot;&gt;EC2 Hibernate&lt;a class=&quot;anchor-link&quot; href=&quot;#EC2-Hibernate&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Stop : Data on disk(EBS) is kept intact
Terminate : Any EBS volumes(root) also setup to be destroyed is lost
Hibernate : In-memory state(RAM) is preserved
    Root EBS must be encrypted

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;AMI&quot;&gt;AMI&lt;a class=&quot;anchor-link&quot; href=&quot;#AMI&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;AMI built are for a specific region
AMI are private by default - locked for your account/region
Stored in S3

AWS Backup Plans to Create AMI
    To maintain Integrity you need to reboot parameter while taking images
    EventBridge + Lambda + CreateImage API with reboot

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;EC2-Image-Builder&quot;&gt;EC2 Image Builder&lt;a class=&quot;anchor-link&quot; href=&quot;#EC2-Image-Builder&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Used to automate the creation of VM or container Image
Can be run on schedule&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Systems-Manager-(SSM)-&amp;amp;-Opswork&quot;&gt;Systems Manager (SSM) &amp;amp; Opswork&lt;a class=&quot;anchor-link&quot; href=&quot;#Systems-Manager-(SSM)-&amp;amp;-Opswork&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Helps you manage your EC2 &amp;amp; on-premise systems at scale
Get operation insight about the state of your infrastructure
Easily detects problem
Patching automation for enhanced compliance
Integrated with CloudWatch metrics/dashboard
Integrated with AWS Config

Resource Group
Operations Management
    Explorer
    Ops Center
    CloudWatch Dashboard
    PHD
    Incident Manager
Shared Resources
    Documents
Change Management
    Change Manager
    Automation(shut down EC2, create AMIs)
    Change Calendar
    Maintainance Windows
Application Management
    Application Manager
    AppConfig
    Parameter Store
Node Management
    Fleet Manager
    Compliance
    Inventory:Discover &amp;amp; Audit software installed
    Hybrid Activations
    Session Manager
    Run command
    State Manager:Define &amp;amp; maintaining configuration
    Patch Manager
    Distributer        

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;How-SSM-Works&quot;&gt;How SSM Works&lt;a class=&quot;anchor-link&quot; href=&quot;#How-SSM-Works&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;We need to install SSM Agents onto the systems we control
Installed by default on Linux AMI &amp;amp; some Ubuntu AMI
If an instance can't be controlled with SSM, probbaly an issue wih SSM Agent
Make sure that EC2 instance have proper IAM role to allow SSM actions

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Start-EC2-instances-with-SSM-Agent&quot;&gt;Start EC2 instances with SSM Agent&lt;a class=&quot;anchor-link&quot; href=&quot;#Start-EC2-instances-with-SSM-Agent&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Just add IAM role which allow connections to SSM, it will start showing in SSM Manage Instances

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;AWS-Tags-&amp;amp;-SSM-Resource-Groups&quot;&gt;AWS Tags &amp;amp; SSM Resource Groups&lt;a class=&quot;anchor-link&quot; href=&quot;#AWS-Tags-&amp;amp;-SSM-Resource-Groups&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Create, view or manage logical group of resources thanks to tags
Allow creation of logical group of resources such as 
    Applications
    Different layers of an application stack
    Production vs development environments
Regional Service
Works with EC2,S3,DynamoDB,Lambda

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;SSM-Documents-&amp;amp;-SSM-Run-Command&quot;&gt;SSM Documents &amp;amp; SSM Run Command&lt;a class=&quot;anchor-link&quot; href=&quot;#SSM-Documents-&amp;amp;-SSM-Run-Command&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Documents
    Can be in JSON or YAML
    You define parameters
    You define actions
    Many documents already exist in AWS
    Can be applied to
        State Manager
        Patch Manager
        Automation
        Run command
        Reference Parameter Store

Run Commands
    Execute a document(script) or just run a command
    Run command across multiple instance using resource groups
    Rate Control/Error Control
    Integrated with IAM &amp;amp; CloudTrail
    No need for SSH
    Results in the console or S3 or cloudwatch

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;SSM---Automation&quot;&gt;SSM - Automation&lt;a class=&quot;anchor-link&quot; href=&quot;#SSM---Automation&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Simplify common maintenance &amp;amp; deployment tasks of EC2 instances &amp;amp; other AWS resources
Example - Restart Instances, Create an AMI, EBS Snapshots
Automation Runbook
    SSM Documents of Type Automation
    Define actions performed on your EC2 instances or AWS resources
    Pre-defined runbooks or create custom runbooks
Can be Triggered
    AWS Console, CLI, SDK
    Event Bridge
    On a schedule using Maintenance Window
    By AWS Config for rules remediation

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;AWS-Parameter-Store&quot;&gt;AWS Parameter Store&lt;a class=&quot;anchor-link&quot; href=&quot;#AWS-Parameter-Store&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Secure storage for configurations &amp;amp; secret
Optional seamless encryption using KMS
Serverless, scalable, durable, easy SDK, free
Version tracking of configurations/secrets
Configurations management using path &amp;amp; IAM
Notifications with CloudWatch Events
Integration with CloudFormation

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;SSM-Inventory-&amp;amp;-Patches&quot;&gt;SSM Inventory &amp;amp; Patches&lt;a class=&quot;anchor-link&quot; href=&quot;#SSM-Inventory-&amp;amp;-Patches&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Inventory - List Software on an Instance
Inventory + Run Command - Patch Software
Patch Manager + Maintenance Window - Patch OS
Patch Manager - Gives you Compliance
State Manager - Ensures instance are in a consistence state(compliance)

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;SSM-Secure-Shell&quot;&gt;SSM Secure Shell&lt;a class=&quot;anchor-link&quot; href=&quot;#SSM-Secure-Shell&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Session Manager allows you to start a secure shell on your VM
Does not use SSH access &amp;amp; bastions hosts
Only EC2 now
Log actions done through secure shells to S3 &amp;amp; CloudWatch Logs
IAM Permission:Access SSM + Write to S3 + write to CloudWatch
CloudTrail can intercept StartSession events
AWS Secure Shell versus SSH
    No need to open the port 22 at all anymore (Security)
    No need for bastions hosts
    All commands are logged to S3/CloudWatch (auditing)
    Access to Secure Shell is done through User IAM,not SSH keys

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Opsworks&quot;&gt;Opsworks&lt;a class=&quot;anchor-link&quot; href=&quot;#Opsworks&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Chef or Puppet help you perform server configurations automatically or repetitive actions  &lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;High-Availablity-&amp;amp;-Scalability&quot;&gt;High Availablity &amp;amp; Scalability&lt;a class=&quot;anchor-link&quot; href=&quot;#High-Availablity-&amp;amp;-Scalability&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&quot;Load-Balancer-Overview&quot;&gt;Load Balancer Overview&lt;a class=&quot;anchor-link&quot; href=&quot;#Load-Balancer-Overview&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Expose a single point of DNS to your application
Seamlessly handle failure of downstream instances
Do regulare health check to your instances
Provide SSL Termination(HTTPS) for your websites -- CLB &amp;amp; ALB
Enforce stickiness with cookies
Can setup private or public Load Balancer
Load Balancer Errors 503 means at capacity or no registered target
If LB can't connect to your application, check your Security Groups

Types
    Classic - 2009
    Application - 2016
    Network - 2017

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Application-Load-Balancer&quot;&gt;Application Load Balancer&lt;a class=&quot;anchor-link&quot; href=&quot;#Application-Load-Balancer&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;ALB (Layer 7) allows to do:
    Load balancing to multiple HTTP applications across machine(target groups)
    Load balancing to multiple applications on the same machine(containers)
    Load balancing based on route in URL
    Load balancing based on hostname in URL

Are used for microservices &amp;amp; container based application (Docker &amp;amp; Amazon ECS)
Has a port mapping feature to redirect to a dynamic url

Stickiness can be enables at the target group level
    Same request goes to the same instance
    Stickiness is diretly generated by the ALB

ALB supports HTTP/HTTPS &amp;amp; WebSockets protocols

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Network-Load-Balancer&quot;&gt;Network Load Balancer&lt;a class=&quot;anchor-link&quot; href=&quot;#Network-Load-Balancer&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;NLB (Layer 4) allows to do:
    Forward TCP traffic to your instances
    Handles million of requests per seconds
    Support for static IP or elastic IP
    Less latency ~ 100 ms (vs 400 ms for ALB)
Can directly see the client IP

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Metrics,-Logging-&amp;amp;-Tracing-for-ELB&quot;&gt;Metrics, Logging &amp;amp; Tracing for ELB&lt;a class=&quot;anchor-link&quot; href=&quot;#Metrics,-Logging-&amp;amp;-Tracing-for-ELB&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;All LB metrics are directly pushed to CloudWatch metrics
    BackendConnectionErrors
    HealthyHostCount / UnHealthyHostCount
    HTTPCode_Backend_2XX:Successful Request
    HTTPCode_Backend_3XX:Redirect Request
    HTTPCode_ELB_4XX:Client Error
    HTTPCode_ELB_5XX:Server Error
    Latency
    RequestCount
    SurgeQueueLength
    SpillOverLength
Access Log can be stored in S3

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Auto-Scaling-Group&quot;&gt;Auto Scaling Group&lt;a class=&quot;anchor-link&quot; href=&quot;#Auto-Scaling-Group&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;A launch configuration
    AMI + Instance Type
    EC2 User Data
    EBS volumes
    SG
    SSH Key Pair
Min Size/Max Size/Initial Capacity
Network + Subnets Information
Load Balancer Information
Scaling Policies

Auto Scaling Alarms
    Cloudwatch alarms
    EC2 managed rules
    Custom metrics

AZ Rebalance
    Launch new instance then terminate old instance

    If you suspend the Launch process
        AZ won't launch instance 
        AZ won't terminate instance 

    If you suspend the Terminate process
        AZ can grow upto 10% of its size
        AZ will remian at this capacity since it can't terminate instance&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Elastic-Beanstalk&quot;&gt;Elastic Beanstalk&lt;a class=&quot;anchor-link&quot; href=&quot;#Elastic-Beanstalk&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Manged Service
Architecture Models
    Single Instance Deployment: Good for Dev
    LB + ASG: Good for Prod or Non-Prod
    ASG only: Good for non-web apps in production (workers,etc..)

Three components
    Application
    Application version
    Environment name&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ankush Agarwal</name></author><summary type="html"></summary></entry><entry><title type="html">Developer Associate</title><link href="https://ankushagarwal87.github.io/continuouslearning/aws/developer/2020/10/11/Developer-Associate.html" rel="alternate" type="text/html" title="Developer Associate" /><published>2020-10-11T00:00:00-05:00</published><updated>2020-10-11T00:00:00-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/aws/developer/2020/10/11/Developer-Associate</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/aws/developer/2020/10/11/Developer-Associate.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-10-11-Developer Associate.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Serverless-Computing&quot;&gt;Serverless Computing&lt;a class=&quot;anchor-link&quot; href=&quot;#Serverless-Computing&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&quot;Lambda&quot;&gt;Lambda&lt;a class=&quot;anchor-link&quot; href=&quot;#Lambda&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Lambda scales out(not up) automatically
Can trigger another functions
X-Ray allows to debug

Can be used in two ways
    Event Driven Compute Service
        Change to data in a S3 bucket or DynamoDB table
    Response to HTTP request from API Gateway or API calls using SDK 

Language Support
    Java
    Python
    C#
    Go
    Node.js

Pricing
    Number of requests
        First 1 million are free, 0.2 per 1 million request thereafter
    Duration
        0.00001667 per GB per second        

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;API-Gateway&quot;&gt;API Gateway&lt;a class=&quot;anchor-link&quot; href=&quot;#API-Gateway&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Fully managed service that makes it easy for developers to publish, maintain, monitor &amp;amp; secure API at 
any scale.
Serverless-ly connect to Lambda &amp;amp; DynamoDB
Send each endpoint to a different target
Scale effortlessly
Track &amp;amp; Control usage by API
Throttle request to prevent attack
Connect to CloudWatch to log all requests for monitoring
Maintain multiple versions for your API

Configure API
    Define an API (container)
    Defines resources &amp;amp; nested resources(URL paths)
    For each Resource
        Select supported HTTP methods (verbs)
        Set Security
        Choose Target (EC2, Lambda, DynamoDB)
        Set request &amp;amp; response transformations
    Deploy API to a Stage
        Uses API Gateway domain by default
        Can use custom domain
        Now supports AWS Certificate Manager - free SSL/TLS certificate

Support API caching
CORS need to be enable for multiple domain
Can also import API
Can use API gateway as SOAP service passthrough

API Throttling
    Default - 10000 requests per second (rps)
    Maximum concurrent request is 5000 across all APIs within an AWS account
    If goes above - 429 Too Many Requests error

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Version-Control-with-Lambda&quot;&gt;Version Control with Lambda&lt;a class=&quot;anchor-link&quot; href=&quot;#Version-Control-with-Lambda&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Each Lambda Function Version has a unique ARN , 
Can't changes a version after publish
Can define Alias for a version &amp;amp; use that Alias name in other interface to keep loose coupling
$LATEST - default
Can split request between two version for testing - can't use $LATEST for split

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Step-Functions&quot;&gt;Step Functions&lt;a class=&quot;anchor-link&quot; href=&quot;#Step-Functions&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Allows you to visualize serverless applications
Automatically triggers &amp;amp; tracks each step
Logs the state of each step
Application Integration
    Define State machine
    Deploy Resource

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;X-Ray&quot;&gt;X Ray&lt;a class=&quot;anchor-link&quot; href=&quot;#X-Ray&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Collect data about requests that your application serves &amp;amp; provides tools you can use to view, filter 
    &amp;amp; gain insights into that data to identify issues &amp;amp; opportunities for optimization.
Developer Tool
Architecture
    X-Ray SDK need to be installled in the application
    It sends data to X-Ray-Daemon running on Linux/Windows listening to UDP
    Which forward it to X-Ray API 
    It creates visualisation at X Ray Console

X Ray SDK Provides
        Interceptors to add to your code to trace incoming HTTP request
        Client Handlers to instrument AWS SDK Clients that your application uses to call other AWS services
        An HTTP Client to instrument calls to other internal or external HTTP web services

Integration with
        ELB
        Lambda
        API Gateway
        EC2
        Elastic Beanstalk

Supported Language
        Java
        Python
        Go
        .Net
        Node.js
        Ruby       &lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Dynamo-DB&quot;&gt;Dynamo DB&lt;a class=&quot;anchor-link&quot; href=&quot;#Dynamo-DB&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Stored on SSD storage
Spread across 3 geographically distinct data centers
Choice of 2 consistency model 
    Eventual Consistent Reads(Default)
    Strongly Consistent Reads
Primary Key
    Partition Key - unique values
    Partition Key + Sort Key
Fine grained access control using IAM Conditional Parameter: dynamodb:LeadingKeys to allow users to 
    access only the items where the partition key value matches their user ID.

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Indexes&quot;&gt;Indexes&lt;a class=&quot;anchor-link&quot; href=&quot;#Indexes&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Local Secondary Index
    Can only created at Table creation time, can not be modified later
    Same Partition Key as original table but a different Sort Key
Global Secondary Index
    Can be created anytime
    Different Partition Key as well as Sort Key

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Scan-vs-Query-API-Call&quot;&gt;Scan vs Query API Call&lt;a class=&quot;anchor-link&quot; href=&quot;#Scan-vs-Query-API-Call&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Query operation to find items in a table based on Primary Key attributes &amp;amp; value
Can also add Sort key parameter or any other attributes
By default query returns all the attributes for the items but can use the ProjectionExpression parameter
    to only return the specific attributes
Results are always sorted by Sort Key
Can reverse the order by setting the ScanIndexForward Parameter to false
By default Queries are Eventually Consistent (need to explicitly specify Strongly Consistent)

Scan operation examines every item in the table
Can filter on any attributes
Scan operation on large table can take up the entire Provisioned Througput in a single operation

Reduce impact of query or scan by smaller page size which uses fewer read operations
Large number of smaller requests will allow other requests to succeed without throttling
Avoid using Scan operation
By default-scan opeartion process data sequentially in returning 1 MB increments
It can only scan one partition at a time
Can configure DynamoDB to use Parallel scans instead by logically dividing a table or index into segments 
    &amp;amp; scanning each segment in parallel
Best to avoid Parallel Scan if heavy read/write operation in progress

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Provisioned-Throughput&quot;&gt;Provisioned Throughput&lt;a class=&quot;anchor-link&quot; href=&quot;#Provisioned-Throughput&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Measured in Capacity Units
1 Write Capacity Unit = 1 * 1 KB Write per second
1 Read Capacity Unit = 1 * 4 KB Strongly Consistent Read 
                     = 2 * 4 KB Eventually Consistent Reads

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;On-Demand-Capacity-Option&quot;&gt;On-Demand Capacity Option&lt;a class=&quot;anchor-link&quot; href=&quot;#On-Demand-Capacity-Option&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;DynamoDB instantly scale up &amp;amp; down based on application load
Pay per request

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;DynamoDB-Accellorator&quot;&gt;DynamoDB Accellorator&lt;a class=&quot;anchor-link&quot; href=&quot;#DynamoDB-Accellorator&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Ideal for Read only &amp;amp; bursty workloads
Write through caching service
Not suitable for Strongly Consistent Reads , Write Intensive operation
DAX currently only offers write-through cache

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Elasticache&quot;&gt;Elasticache&lt;a class=&quot;anchor-link&quot; href=&quot;#Elasticache&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Memcached
    Widely accepted memory object caching system
    Multithreaded
    No Multi-AZ capability

Redis
    Open source in memory key value store
    Supports more complex data structure:sorted sets &amp;amp; lists
    Supports Master/Slave Replication &amp;amp; Multi-AZ for cross AZ redundancy

Caching Strategies
    Lazy Loading
        Load the data when there is a need
    Write-Through
        Add to the cache whenever data is written to the database

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Transactions&quot;&gt;Transactions&lt;a class=&quot;anchor-link&quot; href=&quot;#Transactions&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;ACID property

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;TTL&quot;&gt;TTL&lt;a class=&quot;anchor-link&quot; href=&quot;#TTL&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Define expiry time for the data
Expressed as epoch time
    number of seconds that have elapsed since January 1, 1970

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Streams&quot;&gt;Streams&lt;a class=&quot;anchor-link&quot; href=&quot;#Streams&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Time ordered sequence of item level modifications
Logs are encrypted at rest &amp;amp; stored for 24 hours
Accessed using a dedicated endpoint
By Default - Primary Key is recorded
Before &amp;amp; After images can be captured
Can be Event source for Lambda

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Provisioned-Througput-Error-&amp;amp;-Exponential-Backoff&quot;&gt;Provisioned Througput Error &amp;amp; Exponential Backoff&lt;a class=&quot;anchor-link&quot; href=&quot;#Provisioned-Througput-Error-&amp;amp;-Exponential-Backoff&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Request Rate is too high for the read/write capacity provisoned on the Table
SDK will automatically retries the request until successful
Option
    Reduce Request frequency
    Use Exponential Backoff (feature of AWS SDK)
        Progressive longer wait between consecuetive retries&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Elastic-Beanstalk&quot;&gt;Elastic Beanstalk&lt;a class=&quot;anchor-link&quot; href=&quot;#Elastic-Beanstalk&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Will handle deployment,capacity provisioning,load balancing,auto scaling &amp;amp; application health
Integrated with CloudWatch &amp;amp; X Ray for monitoring
Support - Java,PHP,Python,Go,Docker,Ruby,.Net,Node.js

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Deployment-Policy&quot;&gt;Deployment Policy&lt;a class=&quot;anchor-link&quot; href=&quot;#Deployment-Policy&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;All at Once
    Downtime during update
    Not ideal for mission critical applications
    Need to rollback to previous version manually

Rolling
    In batches
    Not ideal for Performance sensitive
    Need to rollback to previous version manually

Rolling with Additional Batch
    Launch additional batches of instances
    Need to rollback to previous version manually

Immutable
    Deploy new version to fresh instance in own scaling group
    Only when new instances pass health check then old instances gets replaced
    Maintain full capacity
    Preferred for mission critical application

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Configuration&quot;&gt;Configuration&lt;a class=&quot;anchor-link&quot; href=&quot;#Configuration&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Can be JSON or YAML file with extension .config inside folder 
.ebextensions which must be at top level directory of application source code bundle&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Developers-Theory&quot;&gt;Developers Theory&lt;a class=&quot;anchor-link&quot; href=&quot;#Developers-Theory&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&quot;CI/CD&quot;&gt;CI/CD&lt;a class=&quot;anchor-link&quot; href=&quot;#CI/CD&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;CodeCommit - Version Control
CodeBuild - Automated Build
Code Deploy - Automate Depolyment
Code Pipeline - Manage Workflow&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ankush Agarwal</name></author><summary type="html"></summary></entry><entry><title type="html">AWS VPC - NAT vs EndPoint</title><link href="https://ankushagarwal87.github.io/continuouslearning/aws/2020/08/15/NAT-Gateway-vs-VPC-Gateway-End-Point.html" rel="alternate" type="text/html" title="AWS VPC - NAT vs EndPoint" /><published>2020-08-15T00:00:00-05:00</published><updated>2020-08-15T00:00:00-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/aws/2020/08/15/NAT-Gateway-vs-VPC-Gateway-End-Point</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/aws/2020/08/15/NAT-Gateway-vs-VPC-Gateway-End-Point.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-08-15-NAT Gateway vs VPC Gateway End Point.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Comparison&quot;&gt;Comparison&lt;a class=&quot;anchor-link&quot; href=&quot;#Comparison&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;The following table shows the options you have if you decide to stay in private subnets.
                        Gateway VPC Endpoint    Interface VPC Endpoint  NAT Gateway
Supported AWS services  S3, DynamoDB    some                    all
Price per hour1         free            $0.01                   $0.045
Price per GB1           free            $0.01                   $0.045

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As you can see, using Gateway VPC Endpoints is cheaper than using Interface VPC Endpoint which is cheaper than using NAT Gateways&lt;/p&gt;
&lt;p&gt;Nat Gateway Usage for 15 GB monthly usage for 1 NAT Gateway&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;730 hours in a month x 0.045 USD = 32.85 USD (Gateway usage hourly cost)
15 GB per month x 0.045 USD = 0.68 USD (NAT Gateway data processing cost)
32.85 USD + 0.68 USD = 33.53 USD (NAT Gateway processing and month hours)
1 NAT Gateways x 33.53 USD = 33.53 USD (Total NAT Gateway usage and data processing cost)

Total NAT Gateway usage and data processing cost (monthly): 33.53 USD


&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;InterFace EndPoint Usage for 15 GB Monthly Usage for 1 VPC EndPoint&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;730 hours in a month x 0.01 USD = 7.30 USD (Hourly cost for endpoint ENI)
15 GB per month x 0.01 USD = 0.15 USD (PrivateLink data processing cost)
7.30 USD + 0.15 USD = 7.45 USD (Hourly cost and data processing per endpoint ENI)
1 VPC endpoints x 1 ENIs per VPC endpoint x 7.45 USD = 7.45 USD (Total PrivateLink endpoints and data processing cost)

Total PrivateLink endpoints and data processing cost (monthly): 7.45 USD


&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Gateway EndPoint Usage for 15 GB Monthly Usage&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Intra region:
(15 GB x 0.01 USD per GB outbound) + (15 GB x 0.01 USD per GB inbound) = 0.30 USD 

Data Transfer cost (monthly): 0.30 USD&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Question&quot;&gt;Question&lt;a class=&quot;anchor-link&quot; href=&quot;#Question&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;We don't need NAT Gateway in Prod to run 24*7 for accessing EC2 instance or we can run it only when needed
If its free atleast Data transfer charges will not apply &lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;References&quot;&gt;References&lt;a class=&quot;anchor-link&quot; href=&quot;#References&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;https://docs.aws.amazon.com/vpc/latest/userguide/vpc-endpoints.html
https://docs.aws.amazon.com/vpc/latest/userguide/vpce-gateway.html&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ankush Agarwal</name></author><summary type="html"></summary></entry><entry><title type="html">Architecture Best Practices</title><link href="https://ankushagarwal87.github.io/continuouslearning/aws/architecture%20best%20practices/2020/08/11/Architecture-Best-Practices.html" rel="alternate" type="text/html" title="Architecture Best Practices" /><published>2020-08-11T00:00:00-05:00</published><updated>2020-08-11T00:00:00-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/aws/architecture%20best%20practices/2020/08/11/Architecture-Best-Practices</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/aws/architecture%20best%20practices/2020/08/11/Architecture-Best-Practices.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-08-11-Architecture Best Practices.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Overview&quot;&gt;Overview&lt;a class=&quot;anchor-link&quot; href=&quot;#Overview&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Design for failure and nothing will fail.
    Standby redundancy is often used for stateful components such as relational databases.
    Amazon Simple Storage Service (Amazon S3) and Amazon DynamoDB ensure that data is redundantly 
    stored across multiple facilities.

Implement elasticity.
    vertically and horizontally.
    Consider only storing a unique session identifier in a HTTP cookie and storing more detailed user 
    session information server-side. Most programming platforms provide a native session management 
    mechanism that works this way; however, these management mechanisms often store the session 
    information locally by default. This would result in a stateful architecture. 
    A common solution to this problem is to store user session information in a database. 
    Amazon DynamoDB is a great choice due to its scalability, high availability, and durability
    characteristics. For many platforms, there are open source, drop-in replacement libraries that 
    allow you to store native sessions in Amazon DynamoDB.

Leverage different storage options.        

Build security in every layer.
    Services like AWS Web Application Firewall (AWS WAF) can help protect your web applications 
    from SQL injection and other vulnerabilities in your application code
    With AWS Config Rules, you will also know if some component was out of compliance even for a brief 
    period of time, making both point-in-time and period-in-time audits very effective. 
    You can implement extensive logging for your applications using Amazon CloudWatch Logs and for the 
    actual AWS API calls by enabling AWS CloudTrail

Think parallel.
Loose coupling sets you free.
Don’t fear constraints.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ankush Agarwal</name></author><summary type="html"></summary></entry><entry><title type="html">Security on AWS</title><link href="https://ankushagarwal87.github.io/continuouslearning/aws/security/2020/08/09/Security-on-AWS.html" rel="alternate" type="text/html" title="Security on AWS" /><published>2020-08-09T00:00:00-05:00</published><updated>2020-08-09T00:00:00-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/aws/security/2020/08/09/Security-on-AWS</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/aws/security/2020/08/09/Security-on-AWS.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-08-09-Security on AWS.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Network-Monitoring-and-Protection&quot;&gt;Network Monitoring and Protection&lt;a class=&quot;anchor-link&quot; href=&quot;#Network-Monitoring-and-Protection&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Distributed Denial of Service (DDoS) Attacks 
Man in the Middle (MITM) Attacks
IP Spoofing 
Port Scanning
Packet Sniffing by Other Tenants&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;AWS-Account-Security-Features&quot;&gt;AWS Account Security Features&lt;a class=&quot;anchor-link&quot; href=&quot;#AWS-Account-Security-Features&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;AWS Credentials
    Passwords
    Access Keys
    Key Pairs
    X.509 Certificates
AWS CloudTrail&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Service-Specific-Security&quot;&gt;Service-Specific Security&lt;a class=&quot;anchor-link&quot; href=&quot;#Service-Specific-Security&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Compute
    Amazon Elastic Compute Cloud
        Amazon EC2 supports RSA 2048 SSH-2 Key pairs
    Amazon Elastic Block Store (Amazon EBS) 
        Encrypt Amazon EBS volumes and their snapshots with AES-256

Networking
    Elastic Load Balancing
        configures your load balancer with a pre-defined cipher set that is used for TLS negotiation
    Amazon Virtual Private Cloud
        Security features within Amazon VPC include security groups, network ACLs, routing tables, 
        and external gateway
    Amazon CloudFront
        To control access to the original copies of your objects in Amazon S3, Amazon CloudFront allows 
        you to create one or more Origin Access Identities and associate these with your distributions.
        To control who can download objects from Amazon CloudFront edge locations, the service uses 
        a signed-URL verification system.

Storage
    Amazon Simple Storage Service
    Amazon Glacier
        encrypts the data using AES-256
    AWS Storage Gateway
        Transfer to AWS over SSL and stored encrypted in Amazon S3 using AES-256

Database
    Amazon DynamoDB
        You can control access at the database level 
    Amazon Relational Database Service
        You can control Amazon RDS DB Instance access via DB security groups
    Amazon Redshift
         AES-256 block encryption
    Amazon ElastiCache
        Cache Security Group

Application Services
    Amazon Simple Queue Service
        AWS account or a user created with AWS IAM
    Amazon Simple Notification Service
        Amazon SNS allows topic owners to set policies for a topic that restrict who can publish or 
        subscribe to a topic

Analytics
    Amazon Elastic MapReduce
    Amazon Kinesis
        users under your AWS account using AWS IAM

Deployment and Management
    AWS Identity and Access Management

Mobile Services
    Amazon Cognito
        Your application authenticates with one of the well-known identity providers such as Google, 
        Facebook, and Amazon using the provider’s SDK
        After the end user is authenticated with the provider, an OAuth or OpenID Connect token returned 
        from the provider is passed by your application to Amazon Cognito, which returns a new Amazon 
        Cognito ID for the user and a set of temporary, limited-privilege AWS credentials.

Applications
    Amazon Workspaces &lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ankush Agarwal</name></author><summary type="html"></summary></entry><entry><title type="html">AWS Whitepapers</title><link href="https://ankushagarwal87.github.io/continuouslearning/aws/whitepapers/2020/08/02/AWS-Whitepapers-WIP.html" rel="alternate" type="text/html" title="AWS Whitepapers" /><published>2020-08-02T00:00:00-05:00</published><updated>2020-08-02T00:00:00-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/aws/whitepapers/2020/08/02/AWS-Whitepapers---WIP</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/aws/whitepapers/2020/08/02/AWS-Whitepapers-WIP.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-08-02-AWS Whitepapers - WIP.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Introduction&quot;&gt;Introduction&lt;a class=&quot;anchor-link&quot; href=&quot;#Introduction&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;The process for reviewing an architecture is a constructive conversation about architectural decisions,
and is not an audit mechanism. 
We believe that having well-architected systems greatly increases the likelihood of business success.

AWS also provides a service for reviewing your workloads at no charge. The AWS Well-Architected
Tool (AWS WA Tool) is a service in the cloud that provides a consistent process for you to review and
measure your architecture using the AWS Well-Architected Framework. The AWS WA Tool provides
recommendations for making your workloads more reliable, secure, efficient, and cost-effective.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;The-Pillars-of-the-AWS-Well-Architected-Framework&quot;&gt;The Pillars of the AWS Well-Architected Framework&lt;a class=&quot;anchor-link&quot; href=&quot;#The-Pillars-of-the-AWS-Well-Architected-Framework&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Operational Excellence 
    The ability to support development and run workloads effectively, gain insight into their operations,
    and to continuously improve supporting processes and procedures to deliver business value.

Security
    The security pillar describes how to take advantage of cloud technologies to protect data, systems,
    and assets in a way that can improve your security posture.

Reliability
    The reliability pillar encompasses the ability of a workload to perform its intended function
    correctly and consistently when it’s expected to. This includes the ability to operate and test the
    workload through its total lifecycle. This paper provides in-depth, best practice guidance for
    implementing reliable workloads on AWS.

Performance Efficiency
    The ability to use computing resources efficiently to meet system requirements, and to maintain
    that efficiency as demand changes and technologies evolve.

Cost Optimization
    The ability to run systems to deliver business value at the lowest price point.

Sustainability
    The ability to continually improve sustainability impacts by reducing energy consumption and 
    increasing efficiency across all components of a workload by maximizing the benefits from the
    provisioned resources and minimizing the total resources required.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Overview&quot;&gt;Overview&lt;a class=&quot;anchor-link&quot; href=&quot;#Overview&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Technology architecture teams typically include a set of roles such as: Technical Architect 
(infrastructure), Solutions Architect (software), Data Architect, Networking Architect, and 
Security Architect

At AWS, we prefer to distribute capabilities into teams rather than having a centralized team with that
capability. There are risks when you choose to distribute decision making authority, for example, ensure 
that teams are meeting internal standards. We mitigate these risks in two ways. First, we have practices 
that focus on enabling each team to have that capability, and we put in place experts who ensure that teams
raise the bar on the standards they need to meet. Second, we implement mechanisms that carry out automated
checks to ensure standards are being met. &lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;General-Design-Principles&quot;&gt;General Design Principles&lt;a class=&quot;anchor-link&quot; href=&quot;#General-Design-Principles&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Stop guessing your capacity needs: 
    If you make a poor capacity decision when deploying a workload, you might end up sitting on expensive
    idle resources or dealing with the performance implications of limited capacity. 
    With cloud computing, these problems can go away. You can use as much or as little capacity as you 
    need, and scale up and down automatically.

Test systems at production scale: 
    In the cloud, you can create a production-scale test environment on demand, complete your testing, 
    and then decommission the resources. Because you only pay for the test environment when it's 
    running, you can simulate your live environment for a fraction of the cost of testing on premises.

Automate to make architectural experimentation easier: 
    Automation allows you to create and replicate your workloads at low cost and avoid the expense 
    of manual effort. You can track changes to your automation, audit the impact, and revert to previous
    parameters when necessary.

Allow for evolutionary architectures: 
    In a traditional environment, architectural decisions are often implemented as static, onetime 
    events, with a few major versions of a system during its lifetime. As a business and its context
    continue to evolve, these initial decisions might hinder the system's ability to deliver changing
    business requirements. In the cloud, the capability to automate and test on demand lowers the risk 
    of impact from design changes. This allows systems to evolve over time so that 
    businesses can take advantage of innovations as a standard practice.

Drive architectures using data: 
    In the cloud, you can collect data on how your architectural choices affect the behavior of your
    workload. This lets you make fact-based decisions on how to improve your workload. 
    Your cloud infrastructure is code, so you can use that data to inform your architecture choices and 
    improvements over time.

Improve through game days: 
    Test how your architecture and processes perform by regularly scheduling game days to simulate 
    events in production. This will help you understand where improvements can be made and can help
    develop organizational experience in dealing with events.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Operational-Excellence&quot;&gt;Operational Excellence&lt;a class=&quot;anchor-link&quot; href=&quot;#Operational-Excellence&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;The Operational Excellence pillar includes the ability to support development and run workloads
effectively, gain insight into their operations, and to continuously improve supporting processes 
and procedures to deliver business value&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Design-Principles&quot;&gt;Design Principles&lt;a class=&quot;anchor-link&quot; href=&quot;#Design-Principles&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Perform operations as code:
     In the cloud, you can apply the same engineering discipline that you use for application code to 
     your entire environment. You can define your entire workload (applications, infrastructure) as 
     code and update it with code. You can implement your operations procedures as code and automate 
     their execution by triggering them in response to events. By performing operations as code, you 
     limit human error and enable consistent responses to events.

Make frequent, small, reversible changes: 
    Design workloads to allow components to be updated regularly. Make changes in small increments 
    that can be reversed if they fail (without affecting customers when possible).

Refine operations procedures frequently: 
    As you use operations procedures, look for opportunities to improve them. As you evolve your 
    workload, evolve your procedures appropriately. Set up regular game days to review and validate
    that all procedures are effective and that teams are familiar with them.

Anticipate failure: 
    Perform “pre-mortem” exercises to identify potential sources of failure so that they can be 
    removed or mitigated. Test your failure scenarios and validate your understanding of their 
    impact. Test your response procedures to ensure that they are effective, and that teams are 
    familiar with their execution. Set up regular game days to test workloads and team responses 
    to simulated events.

Learn from all operational failures: 
    Drive improvement through lessons learned from all operational events and failures. 
    Share what is learned across teams and through the entire organization.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Practice-Areas&quot;&gt;Practice Areas&lt;a class=&quot;anchor-link&quot; href=&quot;#Practice-Areas&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;• Organization
• Prepare
• Operate
• Evolve&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Organization&quot;&gt;Organization&lt;a class=&quot;anchor-link&quot; href=&quot;#Organization&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Evaluate threats to the business (for example, business risk and liabilities, and information security
threats) and maintain this information in a risk registry. Evaluate the impact of risks, and tradeoffs
between competing interests or alternative approaches. For example, accelerating speed to market for
new features may be emphasized over cost optimization, or you may choose a relational database for
non-relational data to simplify the effort to migrate a system without refactoring. 
Manage benefits and risks to make informed decisions when determining where to focus efforts. 
Some risks or choices may be acceptable for a time, it may be possible to mitigate associated risks,
or it may become unacceptable to allow a risk to remain, in which case you will take action to 
address the risk.

Ensure that there are identified owners for each application, workload, platform, and infrastructure
component, and that each process and procedure has an identified owner responsible for its definition,
and owners responsible for their performance.

They should be the sponsor, advocate, and driver for the adoption of best practices and evolution of 
the organization.
Teams must grow their skill sets to adopt new technologies, and to support changes in demand and
responsibilities.

The Well-Architected Framework emphasizes learning, measuring, and improving. 
You should use tools or services that enable you to centrally govern your environments across accounts,
such as AWS Organizations, to help manage your operating models. 

Services like AWS Control Tower expand this management capability by enabling you to define blueprints
(supporting your operating models) for the setup of accounts, apply ongoing governance using AWS
Organizations, and automate provisioning of new accounts.

AWS provides the AWS Well-Architected Tool to help you review your approach prior to development, the 
state of your workloads prior to production,and the state of your workloads in production. You can 
compare workloads to the lat-est AWS architectural best practices, monitor their overall status, and 
gain insight in-to potential risks. AWS Trusted Advisor is a tool that provides access to a core set
of checks that recommend optimizations that may help shape your priorities.         &lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Operational-Excellence-Organization-Questions&quot;&gt;Operational Excellence Organization Questions&lt;a class=&quot;anchor-link&quot; href=&quot;#Operational-Excellence-Organization-Questions&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;OPS 1:  How do you determine what your priorities are?
    Everyone needs to understand their part in enabling business success. Have shared goals inorder to set
    priorities for resources. This will maximize the benefits of your efforts.

OPS 2:  How do you structure your organization to support your business outcomes?
    Your teams must understand their part in achieving business outcomes. Teams need to understand 
    their roles in the success of other teams, the role of other teams in their success,and have 
    shared goals. Understanding responsibility, ownership, how decisions are made,and who has authority 
    to make decisions will help focus efforts and maximize the benefits from your teams.

OPS 3:  How does your organizational culture support your business outcomes?
    Provide support for your team members so that they can be more effective in taking action and 
    supporting your business outcome.

    Organizational culture has a direct impact on team member job satisfaction and re-tention. Enable 
    the engagement and capabilities of your team members to enable the success of your business. 
    Experimentation is required for innovation to happen and turn ideas into outcomes. Recognize that an 
    undesired result is a successful experiment that has identified a path that will not lead to success.

Prepare
    Design your workload so that it provides the information necessary for you to under-stand its 
    internal state (for example, metrics, logs, events, and traces)
    Iterate to develop element necessary to monitor the health of your workload
    Adopt approaches that provide fast feedback on quality and enable rapid recoveryfrom changes that 
    do not have desired outcomes. 

    AWS enables you to view your entire workload (applications, infrastructure, policy,governance,
    and operations) as code.
    Using AWS CloudFor-mation enables you to have consistent, templated, sandbox development, test,
    and production environments with increasing levels of operations control.

OPS 4:  How do you design your workload so that you can understand its state?
Design your workload so that it provides the information necessary across all components(for example, 
metrics, logs, and traces) for you to understand its internal state. This enablesyou to provide effective
responses when appropriate.

OPS 5:  How do you reduce defects, ease remediation, and improve flow into production?
Adopt approaches that improve flow of changes into production, that enable refactoring,fast feedback on
quality, and bug fixing. These accelerate beneficial changes entering pro-duction, limit issues deployed, 
and enable rapid identification and remediation of issues in-troduced through deployment activities.

OPS 6:  How do you mitigate deployment risks?
Adopt approaches that provide fast feedback on quality and enable rapid recovery fromchanges that do not 
have desired outcomes. Using these practices mitigates the impact of is-sues introduced through the 
deployment of changes.

OPS 7:  How do you know that you are ready to support a workload?
Evaluate the operational readiness of your workload, processes and procedures, and personnel to understand 
the operational risks related to your workload.

Operate
    Define expected outcomes, determine how success will be measured, and identify metrics that will be 
    used in those calculations to determine if your workload and operations are successful

    Operational health includes both the health of the workload and the health and success of the 
    operations activities performed insupport of the workload (for example, deployment and incident 
    response). Establish metrics baselines for improvement, investigation, and intervention, collect and 
    analyze your metrics, and then validate your understanding of operations success and how it changes 
    over time. 

    You can leverage CloudWatch or third-party applications to aggregate and present business, workload, 
    and operations level views of operations activities. AWS provides workload insights through logging
    capabilities including AWS X-Ray, CloudWatch, CloudTrail, and VPC Flow Logs enabling the identification
    of workload issues in support of root cause analysis and remediation.

OPS 8:  How do you understand the health of your workload?
Define, capture, and analyze workload metrics to gain visibility to workload events so that you can take
appropriate action.

OPS 9:  How do you understand the health of your operations?
Define, capture, and analyze operations metrics to gain visibility to operations events so that you can 
take appropriate action.

OPS 10:  How do you manage workload and operations events?
Prepare and validate procedures for responding to events to minimize their disruption to your workload.

Evolve
    On AWS, you can export your log data to Amazon S3 or send logs directly to Amazon S3 for long-term 
    storage. Using AWS Glue, you can discover and prepare your log data in Amazon S3 for analytics, and 
    store associated metadata in the AWS Glue Data Catalog. Amazon Athena, through its native integration 
    with AWS Glue, can then be used to analyze your log data, querying it using standard SQL. Using a 
    business intelligence tool like Amazon QuickSight, you can visualize, explore, and analyze your data.
    Discovering trends and events of interest that may drive improvement.  

OPS 11:  How do you evolve operations?
Dedicate time and resources for continuous incremental improvement to evolve the effectiveness and 
efficiency of your operations&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Security&quot;&gt;Security&lt;a class=&quot;anchor-link&quot; href=&quot;#Security&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Design Principles
    Implement a strong identity foundation
    Enable traceability
    Apply security at all layers
    Automate security best practices
    Protect data in transit and at rest
    Keep people away from data
    Prepare for security events

Security
    SEC 1:  How do you securely operate your workload?
    To operate your workload securely, you must apply overarching best practices to every area of security. 
    Take requirements and processes that you have defined in operational excellenceat an organizational and
    workload level, and apply them to all areas. Staying up to date with AWS and industry recommendations 
    and threat intelligence helps you evolve your threat model and control objectives. Automating 
    security processes, testing, and validation allow you to scale your security operations.

Identity and Access Management
    SEC 2:  How do you manage identities for people and machines?
    There are two types of identities you need to manage when approaching operating secure AWS workloads.
    Understanding the type of identity you need to manage and grant access helps you ensure the right
    identities have access to the right resources under the right conditions. 
    Human Identities: Your administrators, developers, operators, and end users require an identity to 
    access your AWS environments and applications. These are members of your organization, or external 
    users with whom you collaborate, and who interact with your AWS resources via a web browser, client
    application, or interactive command-line tools. 
    Machine Identities: Your service applications, operational tools, and workloads require an identity 
    to make requests to AWS services - for example, to read data. These identities include machines 
    running in your AWS environment such as Amazon EC2 instances or AWS Lambda functions.You may also 
    manage machine identities for external parties who need access. Additionally,you may also have machines
    outside of AWS that need access to your AWS environment.

    SEC 3:  How do you manage permissions for people and machines?
    Manage permissions to control access to people and machine identities that require access to AWS and 
    your workload. Permissions control who can access what, and under what conditions.

    Programmatic access including API calls to AWS services should be performed using temporary and 
    limited-privilege credentials such as those issued by the AWS Security Token Service.

Detection
    CloudTrail logs,AWS API calls, and CloudWatch provide monitoring of metrics with alarming, and AWS 
    Config provides configuration history. Amazon GuardDuty is a managed threat detection service that
    continuously monitors for malicious or unauthorized behavior to help you protect your AWS accounts 
    and workloads. Service-level logs are also available, for example, you can use Amazon Simple Storage
    Service (Amazon S3) to log access requests.

    SEC 4:  How do you detect and investigate security events?
    Capture and analyze events from logs and metrics to gain visibility. Take action on security events 
    and potential threats to help secure your workload.

Infrastructure Protection
    SEC 5:  How do you protect your network resources?
    Any workload that has some form of network connectivity, whether it’s the internet or a private network,
    requires multiple layers of defense to help protect from external and internal network-based threats.

    SEC 6:  How do you protect your compute resources?
    Compute resources in your workload require multiple layers of defense to help protect from
    external and internal threats. Compute resources include EC2 instances, containers, AWS Lambda 
    functions,database services, IoT devices, and more.

Data Protection
    SEC 7:  How do you classify your data?
    Classification provides a way to categorize data, based on criticality and sensitivity in orderto help 
    you determine appropriate protection and retention controls.

    SEC 8:  How do you protect your data at rest
    Protect your data at rest by implementing multiple controls, to reduce the risk of unauthorized access
    or mishandling.

    SEC 9:  How do you protect your data in transit?
    Protect your data in transit by implementing multiple controls to reduce the risk of unauthorized 
    access or loss.

Incident Response
    SEC 10:  How do you anticipate, respond to, and recover from incidents?
    Preparation is critical to timely and effective investigation, response to, and recovery from 
    security incidents to help minimize disruption to your organization.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Reliability&quot;&gt;Reliability&lt;a class=&quot;anchor-link&quot; href=&quot;#Reliability&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Design Principles
    Automatically recover from failure
    Test recovery procedures
    Scale horizontally to increase aggregate workload availability
    Stop guessing capacity
    Manage change in automation

Foundations&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ankush Agarwal</name></author><summary type="html"></summary></entry><entry><title type="html">AWS Services</title><link href="https://ankushagarwal87.github.io/continuouslearning/aws/2020/08/01/AWS-Service-WIP.html" rel="alternate" type="text/html" title="AWS Services" /><published>2020-08-01T00:00:00-05:00</published><updated>2020-08-01T00:00:00-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/aws/2020/08/01/AWS-Service---WIP</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/aws/2020/08/01/AWS-Service-WIP.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-08-01-AWS Service - WIP.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Analytics&quot;&gt;Analytics&lt;a class=&quot;anchor-link&quot; href=&quot;#Analytics&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Amazon Athena is an interactive query service that makes it easy to analyze data in Amazon S3 using 
standard SQL. Athena is serverless, so there is no infrastructure to manage, and you pay only for the 
queries that you run.

Amazon EMR is the industry-leading cloud big data platform for processing vast amounts of data using open
source tools such as Apache Spark, Apache Hive, Apache HBase, Apache Flink, Apache Hudi, and Presto.

Amazon Redshift - The most popular and fastest cloud data warehouse 

AWS Data Pipeline is a web service that helps you reliably process and move data between different AWS 
compute and storage services, as well as on-premises data sources, at specified intervals. With AWS Data
Pipeline, you can regularly access your data where it’s stored, transform and process it at scale, and
efficiently transfer the results to AWS services such as Amazon S3, Amazon RDS, Amazon DynamoDB, and
Amazon EMR.

Amazon CloudSearch is a managed service in the AWS Cloud that makes it simple and cost-effective to set 
up, manage, and scale a search solution for your website or application.

Amazon Kinesis makes it easy to collect, process, and analyze real-time, streaming data so you can get 
timely insights and react quickly to new information. 

Amazon QuickSight is a fast, cloud-powered business intelligence service that makes it easy to deliver 
insights to everyone in your organization.As a fully managed service, QuickSight lets you easily create 
and publish interactive dashboards that include ML Insights. Dashboards can then be accessed from any 
device, and embedded into your applications, portals, and websites.

AWS Glue is a fully managed extract, transform, and load (ETL) service that makes it easy for customers 
to prepare and load their data for analytics

Amazon Elasticsearch Service is a fully managed service that makes it easy for you to deploy, secure, and 
run Elasticsearch cost effectively at scale.With Amazon Elasticsearch Service, you get the ELK stack you 
need, without the operational overhead.

Amazon MSK is a fully managed service that makes it easy for you to build and run applications that use 
Apache Kafka to process streaming data

AWS Data Exchange makes it easy to find, subscribe to, and use third-party data in the cloud.

AWS Lake Formation is a service that makes it easy to set up a secure data lake in days. A data lake is 
a centralized, curated, and secured repository that stores all your data, both in its original form and
prepared for analysis&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Application-Integration&quot;&gt;Application Integration&lt;a class=&quot;anchor-link&quot; href=&quot;#Application-Integration&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;AWS Step Functions is a serverless function orchestrator that makes it easy to sequence AWS Lambda 
functions and multiple AWS services into business-critical applications

Amazon AppFlow is a fully managed integration service that enables you to securely transfer data between
Software-as-a-Service (SaaS) applications like Salesforce, Marketo, Slack, and ServiceNow, and AWS services
like Amazon S3 and Amazon Redshift, in just a few clicks

Amazon EventBridge is a serverless event bus that makes it easy to connect applications together using 
data from your own applications, integrated Software-as-a-Service (SaaS) applications, and AWS services.

Amazon MQ is a managed message broker service for Apache ActiveMQ that makes it easy to set up and operate
message brokers in the cloud.

Amazon Simple Notification Service (SNS) is a highly available, durable, secure, fully managed pub/sub
messaging service that enables you to decouple microservices, distributed systems, and serverless 
applications.

Amazon Simple Queue Service (SQS) is a fully managed message queuing service that enables you to decouple
and scale microservices, distributed systems, and serverless applications. 

AWS AppSync simplifies application development by letting you create a flexible API to securely access,
manipulate, and combine data from one or more data sources. AppSync is a managed service that uses GraphQL 
to make it easy for applications to get exactly the data they need.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;AR-&amp;amp;-VR&quot;&gt;AR &amp;amp; VR&lt;a class=&quot;anchor-link&quot; href=&quot;#AR-&amp;amp;-VR&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt; Amazon Sumerian - Easily create and run browser-based 3D, augmented reality (AR), and virtual reality 
 (VR) applications.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;AWS-Cost-Management&quot;&gt;AWS Cost Management&lt;a class=&quot;anchor-link&quot; href=&quot;#AWS-Cost-Management&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;AWS Cost Explorer has an easy-to-use interface that lets you visualize, understand, and manage your 
AWS costs and usage over time.

AWS Budgets gives you the ability to set custom budgets that alert you when your costs or usage exceed 
(or are forecasted to exceed) your budgeted amount.

The AWS Cost &amp;amp; Usage Report contains the most comprehensive set of AWS cost and usage data available, 
including additional metadata about AWS services, pricing, and reservations (e.g., Amazon EC2 Reserved
Instances (RIs)).

The Reserved Instance Utilization and Coverage reports are available out-of-the-box in AWS Cost Explorer.
Using these reports, you can set custom RI utilization and coverage targets, visualize how well you are
tracking towards your goals, and access information associated with your savings as compared to On-Demand
prices

Savings Plans is a flexible pricing model that provides savings of up to 72% on your AWS compute usage.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;BlockChain&quot;&gt;BlockChain&lt;a class=&quot;anchor-link&quot; href=&quot;#BlockChain&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Amazon Managed Blockchain is a fully managed service that makes it easy to create and manage scalable
blockchain networks using the popular open source frameworks Hyperledger Fabric and Ethereum*.

Amazon QLDB is a fully managed ledger database that provides a transparent, immutable, and 
cryptographically verifiable transaction log&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Business-Applications&quot;&gt;Business Applications&lt;a class=&quot;anchor-link&quot; href=&quot;#Business-Applications&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Alexa for Business is a service that enables organizations and employees to use Alexa to get more work done

Amazon Chime is a communications service that lets you meet, chat, and place business calls inside and 
outside your organization, all using a single application

Amazon WorkDocs is a fully managed, secure content creation, storage, and collaboration service. 
With Amazon WorkDocs, you can easily create, edit, and share content, and because it’s stored centrally 
on AWS, access it from anywhere on any device

Amazon WorkMail is a secure, managed business email and calendar service with support for existing 
desktop and mobile email client applications&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Compute&quot;&gt;Compute&lt;a class=&quot;anchor-link&quot; href=&quot;#Compute&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Amazon Elastic Compute Cloud (Amazon EC2) is a web service that provides secure, resizable compute capacity 
in the cloud

Amazon EC2 Auto Scaling helps you maintain application availability and allows you to automatically add 
or remove EC2 instances according to conditions you define

Lightsail is an easy-to-use cloud platform that offers you everything needed to build an application
or website, plus a cost-effective, monthly plan

AWS Batch enables developers, scientists, and engineers to easily and efficiently run hundreds of thousands
of batch computing jobs on AWS

AWS Elastic Beanstalk is an easy-to-use service for deploying and scaling web applications and services 
developed with Java, .NET, PHP, Node.js, Python, Ruby, Go, and Docker 

AWS Lambda lets you run code without provisioning or managing servers. You pay only for the compute time 
you consume.

AWS Outposts is a fully managed service that extends AWS infrastructure, AWS services, APIs, and tools 
to virtually any datacenter, co-location space, or on-premises facility for a truly consistent hybrid
experience

The AWS Serverless Application Repository is a managed repository for serverless applications. It enables
teams, organizations, and individual developers to store and share reusable applications, and easily 
assemble and deploy serverless architectures in powerful new ways.

AWS Snow Family provides edge infrastructure and software that moves data processing and analysis as close 
as necessary to where data is created in order to deliver intelligent, real-time responsiveness and 
streamline the amount of data transferred

AWS Wavelength enables developers to build applications that deliver single-digit millisecond latencies 
to mobile devices and end-users. 

With VMware Cloud™ on AWS you can migrate datacenters to the cloud for rapid datacenter evacuation, 
disaster recovery, and application modernization&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Containers&quot;&gt;Containers&lt;a class=&quot;anchor-link&quot; href=&quot;#Containers&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;AWS App2Container (A2C) is a command-line tool for modernizing .NET and Java applications into containerized
applications. A2C analyzes and builds an inventory of all applications running in virtual machines, 
on-premises or in the cloud. You simply select the application you want to containerize, and A2C packages 
the application artifact and identified dependencies into container images, configures the network ports, 
and generates the ECS task and Kubernetes pod definition.

Amazon Elastic Container Registry (ECR) is a fully-managed Docker container registry that makes it easy for
developers to store, manage, and deploy Docker container images. Amazon ECR is integrated with Amazon 
Elastic Container Service (ECS), simplifying your development to production workflow.

Amazon Elastic Container Service (Amazon ECS) is a fully managed container orchestration service.

Amazon Elastic Kubernetes Service (Amazon EKS) is a fully managed Kubernetes service

AWS Fargate is a serverless compute engine for containers that works with both Amazon Elastic Container 
Service (ECS) and Amazon Elastic Kubernetes Service (EKS). Fargate makes it easy for you to focus on 
building your applications. Fargate removes the need to provision and manage servers, lets you specify and 
pay for resources per application, and improves security through application isolation by design.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Customer-Engagement&quot;&gt;Customer Engagement&lt;a class=&quot;anchor-link&quot; href=&quot;#Customer-Engagement&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Amazon Connect is an easy to use omnichannel cloud contact center that helps companies provide superior
customer service at a lower cost.

Amazon Pinpoint is a flexible and scalable outbound and inbound marketing communications service. You can
connect with customers over channels like email, SMS, push, or voice. 

Amazon Simple Email Service (SES) is a cost-effective, flexible, and scalable email service that enables
developers to send mail from within any application

Contact Lens for Amazon Connect is a set of machine learning (ML) capabilities integrated into Amazon 
Connect.With Contact Lens for Amazon Connect, contact center supervisors can better understand the 
sentiment,trends, and compliance of customer conversations to effectively train agents, replicate 
successful interactions, and identify crucial company and product feedback.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Databases&quot;&gt;Databases&lt;a class=&quot;anchor-link&quot; href=&quot;#Databases&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Amazon Aurora is a MySQL and PostgreSQL-compatible relational database built for the cloud, that combines 
thenperformance and availability of traditional enterprise databases with the simplicity and 
cost-effectiveness of open source databases.

Amazon DynamoDB is a key-value and document database that delivers single-digit millisecond performance at 
any scale. It's a fully managed, multiregion, multimaster, durable database with built-in security, backup 
and restore, and in-memory caching for internet-scale applications. DynamoDB can handle more than 10 
trillion requests per day and can support peaks of more than 20 million requests per second.

Amazon DocumentDB (with MongoDB compatibility) is a fast, scalable, highly available, and fully managed
document database service that supports MongoDB workloads. As a document database, Amazon DocumentDB makes 
it easy to store, query, and index JSON data.

Amazon ElastiCache allows you to seamlessly set up, run, and scale popular open-Source compatible in-memory
data stores in the cloud. Build data-intensive apps or boost the performance of your existing databases by
retrieving data from high throughput and low latency in-memory data stores.

Amazon Keyspaces (for Apache Cassandra) is a scalable, highly available, and managed Apache 
Cassandra–compatible database service. 

Amazon Neptune is a fast, reliable, fully managed graph database service that makes it easy to build and 
run applications that work with highly connected datasets. 

Amazon QLDB is a fully managed ledger database that provides a transparent, immutable, and cryptographically
verifiable transaction log ‎owned by a central trusted authority. Amazon QLDB can be used to track each and
every application data change and maintains a complete and verifiable history of changes over time.

Amazon Relational Database Service (Amazon RDS) makes it easy to set up, operate, and scale a relational
database in the cloud. It provides cost-efficient and resizable capacity while automating time-consuming
administration tasks such as hardware provisioning, database setup, patching and backups.

Amazon Relational Database Service (RDS) on VMware lets you deploy managed databases in on-premises VMware
environments using the Amazon RDS technology enjoyed by hundreds of thousands of AWS customers.

Redshift makes it simple and cost effective to run high performance queries on petabytes of structured data 
so that you can build powerful reports and dashboards using your existing business intelligence tools.

Amazon Timestream is a fast, scalable, fully managed time series database service for IoT and operational
applications that makes it easy to store and analyze trillions of events per day at 1/10th the cost of
relational databases

AWS Database Migration Service helps you migrate databases to AWS quickly and securely. The source database
remains fully operational during the migration, minimizing downtime to applications that rely on the 
database.The AWS Database Migration Service can migrate your data to and from most widely used commercial 
and open-source databases.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ankush Agarwal</name></author><summary type="html"></summary></entry></feed>
<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="https://ankushagarwal87.github.io/continuouslearning/feed.xml" rel="self" type="application/atom+xml" /><link href="https://ankushagarwal87.github.io/continuouslearning/" rel="alternate" type="text/html" /><updated>2020-07-12T07:25:48-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/feed.xml</id><title type="html">continuouslearning</title><subtitle>An easy to use blogging platform with support for Jupyter Notebooks.</subtitle><entry><title type="html">HashiCorp</title><link href="https://ankushagarwal87.github.io/continuouslearning/hashicorp/2020/07/12/HashiCorp.html" rel="alternate" type="text/html" title="HashiCorp" /><published>2020-07-12T00:00:00-05:00</published><updated>2020-07-12T00:00:00-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/hashicorp/2020/07/12/HashiCorp</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/hashicorp/2020/07/12/HashiCorp.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-07-12-HashiCorp.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;&lt;img src=&quot;/continuouslearning/images/copied_from_nb/my_icons/image.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Steps&quot;&gt;Steps&lt;a class=&quot;anchor-link&quot; href=&quot;#Steps&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Options
    CLI Command
    API call
    Web UI

Step 1: Configure Transit Secrets Engine
Step 2: Encrypt Secrets
Step 3: Decrypt ciphertext
Step 4: Rotate the Encryption Key
Step 5: Update Key Configuration
Step 6: Generate Data Key
    Can call API to get encypted key &amp;amp; decrypt the file (no need of sending entire file)

Vault HTTP API imposes a maximum request size of 32MB to prevent a denial of service attack. 
This can be tuned per listener block in the Vault server configuration.


Question
    Why don't have own method of encryption/decryption rather then on service
    How hashicorp validate user (who is asking for key or encrypt/decrypt request)
        https://www.youtube.com/watch?v=lZnrrGxrInk&amp;amp;feature=emb_rel_end
    Do we really need to encrypt data when there is option of delete post processing
    If two files comes at the same time - How ABC will work
    Is single instance work on API/File Integration
    Can we not have FTP connector in the end to send file
        Output Port need to be open 
    Email Connector


Reference
    https://learn.hashicorp.com/vault/encryption-as-a-service/eaas-transit
    https://www.vaultproject.io/api-docs/secret/transit
    https://www.hashicorp.com/blog/how-vault-encrypts-application-data-during-transit-and-at-rest/
    https://www.hashicorp.com/resources/encryption-as-a-service-with-vault-s-transit-secret-engine/


Options
    We can have lambda function trigger when file comes to S3 
    Lambda function will dcrypt &amp;amp; again save to S3 
    Trigger ABC on S3


AWS Integration
    https://www.vaultproject.io/docs/auth/aws
    https://www.vaultproject.io/api/auth/aws
    IAM auth method
        The AWS STS API includes a method, sts:GetCallerIdentity, which allows you to validate the identity 
        of a client. The client signs a GetCallerIdentity query using the AWS Signature v4 algorithm 
        and sends it to the Vault server. The credentials used to sign the GetCallerIdentity request 
        can come from the EC2 instance metadata service for an EC2 instance, or from the AWS environment
        variables in an AWS Lambda function execution, which obviates the need for an operator to manually
        provision some sort of identity material first. However, the credentials can, in principle, come 
        from anywhere, not just from the locations AWS has provided for you.

        AWS Security Token Service (AWS STS) is a web service that enables you to request temporary, 
        limited-privilege credentials for AWS Identity and Access Management (IAM) users

        GetCallerIdentity
            Returns details about the IAM user or role whose credentials are used to call the operation. 
            https://docs.aws.amazon.com/STS/latest/APIReference/API_GetCallerIdentity.html

    EC2 auth method
        Amazon EC2 instances have access to metadata which describes the instance. 
        The Vault EC2 auth method leverages the components of this metadata to authenticate and 
            distribute an initial Vault token to an EC2 instance.

ABC
    An enterprise-level FTP Client is included in the Core edition, which provides an intuitive
    browser-based administrator, extensive security features, user management, file triggers, and 
    detailed audit trails.

Lambda
    https://docs.aws.amazon.com/lambda/latest/dg/with-s3.html&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ankush Agarwal</name></author><summary type="html"></summary></entry><entry><title type="html">AWS Basics</title><link href="https://ankushagarwal87.github.io/continuouslearning/aws/study%20guide/2020/07/11/Introduction-to-AWS.html" rel="alternate" type="text/html" title="AWS Basics" /><published>2020-07-11T00:00:00-05:00</published><updated>2020-07-11T00:00:00-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/aws/study%20guide/2020/07/11/Introduction-to-AWS</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/aws/study%20guide/2020/07/11/Introduction-to-AWS.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/20-06-06-Introduction to AWS.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Assessment-Test&quot;&gt;Assessment Test&lt;a class=&quot;anchor-link&quot; href=&quot;#Assessment-Test&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Default Amazon EC2 instance limit of 20 per region.
The ELB service allows you to distribute traffic across a group of EC2 instances in one or more 
    Availability Zones within a region
An Amazon Elastic Compute Cloud (Amazon EC2) instance in an Amazon Virtual Private Cloud 
    (Amazon VPC) subnet can send and receive traffic from the Internet when
    Network ACLs and security group rules allow relevant Internet traffic
    Attach an Internet Gateway (IGW) to the Amazon VPC and create a subnet route table to
        send all non-local traffic to that IGW.
    The Amazon EC2 instance has a public IP address or Elastic IP (EIP) address.
 If a security group is not specified at launch, then an Amazon EC2 instance will be launched 
     into the default security group for the Amazon VPC. 
     The default security group allows communication between all resources within the security group,
     allows all outbound traffic, and denies all other traffic.
 An environment tier whose web application runs background jobs is known as a worker tier. 
     An environment tier whose web application processes web requests is known as a web server tier. 
 There can be one secondary index per table, and it must be created when the table is created.
 The Amazon Kinesis family of services provides functionality to ingest large streams of data. 
     Amazon Kinesis Firehose is specifically designed to ingest a stream and save it to 
     Amazon Simple Storage Service (Amazon S3), Amazon Redshift, or Amazon Elasticsearch Service.
  Server access logs provide a record of any access to an object in Amazon S3.
  AWS will never transfer data between regions unless directed to by you. 
      Durability in Amazon S3 is achieved by replicating your data geographically to 
      different Availability Zones regardless of the versioning configuration. AWS doesn't use tapes.
  The data in an instance store persists only during the lifetime of its associated instance. 
      If an instance is stopped or terminated, then the instance store does not persist.
  In an Amazon VPC, an instance's Elastic IP address remains associated with an instance 
      when the instance is stopped.
  An activity worker is a process or thread that performs the activity tasks that 
      are part of your workflow.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Compute-and-Networking-Services&quot;&gt;Compute and Networking Services&lt;a class=&quot;anchor-link&quot; href=&quot;#Compute-and-Networking-Services&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Amazon Elastic Compute Cloud (Amazon EC2) is a web service that provides resizable compute capacity 
    in the cloud. It allows organizations to obtain and configure virtual servers in 
    Amazon’s data centers and to harness those resources to build and host software systems.

AWS Lambda is a zero-administration compute platform for back-end web developers that runs your code 
    for you on the AWS Cloud and provides you with a fine-grained pricing structure

Auto Scaling allows organizations to scale Amazon EC2 capacity up or down automatically according 
    to conditions defined for the particular workload

Elastic Load Balancing automatically distributes incoming application traffic across multiple 
    Amazon EC2 instances in the cloud.It enables organizations to achieve greater levels of 
    fault tolerance in their applications,seamlessly providing the required amount of load balancing 
    capacity needed to distribute application traffic.

AWS Elastic Beanstalk is the fastest and simplest way to get a web application up and running on AWS.
    Developers can simply upload their application code, and the service automatically handles all 
    the details, such as resource provisioning, load balancing, Auto Scaling, and monitoring.

Amazon Virtual Private Cloud (Amazon VPC) lets organizations provision a logically isolated section 
    of the AWS Cloud where they can launch AWS resources in a virtual network that they define. 

AWS Direct Connect allows organizations to establish a dedicated network connection from their data 
    center to AWS. Using AWS Direct Connect, organizations can establish private connectivity between 
    AWS and their data center, office, or colocation environment.

Amazon Route 53 is a highly available and scalable Domain Name System (DNS) web service. 
    It is designed to give developers and businesses an extremely reliable and cost-effective way 
    to route end users to Internet applications by translating human readable names, such as 
    www.example.com, into the numeric IP addresses, such as 192.0.2.1, 
    that computers use to connect to each other.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Storage-and-Content-Delivery&quot;&gt;Storage and Content Delivery&lt;a class=&quot;anchor-link&quot; href=&quot;#Storage-and-Content-Delivery&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Amazon Simple Storage Service (Amazon S3) provides developers and IT teams with highly durable and 
    scalable object storage that handles virtually unlimited amounts of data and large numbers 
    of concurrent users.

Amazon Glacier is a secure, durable, and extremely low-cost storage service for data archiving 
    and long-term backup. Organizations can reliably store large or small amounts of data for a very 
    low cost per gigabyte per month.

Amazon Elastic Block Store (Amazon EBS) provides persistent block-level storage volumes for use 
    with Amazon EC2 instances. Each Amazon EBS volume is automatically replicated within its 
    Availability Zone to protect organizations from component failure, offering high availability 
    and durability.

AWS Storage Gateway is a service connecting an on-premises software appliance with cloud-based storage 
    to provide seamless and secure integration between an organization’s on-premises IT environment 
    and the AWS storage infrastructure.

Amazon CloudFront is a content delivery web service. It integrates with other AWS Cloud services to 
    give developers and businesses an easy way to distribute content to users across the world 
    with low latency, high data transfer speeds, and no minimum usage commitments.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Database-Services&quot;&gt;Database Services&lt;a class=&quot;anchor-link&quot; href=&quot;#Database-Services&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Amazon Relational Database Service (Amazon RDS) provides a fully managed relational database with 
    support for many popular open source and commercial database engines. It’s a cost-efficient 
    service that allows organizations to launch secure, highly available, fault-tolerant, 
    production-ready databases in minutes.

Amazon DynamoDB is a fast and flexible NoSQL database service for all applications that need 
    consistent, single-digit millisecond latency at any scale.

Amazon Redshift is a fast, fully managed, petabyte-scale data warehouse service that makes it 
    simple and cost effective to analyze structured data. Amazon Redshift provides a standard 
    SQL interface that lets organizations use existing business intelligence tools. By leveraging 
    columnar storage technology that improves I/O efficiency and parallelizing queries across 
    multiple nodes, Amazon Redshift is able to deliver fast query performance

Amazon ElastiCache is a web service that simplifies deployment, operation, and scaling of an 
    in-memory cache in the cloud. The service improves the performance of web applications by 
    allowing organizations to retrieve information from fast, managed, in-memory caches, instead
    of relying entirely on slower, disk-based databases. As of this writing, Amazon ElastiCache
    supports Memcached and Redis cache engines.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Management-Tools&quot;&gt;Management Tools&lt;a class=&quot;anchor-link&quot; href=&quot;#Management-Tools&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Amazon CloudWatch is a monitoring service for AWS Cloud resources and the applications running on AWS.
    It allows organizations to collect and track metrics, collect and monitor log files, and set alarms. 

AWS CloudFormation gives developers and systems administrators an effective way to create and 
    manage a collection of related AWS resources, provisioning and updating them in an orderly 
    and predictable fashion. AWS CloudFormation defines a JSON-based templating language that 
    can be used to describe all the AWS resources that are necessary for a workload. Templates 
    can be submitted to AWS CloudFormation and the service will take care of provisioning and 
    configuring those resources in appropriate order.

AWS CloudTrail is a web service that records AWS API calls for an account and delivers log files 
    for audit and review. 

AWS Config is a fully managed service that provides organizations with an AWS resource inventory, 
    configuration history, and configuration change notifications to enable security and governance. 
    With AWS Config, organizations can discover existing AWS resources, export an inventory of their 
    AWS resources with all configuration details, and determine how a resource was configured 
    at any point in time. These capabilities enable compliance auditing, security analysis, 
    resource change tracking, and troubleshooting.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Security-and-Identity&quot;&gt;Security and Identity&lt;a class=&quot;anchor-link&quot; href=&quot;#Security-and-Identity&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;AWS Identity and Access Management (IAM) enables organizations to securely control access to 
    AWS Cloud services and resources for their users. 

AWS Key Management Service (KMS) is a managed service that makes it easy for organizations to 
    create and control the encryption keys used to encrypt their data and uses 
    Hardware Security Modules (HSMs) to protect the security of your keys.

AWS Directory Service allows organizations to set up and run Microsoft Active Directory on the 
    AWS Cloud or connect their AWS resources with an existing on-premises Microsoft Active Directory. 

AWS Certificate Manager is a service that lets organizations easily provision, manage, and deploy 
    Secure Sockets Layer/Transport Layer Security (SSL/TLS) certificates for use with AWS Cloud services.

AWS Web Application Firewall (WAF) helps protect web applications from common attacks and exploits 
    that could affect application availability, compromise security, or consume excessive resources. 
    AWS WAF gives organizations control over which traffic to allow or block to their web 
    applications by defining customizable web security rules.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Application-Services&quot;&gt;Application Services&lt;a class=&quot;anchor-link&quot; href=&quot;#Application-Services&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Amazon API Gateway is a fully managed service that makes it easy for developers to create, publish, 
    maintain, monitor, and secure APIs at any scale. Organizations can create an API that acts 
    as a “front door” for applications to access data, business logic, or functionality from back-end 
    services, such as workloads running on Amazon EC2, code running on AWS Lambda, or any web application.

Amazon Elastic Transcoder is media transcoding in the cloud.

Amazon Simple Notification Service (Amazon SNS) is a web service that coordinates and manages 
    the delivery or sending of messages to recipients.

Amazon Simple Email Service (Amazon SES) is a cost-effective email service that organizations can
    use to send transactional email, marketing messages, or any other type of content to their customers.

Amazon Simple Workflow Service (Amazon SWF) helps developers build, run, and scale background
    jobs that have parallel or sequential steps. 

Amazon Simple Queue Service (Amazon SQS) is a fast, reliable, scalable, fully managed message queuing 
    service.Amazon SQS makes it simple and cost effective to decouple the components of a cloud application.    &lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ankush Agarwal</name></author><summary type="html"></summary></entry><entry><title type="html">AWS Identity and Access Management (IAM)</title><link href="https://ankushagarwal87.github.io/continuouslearning/aws/iam/2020/07/08/AWS-Identity-and-Access-Management-(IAM).html" rel="alternate" type="text/html" title="AWS Identity and Access Management (IAM)" /><published>2020-07-08T00:00:00-05:00</published><updated>2020-07-08T00:00:00-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/aws/iam/2020/07/08/AWS-Identity-and-Access-Management-(IAM)</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/aws/iam/2020/07/08/AWS-Identity-and-Access-Management-(IAM).html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-07-08-AWS Identity and Access Management (IAM).ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Introduction&quot;&gt;Introduction&lt;a class=&quot;anchor-link&quot; href=&quot;#Introduction&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;IAM uses traditional identity concepts such as users, groups, and access control policies to control who 
    can use your AWS account, what services and resources they can use, and how they can use them. 
The control provided by IAM is granular enough to limit a single user to the ability to perform a single 
    action on a specific resource from a specific IP address during a specific time window. 
Applications can be granted access to AWS resources whether they are running on-premises or in the cloud. 

If your application identities are based on Active Directory, your on-premises Active Directory can be 
    extended into the cloud to continue to fill that need. 
A great solution for using Active Directory in the cloud is AWS Directory Service, which is an Active
    Directory-compatible directory service that can work on its own or integrate with your on-premises 
    Active Directory. 
Finally, if you are working with a mobile app, consider Amazon Cognito for identity management for 
    mobile applications.

Operating System Access - Active Directory LDAP Machine-specific accounts
Application Access - Active Directory, Application User Repositories, Amazon Cognito
AWS Resources - IAM

IAM is controlled like most other AWS Cloud services:
    AWS Management Console
    CLI
    AWS SDK&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Principals&quot;&gt;Principals&lt;a class=&quot;anchor-link&quot; href=&quot;#Principals&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;The first IAM concept to understand is principals. 
A principal is an IAM entity that is allowed to interact with AWS resources. 
A principal can be permanent or temporary, and it can represent a human or an application. 
There are three types of principals: root users, IAM users, and roles/temporary security tokens.

Root User
    When you first create an AWS account, you begin with only a single sign-in principal that has complete
        access to all AWS Cloud services and resources in the account. 
    This principal is called the root user. As long as you have an open account with AWS, the root user 
        for that relationship will persist. 
    The root user can be used for both console and programmatic access to AWS resources.

IAM Users
    Users are persistent identities set up through the IAM service to represent individual people 
        or applications. 
    You may create separate IAM users for each member of your operations team so they can interact 
        with the console and use the CLI.

Roles/Temporary Security Tokens
    Roles are used to grant specific privileges to specific actors for a set duration of time. 
    These actors can be authenticated by AWS or some trusted external system. 
    When one of these actors assumes a role, AWS provides the actor with a temporary security token 
        from the AWS Security Token Service (STS) that the actor can use to access AWS Cloud services. 

    Amazon EC2 Roles—Granting permissions to applications running on an Amazon EC2 instance.
    Cross-Account Access—Granting permissions to users from other AWS accounts, whether you 
        control those accounts or not.
    Federation—Granting permissions to users authenticated by a trusted external system.

    Amazon EC2 Roles
        Suppose that an application running on an Amazon EC2 instance needs to access an Amazon Simple 
            Storage Service (Amazon S3) bucket. 
        A policy granting permission to read and write that bucket can be created and assigned to an IAM 
            user,and the application can use the access key for that IAM user to access the Amazon S3 bucket
        The problem with this approach is that the access key for the user must be accessible to the
            application, probably by storing it in some sort of configuration file. 

        An alternative is to create an IAM role that grants the required access to the Amazon S3 bucket. 
        When the Amazon EC2 instance is launched, the role is assigned to the instance. 
        When the application running on the instance uses the Application Programming Interface (API) to 
            access the Amazon S3 bucket, it assumes the role assigned to the instance and obtains a 
            temporary token that it sends to the API. 

    Cross-Account Access
        Another common use case for IAM roles is to grant access to AWS resources to IAM users in other 
            AWS accounts

    Federation
        Many organizations already have an identity repository outside of AWS and would rather leverage 
            that repository than create a new and largely duplicate repository of IAM users. 
        Similarly, web-based applications may want to leverage web-based identities such as Facebook, 
            Google, or Login with Amazon. 
        IAM Identity Providers provide the ability to federate these outside identities with IAM and 
            assign privileges to those users authenticated outside of IAM.
        IAM can integrate with two different types of outside Identity Providers (IdP). 
        For federating web identities such as Facebook, Google, or Login with Amazon, IAM supports 
            integration via OpenID Connect (OIDC).
        For federating internal identities, such as Active Directory or LDAP, IAM supports integration 
            via Security Assertion Markup Language 2.0 (SAML). 
        A SAML-compliant IdP such as Active Directory Federation Services (ADFS) is used to federate the
            internal directory to IAM. 
        In each case, federation works by returning a temporary token associated with a role to the IdP 
            for the authenticated identity to use for calls to the AWS API.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Authentication&quot;&gt;Authentication&lt;a class=&quot;anchor-link&quot; href=&quot;#Authentication&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;There are three ways that IAM authenticates a principal:
User Name/Password
    When a principal represents a human interacting with the console, the human will provide a user
        name/password pair to verify their identity. 
    IAM allows you to create a password policy enforcing password complexity and expiration.

Access Key
    An access key is a combination of an access key ID (20 characters) and an access secret key (40
        characters). When a program is manipulating the AWS infrastructure via the API, it will use 
        these values to sign the underlying REST calls to the services. 

Access Key/Session Token
    When a process operates under an assumed role, the temporary security token provides an access key 
        for authentication. In addition to the access key (remember that it consists of two parts), 
        the token also includes a session token. 
     Calls to AWS must include both the two-part access key and the session token to authenticate.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Authorization&quot;&gt;Authorization&lt;a class=&quot;anchor-link&quot; href=&quot;#Authorization&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;After IAM has authenticated a principal, it must then manage the access of that principal to protect your 
    AWS infrastructure. 
The process of specifying exactly what actions a principal can and cannot perform is called authorization.
Authorization is handled in IAM by defining specific privileges in policies and associating those policies 
    with principals.

Policies
    A policy is a JSON document that fully defines a set of permissions to access and manipulate 
        AWS resources. Policy documents contain one or more permissions, with each permission defining

    Effect
        A single word: Allow or Deny.

    Service
        For what service does this permission apply? Most AWS Cloud services support granting access 
            through IAM, including IAM itself.

    Resource
        The resource value specifies the specific AWS infrastructure for which this permission applies. 
        This is specified as an Amazon Resource Name (ARN). 
        The format for an ARN varies slightly between services, but the basic format is:
        &quot;arn:aws:service:region:account-id:[resourcetype:]resource&quot;

    Action
        The action value specifies the subset of actions within a service that the permission allows
            or denies. For instance, a permission may grant access to any read-based action for Amazon S3.
        A set of actions can be specified with an enumerated list or by using wildcards (Read*).

    Condition
        The condition value optionally defines one or more additional restrictions that limit the actions
            allowed by the permission. 
        For instance, the permission might contain a condition that limits the ability to access a 
            resource to calls that come from a specific IP address range. 
        Another condition could restrict the permission only to apply during a specific time interval.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Associating-Policies-with-Principals&quot;&gt;Associating Policies with Principals&lt;a class=&quot;anchor-link&quot; href=&quot;#Associating-Policies-with-Principals&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;There are several ways to associate a policy with an IAM user; this section will only cover the most common.
A policy can be associated directly with an IAM user in one of two ways:
User Policy
    These policies exist only in the context of the user to which they are attached. 
    In the console, a user policy is entered into the user interface on the IAM user page.

Managed Policies
    These policies are created in the Policies tab on the IAM page and exist independently of any 
        individual user. 
    In this way, the same policy can be associated with many users or groups of users. 

There are two ways a policy can be associated with an IAM group:
Group Policy
    These policies exist only in the context of the group to which they are attached. 
    In the AWS Management Console, a group policy is entered into the user interface on the IAM Group page.
Managed Policies
    In the same way that managed policies can be associated with IAM users, they can also be associated 
        with IAM groups.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Other-Key-Features&quot;&gt;Other Key Features&lt;a class=&quot;anchor-link&quot; href=&quot;#Other-Key-Features&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Multi-Factor Authentication (MFA)
Rotating Keys
    To this end, it is a security best practice to rotate access keys associated with your IAM users.
    IAM facilitates this process by allowing two active access keys at a time. 
    The process to rotate keys can be conducted via the console, CLI, or SDKs:            
        Create a new access key for the user.
        Reconfigure all applications to use the new access key.
        Disable the original access key 
        Verify the operation of all applications.
        Delete the original access key.
Resolving Multiple Permissions        
    Initially the request is denied by default.
    All the appropriate policies are evaluated; if there is an explicit “deny” found in any policy, 
        the request is denied and evaluation stops.
    If no explicit “deny” is found and an explicit “allow” is found in any policy, the request is allowed.
    If there are no explicit “allow” or “deny” permissions found, then the default “deny” is 
        maintained and the request is denied.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ankush Agarwal</name></author><summary type="html"></summary></entry><entry><title type="html">Amazon ELB, CloudWatch, Auto Scaling</title><link href="https://ankushagarwal87.github.io/continuouslearning/aws/elb/cloudwatch/auto%20scaling/2020/07/07/Elastic-Load-Balancing,-Amazon-CloudWatch,-and-Auto-Scaling.html" rel="alternate" type="text/html" title="Amazon ELB, CloudWatch, Auto Scaling" /><published>2020-07-07T00:00:00-05:00</published><updated>2020-07-07T00:00:00-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/aws/elb/cloudwatch/auto%20scaling/2020/07/07/Elastic-Load-Balancing,-Amazon-CloudWatch,-and-Auto-Scaling</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/aws/elb/cloudwatch/auto%20scaling/2020/07/07/Elastic-Load-Balancing,-Amazon-CloudWatch,-and-Auto-Scaling.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-07-07-Elastic Load Balancing, Amazon CloudWatch, and Auto Scaling.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Introduction&quot;&gt;Introduction&lt;a class=&quot;anchor-link&quot; href=&quot;#Introduction&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Elastic Load Balancing is a highly available service that distributes traffic across Amazon Elastic 
    Compute Cloud (Amazon EC2) instances and includes options that provide flexibility and control 
    of incoming requests to Amazon EC2 instances.

Amazon CloudWatch is a service that monitors AWS Cloud resources and applications running on AWS. 
    It collects and tracks metrics, collects and monitors log files, and sets alarms. 
    Amazon CloudWatch has a basic level of monitoring for no cost and a more detailed level of 
    monitoring for an additional cost.

Auto Scaling is a service that allows you to maintain the availability of your applications by 
    scaling Amazon EC2 capacity up or down in accordance with conditions you set.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Elastic-Load-Balancing&quot;&gt;Elastic Load Balancing&lt;a class=&quot;anchor-link&quot; href=&quot;#Elastic-Load-Balancing&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;The Elastic Load Balancing service allows you to distribute traffic across a group of Amazon EC2 instances 
    in one or more Availability Zones, enabling you to achieve high availability in your applications. 
Elastic Load Balancing supports routing and load balancing of Hypertext Transfer Protocol (HTTP), 
    Hypertext Transfer Protocol Secure (HTTPS), Transmission Control Protocol (TCP), and Secure Sockets 
    Layer (SSL) traffic to Amazon EC2 instances. 
Elastic Load Balancing provides a stable, single Canonical Name record (CNAME) entry point for Domain Name
    System (DNS) configuration and supports both Internet-facing and internal application-facing load
    balancers. 
Elastic Load Balancing supports health checks for Amazon EC2 instances to ensure traffic is not routed 
    to unhealthy or failing instances.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Types-of-Load-Balancers&quot;&gt;Types of Load Balancers&lt;a class=&quot;anchor-link&quot; href=&quot;#Types-of-Load-Balancers&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Internet-Facing Load Balancers
    An Internet-facing load balancer is, as the name implies, a load balancer that takes requests from 
        clients over the Internet and distributes them to Amazon EC2 instances that are registered with 
        the load balancer.
    When you configure a load balancer, it receives a public DNS name that clients can use to send requests 
        to your application. The DNS servers resolve the DNS name to your load balancer’s public IP 
        address, which can be visible to client applications.

Internal Load Balancers
    In a multi-tier application, it is often useful to load balance between the tiers of the application. 
    You can use internal load balancers to route traffic to your Amazon EC2 instances in VPCs with 
        private subnets.

HTTPS Load Balancers
    You can create a load balancer that uses the SSL/Transport Layer Security (TLS) protocol for 
        encrypted connections (also known as SSL offload). 
    This feature enables traffic encryption between your load balancer and the clients that initiate 
        HTTPS sessions, and for connections between your load balancer and your back-end instances.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Listeners&quot;&gt;Listeners&lt;a class=&quot;anchor-link&quot; href=&quot;#Listeners&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Every load balancer must have one or more listeners configured. 
A listener is a process that checks for connection requests—for example, a CNAME configured to the 
    A record name of the load balancer. 
Every listener is configured with a protocol and a port (client to load balancer) for a front-end 
    connection and a protocol and a port for the back-end (load balancer to Amazon EC2 instance) connection.

Elastic Load Balancing supports the following protocols:
HTTP
HTTPS
TCP
SSL

Elastic Load Balancing supports protocols operating at two different Open System Interconnection (OSI) layer
In the OSI model, Layer 4 is the transport layer that describes the TCP connection between the client 
    and your back-end instance through the load balancer. 
Layer 4 is the lowest level that is configurable for your load balancer. 
Layer 7 is the application layer that describes the use of HTTP and HTTPS connections from clients to 
    the load balancer and from the load balancer to your back-end instance.

The SSL protocol is primarily used to encrypt confidential data over insecure networks such as the Internet.
The SSL protocol establishes a secure connection between a client and the back-end server and ensures 
    that all the data passed between your client and your server is private.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Configuring-Elastic-Load-Balancing&quot;&gt;Configuring Elastic Load Balancing&lt;a class=&quot;anchor-link&quot; href=&quot;#Configuring-Elastic-Load-Balancing&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Elastic Load Balancing allows you to configure many aspects of the load balancer, including idle 
    connection timeout, cross-zone load balancing, connection draining, proxy protocol, sticky sessions, 
    and health checks&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Amazon-CloudWatch&quot;&gt;Amazon CloudWatch&lt;a class=&quot;anchor-link&quot; href=&quot;#Amazon-CloudWatch&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Amazon CloudWatch offers either basic or detailed monitoring for supported AWS products. 
Basic monitoring sends data points to Amazon CloudWatch every five minutes for a limited number of 
    preselected metrics at no charge. 
Detailed monitoring sends data points to Amazon CloudWatch every minute and allows data aggregation for 
    an additional charge. If you want to use detailed monitoring, you must enable it—basic is the default.

Amazon CloudWatch does not aggregate data across regions but can aggregate across Availability Zones 
    within a region.

AWS provides a rich set of metrics included with each service, but you can also define custom metrics to
    monitor resources and events AWS does not have visibility into—for example, Amazon EC2 instance memory
    consumption and disk metrics that are visible to the operating system of the Amazon EC2 instance but 
    not visible to AWS or application-specific thresholds running on instances that are not known to AWS. 

Amazon CloudWatch supports an Application Programming Interface (API) that allows programs and scripts to 
    PUT metrics into Amazon CloudWatch as name-value pairs that can then be used to create events and 
    trigger alarms in the same manner as the default Amazon CloudWatch metrics.

A CloudWatch Logs agent is available that provides an automated way to send log data to CloudWatch Logs 
    for Amazon EC2 instances running Amazon Linux or Ubuntu. 
You can use the Amazon CloudWatch Logs agent installer on an existing Amazon EC2 instance to install and
    configure the CloudWatch Logs agent. 
After installation is complete, the agent confirms that it has started and it stays running until you 
    disable it.

Each AWS account is limited to 5,000 alarms per AWS account, and metrics data is retained for two weeks 
    by default (at the time of this writing). 
If you want to keep the data longer, you will need to move the logs to a persistent store like Amazon S3&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Auto-Scaling&quot;&gt;Auto Scaling&lt;a class=&quot;anchor-link&quot; href=&quot;#Auto-Scaling&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Auto Scaling is a service that allows you to scale your Amazon EC2 capacity automatically by scaling out 
    and scaling in according to criteria that you define. With Auto Scaling, you can ensure that the number 
    of running Amazon EC2 instances increases during demand spikes or peak demand periods to maintain
    application performance and decreases automatically during demand lulls or troughs to minimize costs.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Auto-Scaling-Plans&quot;&gt;Auto Scaling Plans&lt;a class=&quot;anchor-link&quot; href=&quot;#Auto-Scaling-Plans&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Maintain Current Instance Levels
Manual Scaling
Scheduled Scaling
Dynamic Scaling
    For example, you might create a policy that adds more Amazon EC2 instances to the web tier when the 
        network bandwidth, measured by Amazon CloudWatch, reaches a certain threshold.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Auto-Scaling-Components&quot;&gt;Auto Scaling Components&lt;a class=&quot;anchor-link&quot; href=&quot;#Auto-Scaling-Components&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Launch Configuration
    A launch configuration is the template that Auto Scaling uses to create new instances,and it is composed
        of the configuration name, Amazon Machine Image (AMI), Amazon EC2 instance type, security group, 
        and instance key pair. 
    Each Auto Scaling group can have only one launch configuration at a time.

Auto Scaling Group
    An Auto Scaling group is a collection of Amazon EC2 instances managed by the Auto Scaling service.
    Each Auto Scaling group contains configuration options that control when Auto Scaling should launch 
        new instances and terminate existing instances. 
    An Auto Scaling group can use either On-Demand or Spot Instances as the Amazon EC2 instances it manages.
    On-Demand is the default, but Spot Instances can be used by referencing a maximum bid price in the 
        launch configuration (—spot-price &quot;0.15&quot;) associated with the Auto Scaling group.

Scaling Policy
    You can associate Amazon CloudWatch alarms and scaling policies with an Auto Scaling group to adjust
        Auto Scaling dynamically. 
    When a threshold is crossed, Amazon CloudWatch sends alarms to trigger changes (scaling in or out) 
        to the number of Amazon EC2 instances currently receiving traffic behind a load balancer. 
    After the Amazon CloudWatch alarm sends a message to the Auto Scaling group, Auto Scaling executes 
        the associated policy to scale your group. 
    The policy is a set of instructions that tells Auto Scaling whether to scale out, launching new 
        Amazon EC2 instances referenced in the associated launch configuration, or to scale in and 
        terminate nstances.
    You can associate more than one scaling policy with an Auto Scaling group. 
    For example, you can create a policy using the trigger for CPU utilization, called CPULoad, and the
        CloudWatch metric CPUUtilization to specify scaling out if CPU utilization is greater than 75 
        percent for two minutes. 
    You could attach another policy to the same Auto Scaling group to scale in if CPU utilization is less 
        than 40 percent for 20 minutes.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ankush Agarwal</name></author><summary type="html"></summary></entry><entry><title type="html">Amazon VPC</title><link href="https://ankushagarwal87.github.io/continuouslearning/aws/vpc/2020/07/06/Amazon-Virtual-Private-Cloud-(Amazon-VPC).html" rel="alternate" type="text/html" title="Amazon VPC" /><published>2020-07-06T00:00:00-05:00</published><updated>2020-07-06T00:00:00-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/aws/vpc/2020/07/06/Amazon-Virtual-Private-Cloud-(Amazon-VPC)</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/aws/vpc/2020/07/06/Amazon-Virtual-Private-Cloud-(Amazon-VPC).html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-07-06-Amazon Virtual Private Cloud (Amazon VPC).ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Amazon-Virtual-Private-Cloud-(Amazon-VPC)&quot;&gt;Amazon Virtual Private Cloud (Amazon VPC)&lt;a class=&quot;anchor-link&quot; href=&quot;#Amazon-Virtual-Private-Cloud-(Amazon-VPC)&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Amazon VPC is the networking layer for Amazon Elastic Compute Cloud (Amazon EC2), and it allows 
you to build your own virtual network within AWS. 
You control various aspects of your Amazon VPC, including selecting your own IP address range; 
creating your own subnets; and configuring your own route tables, network gateways, and security 
settings. Within a region, you can create multiple Amazon VPCs, and each Amazon VPC is logically 
isolated even if it shares its IP address space.

When you create an Amazon VPC, you must specify the IPv4 address range by choosing a Classless 
Inter-Domain Routing (CIDR) block, such as 10.0.0.0/16. 
The address range of the Amazon VPC cannot be changed after the Amazon VPC is created. 
An Amazon VPC address range may be as large as /16 (65,536 available addresses) or as small as /28 
(16 available addresses) and should not overlap any other network with which they are to be connected.

An Amazon VPC consists of the following components:
    Subnets
    Route tables
    Dynamic Host Configuration Protocol (DHCP) option sets
    Security groups
    Network Access Control Lists (ACLs)
An Amazon VPC has the following optional components:
    Internet Gateways (IGWs)
    Elastic IP (EIP) addresses
    Elastic Network Interfaces (ENIs)
    Endpoints
    Peering
    Network Address Translation (NATs) instances and NAT gateways
    Virtual Private Gateway (VPG), Customer Gateways (CGWs), and Virtual Private Networks (VPNs)&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Subnets&quot;&gt;Subnets&lt;a class=&quot;anchor-link&quot; href=&quot;#Subnets&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;A subnet is a segment of an Amazon VPC’s IP address range where you can launch Amazon EC2 instances, 
    Amazon Relational Database Service (Amazon RDS) databases, and other AWS resources.        
AWS reserves the first four IP addresses and the last IP address of every subnet for internal 
    networking purposes
After creating an Amazon VPC, you can add one or more subnets in each Availability Zone. 
Subnets reside within one Availability Zone and cannot span zones. 
You can, however, have multiple subnets in one Availability Zone.    

Subnets can be classified as public, private, or VPN-only. 
A public subnet is one in which the associated route table (discussed later) directs the 
    subnet’s traffic to the Amazon VPC’s IGW (also discussed later). 
A private subnet is one in which the associated route table does not direct the 
    subnet’s traffic to the Amazon VPC’s IGW. 
A VPN-only subnet is one in which the associated route table directs the 
    subnet’s traffic to the Amazon VPC’s VPG (discussed later) and does not have a route to the IGW.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Route-Tables&quot;&gt;Route Tables&lt;a class=&quot;anchor-link&quot; href=&quot;#Route-Tables&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;A route table is a logical construct within an Amazon VPC that contains a set of rules (called routes)
    that are applied to the subnet and used to determine where network traffic is directed. 
A route table’s routes are what permit Amazon EC2 instances within different subnets within 
    an Amazon VPC to communicate with each other.
You can also use route tables to specify which subnets are public (by directing Internet 
    traffic to the IGW) and which subnets are private (by not having a route that directs 
    traffic to the IGW).
Each subnet must be associated with a route table, which controls the routing for the subnet. 
If you don’t explicitly associate a subnet with a particular route table, 
    the subnet uses the main route table.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Internet-Gateways&quot;&gt;Internet Gateways&lt;a class=&quot;anchor-link&quot; href=&quot;#Internet-Gateways&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;An Internet Gateway (IGW) is a horizontally scaled, redundant, and highly available Amazon VPC 
    component that allows communication between instances in your Amazon VPC and the Internet. 
An IGW provides a target in your Amazon VPC route tables for Internet-routable traffic, and it 
    performs network address translation for instances that have been assigned public IP addresses.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Dynamic-Host-Configuration-Protocol-(DHCP)-Option-Sets&quot;&gt;Dynamic Host Configuration Protocol (DHCP) Option Sets&lt;a class=&quot;anchor-link&quot; href=&quot;#Dynamic-Host-Configuration-Protocol-(DHCP)-Option-Sets&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Dynamic Host Configuration Protocol (DHCP) provides a standard for passing configuration information 
    to hosts on a TCP/IP network. 
The options field of a DHCP message contains the configuration parameters.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Elastic-IP-Addresses-(EIPs)&quot;&gt;Elastic IP Addresses (EIPs)&lt;a class=&quot;anchor-link&quot; href=&quot;#Elastic-IP-Addresses-(EIPs)&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;AWS maintains a pool of public IP addresses in each region and makes them available for you to
    associate to resources within your Amazon VPCs. 
An Elastic IP Addresses (EIP) is a static, public IP address in the pool for the region that you 
    can allocate to your account (pull from the pool) and release (return to the pool). 
EIPs allow you to maintain a set of IP addresses that remain fixed while the underlying infrastructure
    may change over time.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Elastic-Network-Interfaces-(ENIs)&quot;&gt;Elastic Network Interfaces (ENIs)&lt;a class=&quot;anchor-link&quot; href=&quot;#Elastic-Network-Interfaces-(ENIs)&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;An Elastic Network Interface (ENI) is a virtual network interface that you can attach to an instance
    in an Amazon VPC. 
ENIs are only available within an Amazon VPC, and they are associated with a subnet upon creation. 
They can have one public IP address and multiple private IP addresses.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Endpoints&quot;&gt;Endpoints&lt;a class=&quot;anchor-link&quot; href=&quot;#Endpoints&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;An Amazon VPC endpoint enables you to create a private connection between your Amazon VPC and 
    another AWS service without requiring access over the Internet or through a NAT instance, 
    VPN connection, or AWS Direct Connect. 
You can create multiple endpoints for a single service, and you can use different route tables to 
    enforce different access policies from different subnets to the same service.
Amazon VPC endpoints currently support communication with Amazon Simple Storage Service (Amazon S3)&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Peering&quot;&gt;Peering&lt;a class=&quot;anchor-link&quot; href=&quot;#Peering&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;An Amazon VPC peering connection is a networking connection between two Amazon VPCs that enables 
    instances in either Amazon VPC to communicate with each other as if they are within the same network. 
You can create an Amazon VPC peering connection between your own Amazon VPCs or with an Amazon VPC in 
    another AWS account within a single region.
A peering connection is neither a gateway nor an Amazon VPN connection and does not introduce a 
    single point of failure for communication.
Peering connections do not support transitive routing&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Security-Groups&quot;&gt;Security Groups&lt;a class=&quot;anchor-link&quot; href=&quot;#Security-Groups&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;A security group is a virtual stateful firewall that controls inbound and outbound network traffic to 
    AWS resources and Amazon EC2 instances. 
All Amazon EC2 instances must be launched into a security group. 
If a security group is not specified at launch, then the instance will be launched into the default 
    security group for the Amazon VPC. 
The default security group allows communication between all resources within the security group, 
    allows all outbound traffic, and denies all other traffic

You can create up to 500 security groups for each Amazon VPC.
You can add up to 50 inbound and 50 outbound rules to each security group
You can specify allow rules, but not deny rules. 
    This is an important difference between security groups and ACLs.
You can specify separate rules for inbound and outbound traffic.
Security groups are stateful. This means that responses to allowed inbound traffic are allowed 
    to flow outbound regardless of outbound rules and vice versa. 
    This is an important difference between security groups and network ACLs.
Instances associated with the same security group can’t talk to each other unless you 
    add rules allowing it (with the exception being the default security group).&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Network-Access-Control-Lists-(ACLs)&quot;&gt;Network Access Control Lists (ACLs)&lt;a class=&quot;anchor-link&quot; href=&quot;#Network-Access-Control-Lists-(ACLs)&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;A network access control list (ACL) is another layer of security that acts as a stateless firewall 
    on a subnet level. 
A network ACL is a numbered list of rules that AWS evaluates in order, starting with the lowest 
    numbered rule, to determine whether traffic is allowed in or out of any subnet associated with 
    the network ACL. 
Amazon VPCs are created with a modifiable default network ACL associated with every subnet that 
    allows all inbound and outbound traffic. 
When you create a custom network ACL, its initial configuration will deny all inbound and 
    outbound traffic until you create rules that allow otherwise&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Network-Address-Translation-(NAT)-Instances-and-NAT-Gateways&quot;&gt;Network Address Translation (NAT) Instances and NAT Gateways&lt;a class=&quot;anchor-link&quot; href=&quot;#Network-Address-Translation-(NAT)-Instances-and-NAT-Gateways&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;If the instances within private subnets need direct access to the Internet from the Amazon VPC in 
    order to apply security updates, download patches, or update application software. 
    AWS provides NAT instances and NAT gateways to allow instances deployed in private subnets 
    to gain Internet access. 
For common use cases, we recommend that you use a NAT gateway instead of a NAT instance. 
The NAT gateway provides better availability and higher bandwidth, and requires less 
    administrative effort than NAT instances.

NAT Instance
    A network address translation (NAT) instance is an Amazon Linux Amazon Machine Image (AMI) 
        that is designed to accept traffic from instances within a private subnet, translate the source 
        IP address to the public IP address of the NAT instance, and forward the traffic to the IGW.        
    Create a security group for the NAT with outbound rules that specify the needed Internet 
        resources by port, protocol, and IP address.
    Launch an Amazon Linux NAT AMI as an instance in a public subnet and associate it with the 
        NAT security group.
    Disable the Source/Destination Check attribute of the NAT.
    Configure the route table associated with a private subnet to direct Internet-bound 
        traffic to the NAT instance (for example, i-1a2b3c4d).
    Allocate an EIP and associate it with the NAT instance.

NAT Gateway        
    Configure the route table associated with the private subnet to direct Internet-bound traffic 
        to the NAT gateway (for example, nat-1a2b3c4d).
    Allocate an EIP and associate it with the NAT gateway.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Virtual-Private-Gateways-(VPGs),-Customer-Gateways-(CGWs),-and-Virtual-Private-Networks-(VPNs)&quot;&gt;Virtual Private Gateways (VPGs), Customer Gateways (CGWs), and Virtual Private Networks (VPNs)&lt;a class=&quot;anchor-link&quot; href=&quot;#Virtual-Private-Gateways-(VPGs),-Customer-Gateways-(CGWs),-and-Virtual-Private-Networks-(VPNs)&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;A virtual private gateway (VPG) is the virtual private network (VPN) concentrator on the AWS side 
    of the VPN connection between the two networks. 
A customer gateway (CGW) represents a physical device or a software application on the customer’s 
    side of the VPN connection. 
After these two elements of an Amazon VPC have been created, the last step is to create a VPN tunnel. 
The VPN tunnel is established after traffic is generated from the customer’s side of the VPN connection

If you will be using static routing, you must enter the routes for your network that should be 
    communicated to the VPG. Routes will be propagated to the Amazon VPC to allow your resources to 
    route network traffic back to the corporate network through the VGW and across the VPN tunnel.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ankush Agarwal</name></author><summary type="html"></summary></entry><entry><title type="html">Amazon EC2 &amp;amp; EBS</title><link href="https://ankushagarwal87.github.io/continuouslearning/aws/ec2/ebs/2020/06/21/Amazon-Elastic-Compute-Cloud-(EC2)-and-Amazon-Elastic-Block-Store-(EBS).html" rel="alternate" type="text/html" title="Amazon EC2 &amp; EBS" /><published>2020-06-21T00:00:00-05:00</published><updated>2020-06-21T00:00:00-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/aws/ec2/ebs/2020/06/21/Amazon-Elastic-Compute-Cloud-(EC2)-and-Amazon-Elastic-Block-Store-(EBS)</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/aws/ec2/ebs/2020/06/21/Amazon-Elastic-Compute-Cloud-(EC2)-and-Amazon-Elastic-Block-Store-(EBS).html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-06-21-Amazon Elastic Compute Cloud (EC2) and Amazon Elastic Block Store (EBS).ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Amazon-Elastic-Compute-Cloud-(Amazon-EC2)&quot;&gt;Amazon Elastic Compute Cloud (Amazon EC2)&lt;a class=&quot;anchor-link&quot; href=&quot;#Amazon-Elastic-Compute-Cloud-(Amazon-EC2)&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&quot;Compute-Basics&quot;&gt;Compute Basics&lt;a class=&quot;anchor-link&quot; href=&quot;#Compute-Basics&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Instance Types
    Sample Instance Family
        c4  Compute optimized—For workloads requiring significant processing
        r3  Memory optimized—For memory-intensive workloads
        i2  Storage optimized—For workloads requiring high amounts of fast SSD storage
        g2  GPU-based instances—Intended for graphics and general-purpose GPU compute workloads

Enhanced Networking
    For workloads requiring greater network performance, many instance types support enhanced networking. 
        Enhanced networking reduces the impact of virtualization on network performance by enabling a 
        capability called Single Root I/O Virtualization (SR-IOV). 
        This results in more Packets Per Second (PPS), lower latency, and less jitter.

Four sources of AMIs
    Published by AWS
    The AWS Marketplace
    Generated from Existing Instances
    Uploaded Virtual Servers&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Securely-Using-an-Instance&quot;&gt;Securely Using an Instance&lt;a class=&quot;anchor-link&quot; href=&quot;#Securely-Using-an-Instance&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Addressing an Instance
    Public Domain Name System (DNS) Name
    Public IP
    Elastic IP

Initial Access
Virtual Firewall Protection
    Type of Security Group  Capabilities
    EC2-Classic Security Groups     Control outgoing instance traffic
    VPC Security Groups             Control outgoing and incoming instance traffic&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;The-Lifecycle-of-Instances&quot;&gt;The Lifecycle of Instances&lt;a class=&quot;anchor-link&quot; href=&quot;#The-Lifecycle-of-Instances&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Bootstraping 
    One of the parameters when an instance is launched is a string value called UserData. 
        This string is passed to the operating system to be executed as part of the launch process 
        the first time the instance is booted. On Linux instances this can be shell script, 
        and on Windows instances this can be a batch style script or a PowerShell script. 

VM Import/Export 
Instance Metadata
    http://169.254.169.254/latest/meta-data/
Managing Instances
    Tags can help you manage not just your Amazon EC2 instances
Monitoring Instances
    AWS offers a service called Amazon CloudWatch that provides monitoring and alerting
Modifying an Instance
    Instance Type
        Instances can be resized using the AWS Management Console, CLI, or API
    Security Groups 
        If an instance is running in an Amazon VPC, you can change which security groups 
            are associated with an instance while the instance is running. 
            For instances outside of an Amazon VPC (called EC2-Classic), the association of 
            the security groups cannot be changed after launch.

 Termination Protection
     In order to prevent termination via the AWS Management Console, CLI, or API, 
         termination protection can be enabled for an instance. While enabled, calls 
         to terminate the instance will fail until termination protection is disabled.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Options&quot;&gt;Options&lt;a class=&quot;anchor-link&quot; href=&quot;#Options&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Pricing Options
    On-Demand Instances
        The price per hour for each instance type
    Reserved Instances 
        The Reserved Instance pricing option enables customers to make capacity 
            reservations for predictable workloads.
    Spot Instances 
        For workloads that are not time critical and are tolerant of interruption, 
            Spot Instances offer the greatest discount.

Tenancy Options
    Shared Tenancy 
        Shared tenancy is the default tenancy model for all Amazon EC2 instances, regardless 
            of instance type, pricing model, and so forth. Shared tenancy means that a single 
            host machine may house instances from different customers. As AWS does not use 
            overprovisioning and fully isolates instances from other instances on the same host, 
            this is a secure tenancy model.

    Dedicated Instances 
        Dedicated Instances run on hardware that’s dedicated to a single customer. 
            As a customer runs more Dedicated Instances, more underlying hardware may be dedicated 
            to their account. Other instances in the account (those not designated as dedicated) 
            will run on shared tenancy and will be isolated at the hardware level from the 
            Dedicated Instances in the account.

    Dedicated Host 
        An Amazon EC2 Dedicated Host is a physical server with Amazon EC2 instance capacity fully 
            dedicated to a single customer’s use. Dedicated Hosts can help you address licensing 
            requirements and reduce costs by allowing you to use your existing server-bound 
            software licenses. The customer has complete control over which specific host runs 
            an instance at launch. This differs from Dedicated Instances in that a Dedicated 
            Instance can launch on any hardware that has been dedicated to the account.

Placement Groups
    A placement group is a logical grouping of instances within a single Availability Zone 

Instance Stores
    An instance store (sometimes referred to as ephemeral storage) provides temporary block-level 
        storage for your instance. &lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Amazon-Elastic-Block-Store-(Amazon-EBS)&quot;&gt;Amazon Elastic Block Store (Amazon EBS)&lt;a class=&quot;anchor-link&quot; href=&quot;#Amazon-Elastic-Block-Store-(Amazon-EBS)&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Elastic Block Store Basics
    Each Amazon EBS volume is automatically replicated within its Availability Zone to protect 
        you from component failure, offering high availability and durability
    Multiple Amazon EBS volumes can be attached to a single Amazon EC2 instance, 
        although a volume can only be attached to a single instance at a time.

Types of Amazon EBS Volumes
    Magnetic Volumes
        Magnetic volumes have the lowest performance characteristics of all Amazon EBS volume types. 
        As such, they cost the lowest per gigabyte. 
        They are an excellent, cost-effective solution for appropriate workloads.
        A magnetic Amazon EBS volume can range in size from 1 GB to 1 TB and will average 100 IOPS, 
            but has the ability to burst to hundreds of IOPS.
        Cold workloads where data is infrequently accessed.

    General-Purpose SSD
        General-purpose SSD volumes offer cost-effective storage that is ideal for a broad range 
            of workloads. 
        They deliver strong performance at a moderate price point that is suitable for a wide 
            range of workloads.
        A general-purpose SSD volume can range in size from 1 GB to 16 TB and provides a 
            baseline performance of three IOPS per gigabyte provisioned, capping at 10,000 IOPS

    Provisioned IOPS SSD
        Provisioned IOPS SSD volumes are designed to meet the needs of I/O-intensive workloads, 
            particularly database workloads that are sensitive to storage performance and 
            consistency in random access I/O throughput. 
        While they are the most expensive Amazon EBS volume type per gigabyte, they provide the 
            highest performance of any Amazon EBS volume type in a predictable manner.
        A Provisioned IOPS SSD volume can range in size from 4 GB to 16 TB. 
        When you provision a Provisioned IOPS SSD volume, you specify not just the size, 
            but also the desired number of IOPS, up to the lower of the maximum of 30 times 
            the number of GB of the volume, or 20,000 IOPS

    Throughput-Optimized 
        HDD volumes are low-cost HDD volumes designed for frequent-access, throughput-intensive 
            workloads such as big data, data warehouses, and log processing. 
        Volumes can be up to 16 TB with a maximum IOPS of 500 and maximum throughput of 500 MB/s. 
        These volumes are significantly less expensive than general-purpose SSD volumes. 

    Cold HDD 
        Volumes are designed for less frequently accessed workloads, such as colder data requiring 
            fewer scans per day. 
        Volumes can be up to 16 TB with a maximum IOPS of 250 and maximum throughput of 250 MB/s. 
        These volumes are significantly less expensive than Throughput-Optimized HDD volumes.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Protecting-Data&quot;&gt;Protecting Data&lt;a class=&quot;anchor-link&quot; href=&quot;#Protecting-Data&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Backup/Recovery (Snapshots)
    Snapshots are incremental backups, which means that only the blocks on the device that have
        changed since your most recent snapshot are saved.

Taking Snapshots
    Through the AWS Management Console
    Through the CLI
    Through the API
    By setting up a schedule of regular snapshots

     Snapshots are constrained to the region in which they are created, meaning you can use them to 
         create new volumes only in the same region. 
     If you need to restore a snapshot in a different region, you can copy a snapshot to another region.

Creating a Volume from a Snapshot
Recovering Volumes
Encryption Options&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ankush Agarwal</name></author><summary type="html"></summary></entry><entry><title type="html">Spring Security</title><link href="https://ankushagarwal87.github.io/continuouslearning/spring%20security/2020/06/14/Spring-Security.html" rel="alternate" type="text/html" title="Spring Security" /><published>2020-06-14T00:00:00-05:00</published><updated>2020-06-14T00:00:00-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/spring%20security/2020/06/14/Spring-Security</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/spring%20security/2020/06/14/Spring-Security.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-06-14-Spring Security.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Intro&quot;&gt;Intro&lt;a class=&quot;anchor-link&quot; href=&quot;#Intro&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Application Security Framework
Handles common vulnerabilities
Username/password authentication
SSO/Okta/LDAP
App level Authorization
Intra App Authorization like OAuth
Microservice Security (Using Tokens, JWT)&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Five-Core-Concept-in-Spring-Security&quot;&gt;Five Core Concept in Spring Security&lt;a class=&quot;anchor-link&quot; href=&quot;#Five-Core-Concept-in-Spring-Security&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Authentication
    Knowledge Based Authentication
        Password
        Pin
        Answer to secret question
    Possession Bases Authentication
        Phone/Test Message
        Id card
        Access Token Device
    Multi Factor Authentication

Authorization    
Principal
    Currently logged in user        
Granted Authority
Roles
    Group of authority&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Adding-Spring-Security&quot;&gt;Adding Spring Security&lt;a class=&quot;anchor-link&quot; href=&quot;#Adding-Spring-Security&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;spring-boot-starter-security 

spring.security.user.name=X
spring.security.user.password=Y&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Configure-Authentication&quot;&gt;Configure Authentication&lt;a class=&quot;anchor-link&quot; href=&quot;#Configure-Authentication&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;AuthenticationManager
    AuthenticationManagerBuilder
        Get Hold of AuthenticationManagerBuilder
        Set the configuration on it

 Create a class
     @EnableWebSecurity
     Extend WebSecurityConfigurerAdapter
     Override configure() method

 For Password Encoding
     @Bean of type Password&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Spring-Boot-+-Spring-Security-with-JPA-authentication&quot;&gt;Spring Boot + Spring Security with JPA authentication&lt;a class=&quot;anchor-link&quot; href=&quot;#Spring-Boot-+-Spring-Security-with-JPA-authentication&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;spring-security-jpa
mysql&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ankush Agarwal</name></author><summary type="html"></summary></entry><entry><title type="html">Spring Boot Microservices</title><link href="https://ankushagarwal87.github.io/continuouslearning/spring%20boot/microservices/2020/06/10/Spring-Boot-Microservices.html" rel="alternate" type="text/html" title="Spring Boot Microservices" /><published>2020-06-10T00:00:00-05:00</published><updated>2020-06-10T00:00:00-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/spring%20boot/microservices/2020/06/10/Spring-Boot-Microservices</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/spring%20boot/microservices/2020/06/10/Spring-Boot-Microservices.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-06-10-Spring Boot Microservices.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Microservices-vs-Service-Oriented-Architecture&quot;&gt;Microservices vs Service Oriented Architecture&lt;a class=&quot;anchor-link&quot; href=&quot;#Microservices-vs-Service-Oriented-Architecture&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Patterns
    Make microservices work well together
Technologies
    Libraries &amp;amp; framework to solve common problems
Service Oriented Architecture
    Intention is to create reusable utility 
    Consumer are not known in start
Microservices
    Intention is to fulfil application needs
    Not designed for reuse

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Spring-Boot-Dependencies&quot;&gt;Spring Boot Dependencies&lt;a class=&quot;anchor-link&quot; href=&quot;#Spring-Boot-Dependencies&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;spring-boot-starter-web  --simple REST API

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Annotation&quot;&gt;Annotation&lt;a class=&quot;anchor-link&quot; href=&quot;#Annotation&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;@SpringBootApplication - Main class
@Bean - creating a singleton bean
@Autowired - Access singleton bean
@RestController - On class which is going to address request
@RequestMapping(&quot;/catalog&quot;)  - resource name on class
@RequestMapping(&quot;/{userId}&quot;) - resource instance on method
@PathVariable(&quot;userId&quot;) - resource instance in method parameter

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Project-lombok&quot;&gt;Project lombok&lt;a class=&quot;anchor-link&quot; href=&quot;#Project-lombok&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;org.projectlombok  -dependency
Add plugin in IDE 
@Data - Create getter/setter
@AllArgsConstructor - Argument costructor
@NoArgsConstructor - Default constructor
    Needed while unmarshalling response from other API 
    By deault first default object gets created then attribute maps in Rest Template

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Calling-API&quot;&gt;Calling API&lt;a class=&quot;anchor-link&quot; href=&quot;#Calling-API&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Sync - restTemplate.getForObject(url,ClassName) - return response &amp;amp; map it corresponding object
Asycn - webClientBuilder.build()
                .get()    -- type of operation
                .uri(url) 
                .retrieve()
                .bodyToMono(ClassName.class)   -- Promise that object will be return 
                .block()   -- Thread will be block till response is received

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Returing-response-from-API&quot;&gt;Returing response from API&lt;a class=&quot;anchor-link&quot; href=&quot;#Returing-response-from-API&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Why you should avoid returning lists in APIs
    If any changes done in API then consumer can also be impacted
    ParameterizedTypeReference need to be used in consumer for response

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Service-Discovery&quot;&gt;Service Discovery&lt;a class=&quot;anchor-link&quot; href=&quot;#Service-Discovery&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Client Side - Spring Cloud uses this
    Client check for service url from Discovery server
Server Side
    Discovery server does the operation asked 

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Eureka-Discovery-Server&quot;&gt;Eureka Discovery Server&lt;a class=&quot;anchor-link&quot; href=&quot;#Eureka-Discovery-Server&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Spring Boot application
&amp;lt;spring-cloud.version&amp;gt;Hoxton.SR5&amp;lt;/spring-cloud.version&amp;gt; - properties
&amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;
&amp;lt;artifactId&amp;gt;spring-cloud-starter-netflix-eureka-server&amp;lt;/artifactId&amp;gt;  --dependency
@EnableEurekaServer - on server
@EnableEurekaClient - on client
@LoadBalanced - RestTemplate - Client discovery &amp;amp; load balancing - Give service name as url&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Fault-Tolerance-&amp;amp;-Resilience&quot;&gt;Fault Tolerance &amp;amp; Resilience&lt;a class=&quot;anchor-link&quot; href=&quot;#Fault-Tolerance-&amp;amp;-Resilience&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Fault
    Service is down
        Multiple Instance
    Service is slow
        Impact on another services
        Resolution 
            Timeout
            Circuit Breaker - Deactivate the slow service
                Check last n request
                Find how many out n failed
                Timeout duration
                How long to wait - sleep 
                Hystrix (open source by Netflix) implements Circuit Breaker
                    spring-cloud-starter-netflix-hystrix
                    @EnableCircuitBreaker on application class
                    @HystrixCommand to method that needs Circuit Breaker
                    Configure Hystrix Behaviour&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Configuration&quot;&gt;Configuration&lt;a class=&quot;anchor-link&quot; href=&quot;#Configuration&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;@Value(${id}) - return parameter value
@Value(${my.list.values}) - return parameter list values
@Value(#{${my.map.values}}) - return parameter map values
@ConfigurationProperties(&quot;db&quot;) - On bean class for mapping member variable with propery file values

spring-boot-starter-actuator  -- dependency to expose configuration properties &lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;YAML-Yet-Another-Markup-Language&quot;&gt;YAML Yet Another Markup Language&lt;a class=&quot;anchor-link&quot; href=&quot;#YAML-Yet-Another-Markup-Language&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;property: value --format
db:
    connection: 
    user:
    password:&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Profile&quot;&gt;Profile&lt;a class=&quot;anchor-link&quot; href=&quot;#Profile&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Set of configuration value
default profile is always used 
application-&amp;lt;profileName&amp;gt;.extension
spring.profile.active=profileName
set environment specific values in custom profile&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Config-as-a-Service&quot;&gt;Config as a Service&lt;a class=&quot;anchor-link&quot; href=&quot;#Config-as-a-Service&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Apache Zookeeper
ETCD Distributed key value store
Hashicorp Consul
Spring Cloud Configuration Server    
    &amp;lt;spring-cloud-config-server&amp;gt;  -- Add dependency
    @EnableConfigServer -- main class
    spring.cloud.config.server.git.uri=X  in application.properties

    &amp;lt;spring-cloud-config-client&amp;gt;  -- on client applications
    spring.cloud.config.uri   -- application.properties

    Real time update of service
        use actuator - it gives endpoint to refresh changes in configuration properties
        @RefreshScope - Bean for which refresh need to be done&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ankush Agarwal</name></author><summary type="html"></summary></entry><entry><title type="html">Amazon S3</title><link href="https://ankushagarwal87.github.io/continuouslearning/aws/s3/glacier/2020/06/07/Amazon-Simple-Storage-Service-and-Amazon-Glacier-Storage.html" rel="alternate" type="text/html" title="Amazon S3" /><published>2020-06-07T00:00:00-05:00</published><updated>2020-06-07T00:00:00-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/aws/s3/glacier/2020/06/07/Amazon-Simple-Storage-Service-and-Amazon-Glacier-Storage</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/aws/s3/glacier/2020/06/07/Amazon-Simple-Storage-Service-and-Amazon-Glacier-Storage.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-06-07-Amazon Simple Storage Service and Amazon Glacier Storage.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Introduction&quot;&gt;Introduction&lt;a class=&quot;anchor-link&quot; href=&quot;#Introduction&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Amazon S3 serves as the durable target storage for Amazon Kinesis and Amazon Elastic MapReduce (Amazon EMR),
    it is used as the storage for Amazon Elastic Block Store (Amazon EBS) and Amazon Relational Database
    Service (Amazon RDS) snapshots, and it is used as a data staging or loading storage mechanism for 
    Amazon Redshift and Amazon DynamoDB.

Amazon S3 objects are automatically replicated on multiple devices in multiple facilities within a region.
You can create and use multiple buckets; you can have up to 100 per account by default.
Objects can range in size from 0 bytes upto 5TB,and a single bucket can store an unlimited number of objects

The native interface for Amazon S3 is a REST (Representational State Transfer) API. 
    With the REST interface, you use standard HTTP or HTTPS requests to create and delete buckets, 
    list keys, and read and write objects.

Amazon S3 achieves high durability by automatically storing data redundantly on multiple devices in
    multiple facilities within a region. It is designed to sustain the concurrent loss of data in two
    facilities without loss of user data. &lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Access-Control&quot;&gt;Access Control&lt;a class=&quot;anchor-link&quot; href=&quot;#Access-Control&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Amazon S3 is secure by default; when you create a bucket or object in Amazon S3, only you have access. 
    To allow you to give controlled access to others, Amazon S3 provides both coarse-grained access 
    controls (Amazon S3 Access Control Lists [ACLs]), and fine-grained access controls (Amazon S3 
    bucket policies, AWS Identity and Access Management [IAM] policies, and query-string authentication).

Using an Amazon S3 bucket policy, you can specify who can access the bucket, from where (by Classless 
    Inter-Domain Routing [CIDR] block or IP address), and during what time of day.

Finally, IAM policies may be associated directly with IAM principals that grant access to an Amazon 
    S3 bucket, just as it can grant access to any AWS service and resource. 

Lifecycle configurations are attached to the bucket and can apply to all objects in the bucket or 
    only to objects specified by a prefix.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Encryption&quot;&gt;Encryption&lt;a class=&quot;anchor-link&quot; href=&quot;#Encryption&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;To encrypt your Amazon S3 data in flight, you can use the Amazon S3 Secure Sockets Layer (SSL) API 
    endpoints. This ensures that all data sent to and from Amazon S3 is encrypted while in transit 
    using the HTTPS protocol.

To encrypt your Amazon S3 data at rest, you can use several variations of Server-Side Encryption (SSE). 
    Amazon S3 encrypts your data at the object level as it writes it to disks in its data centers and 
    decrypts it for you when you access it. All SSE performed by Amazon S3 and AWS Key Management Service
    (Amazon KMS) uses the 256-bit Advanced Encryption Standard (AES). You can also encrypt your Amazon 
    S3 data at rest using Client-Side Encryption, encrypting your data on the client before sending it 
    to Amazon S3.

SSE-S3 (AWS-Managed Keys)
    This is a fully integrated “check-box-style” encryption solution where AWS handles the key management 
    and key protection for Amazon S3. Every object is encrypted with a unique key. The actual object key 
    itself is then further encrypted by a separate master key. A new master key is issued at least monthly, 
    with AWS rotating the keys. Encrypted data, encryption keys, and master keys are all stored separately
    on secure hosts, further enhancing protection.

SSE-KMS (AWS KMS Keys)
    This is a fully integrated solution where Amazon handles your key management and protection for 
    Amazon S3, but where you manage the keys. SSE-KMS offers several additional benefits compared to SSE-S3.
    Using SSE-KMS, there are separate permissions for using the master key, which provide protection against
    unauthorized access to your objects stored in Amazon S3 and an additional layer of control.

SSE-C (Customer-Provided Keys)
    This is used when you want to maintain your own encryption keys but don’t want to manage or implement 
    your own client-side encryption library. With SSE-C, AWS will do the encryption/decryption of your 
    objects while you maintain full control of the keys used to encrypt/decrypt the objects in Amazon S3.

Client-Side Encryption
    Client-side encryption refers to encrypting data on the client side of your application before sending 
    it to Amazon S3. &lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Pointers&quot;&gt;Pointers&lt;a class=&quot;anchor-link&quot; href=&quot;#Pointers&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Pre-Signed URLs
    All Amazon S3 objects by default are private, meaning that only the owner has access. However, the 
    object owner can optionally share objects with others by creating a pre-signed URL, using their own
    security credentials to grant time-limited permission to download the objects. When you create a 
    pre-signed URL for your object, you must provide your security credentials and specify a bucket name, 
    an object key, the HTTP method (GET to download the object), and an expiration date and time. The 
    pre-signed URLs are valid only for the specified duration. This is particularly useful to protect 
    against “content scraping” of web content such as media files stored in Amazon S3.

Multipart Upload
    To better support uploading or copying of large objects, Amazon S3 provides the Multipart Upload API. 
    This allows you to upload large objects as a set of parts, which generally gives better network 
    utilization (through parallel transfers), the ability to pause and resume, and the ability to 
    upload objects where the size is initially unknown.

Range GETs
    It is possible to download (GET) only a portion of an object in both Amazon S3 and Amazon Glacier by 
    using something called a Range GET. Using the Range HTTP header in the GET request or equivalent 
    parameters in one of the SDK wrapper libraries, you specify a range of bytes of the object. This can 
    be useful in dealing with large objects when you have poor connectivity or to download only a known 
    portion of a large Amazon Glacier backup.

Cross-Region Replication
    Cross-region replication is a feature of Amazon S3 that allows you to asynchronously replicate all 
    new objects in the source bucket in one AWS region to a target bucket in another region. Any metadata 
    and ACLs associated with the object are also part of the replication. After you set up cross-region
    replication on your source bucket, any changes to the data, metadata, or ACLs on an object trigger a 
    new replication to the destination bucket. To enable cross-region replication, versioning must be 
    turned on for both source and destination buckets, and you must use an IAM policy to give Amazon 
    S3 permission to replicate objects on your behalf.

Logging
    In order to track requests to your Amazon S3 bucket, you can enable Amazon S3 server access logs. 
    Logging is off by default, but it can easily be enabled.

Event Notifications
    Amazon S3 event notifications can be sent in response to actions taken on objects uploaded or stored 
    in Amazon S3. Event notifications enable you to run workflows, send alerts, or perform other actions 
    in response to changes in your objects stored in Amazon S3. You can use Amazon S3 event notifications 
    to set up triggers to perform actions, such as transcoding media files when they are uploaded,processing
    data files when they become available, and synchronizing Amazon S3 objects with other data stores.

Another common pattern is to use Amazon S3 as bulk “blob” storage for data, while keeping an index to 
    that data in another service, such as Amazon DynamoDB or Amazon RDS. This allows quick searches and 
    complex queries on key names without listing keys continually.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Amazon-Glacier&quot;&gt;Amazon Glacier&lt;a class=&quot;anchor-link&quot; href=&quot;#Amazon-Glacier&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Archives
    In Amazon Glacier, data is stored in archives. An archive can contain up to 40TB of data, and you 
    can have an unlimited number of archives. 

Vaults
    Vaults are containers for archives. Each AWS account can have up to 1,000 vaults. You can control 
    access to your vaults and the actions allowed using IAM policies or vault access policies.

Vaults Locks
    You can easily deploy and enforce compliance controls for individual Amazon Glacier vaults with a 
    vault lock policy. You can specify controls such as Write Once Read Many (WORM) in a vault lock 
    policy and lock the policy from future edits. Once locked, the policy can no longer be changed.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ankush Agarwal</name></author><summary type="html"></summary></entry><entry><title type="html">Title</title><link href="https://ankushagarwal87.github.io/continuouslearning/2020/06/06/Security-course-from-Safari.html" rel="alternate" type="text/html" title="Title" /><published>2020-06-06T00:00:00-05:00</published><updated>2020-06-06T00:00:00-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/2020/06/06/Security-course-from-Safari</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/2020/06/06/Security-course-from-Safari.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-06-06-Security course from Safari.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Introduction&quot;&gt;Introduction&lt;a class=&quot;anchor-link&quot; href=&quot;#Introduction&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Attacker in the News
    205 days median between Date of Evidence &amp;amp; Date of Discovery
What We Tell Others
    When we educate people those also help attacker how to trick people
        url text &amp;amp; hyperlink can be different
        different browser can have different parsing way
Trusted vs Trustworthy
    We trust browser
    browser trust Certificate authority
    CA can also be compromise
Security Features
    One of the common misconceptions developers have is that engaging security features 
        means you have a secure system.
    Encryption
    Authentication
    Authorization
    Network &amp;amp; Controls
    Why you might be a target
    Quality of the software
    Error Handling
    Logging Strategy
Principle of Least Privilege
    Avoid Fraud
    Avoid Abuse
    Avoid Privilege Escalation Attack
Attacking Infrastructure
Convincing Developers
    Developer Support
        Requirements
        Budget
        Training
        Executive Backing
Beyond Perimeter Defense
    Behind the Firewall
        Do you rely on Physical security
        Do you understand the risk in your system
        Do you allow BYOD
        Do you allow VPN
        Do you allow employees to install software
        Are their browser up to date
        Are they trained to detect phishing/social engineering attack
        Do you focus on code quality&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Social-Engineering&quot;&gt;Social Engineering&lt;a class=&quot;anchor-link&quot; href=&quot;#Social-Engineering&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Word Stew
    Secrecy
    Privacy
    Confidentiality
    Integrity
    Authenticity

Economics of Security
    Are Security Products,Tools,Efforts Worth it?
        The value of the alarm system
        How do you test it
        Attacker doesn't participate in the test
        Motivation of the attacker(profits)
        Motivation of the victim(costs)

Motivation
    System Fails when
        People protect the wrong things
        Protecting the right things in wrong way

Security Protocols&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html"></summary></entry></feed>
<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="https://ankushagarwal87.github.io/continuouslearning/feed.xml" rel="self" type="application/atom+xml" /><link href="https://ankushagarwal87.github.io/continuouslearning/" rel="alternate" type="text/html" /><updated>2020-07-12T07:04:11-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/feed.xml</id><title type="html">continuouslearning</title><subtitle>An easy to use blogging platform with support for Jupyter Notebooks.</subtitle><entry><title type="html">HashiCorp</title><link href="https://ankushagarwal87.github.io/continuouslearning/hashicorp/2020/07/12/HashiCorp.html" rel="alternate" type="text/html" title="HashiCorp" /><published>2020-07-12T00:00:00-05:00</published><updated>2020-07-12T00:00:00-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/hashicorp/2020/07/12/HashiCorp</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/hashicorp/2020/07/12/HashiCorp.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-07-12-HashiCorp.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;&lt;img src=&quot;/continuouslearning/images/copied_from_nb/my_icons/image.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Steps&quot;&gt;Steps&lt;a class=&quot;anchor-link&quot; href=&quot;#Steps&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Options
    CLI Command
    API call
    Web UI

Step 1: Configure Transit Secrets Engine
Step 2: Encrypt Secrets
Step 3: Decrypt ciphertext
Step 4: Rotate the Encryption Key
Step 5: Update Key Configuration
Step 6: Generate Data Key
    Can call API to get encypted key &amp;amp; decrypt the file (no need of sending entire file)

Vault HTTP API imposes a maximum request size of 32MB to prevent a denial of service attack. 
This can be tuned per listener block in the Vault server configuration.


Question
    Why don't have own method of encryption/decryption rather then on service
    How hashicorp validate user (who is asking for key or encrypt/decrypt request)
        https://www.youtube.com/watch?v=lZnrrGxrInk&amp;amp;feature=emb_rel_end
    Do we really need to encrypt data when there is option of delete post processing
    If two files comes at the same time - How ABC will work
    Is single instance work on API/File Integration
    Can we not have FTP connector in the end to send file
        Output Port need to be open 
    Email Connector


Reference
    https://learn.hashicorp.com/vault/encryption-as-a-service/eaas-transit
    https://www.vaultproject.io/api-docs/secret/transit
    https://www.hashicorp.com/blog/how-vault-encrypts-application-data-during-transit-and-at-rest/
    https://www.hashicorp.com/resources/encryption-as-a-service-with-vault-s-transit-secret-engine/


Options
    We can have lambda function trigger when file comes to S3 
    Lambda function will dcrypt &amp;amp; again save to S3 
    Trigger ABC on S3


AWS Integration
    https://www.vaultproject.io/docs/auth/aws
    https://www.vaultproject.io/api/auth/aws
    IAM auth method
        The AWS STS API includes a method, sts:GetCallerIdentity, which allows you to validate the identity 
        of a client. The client signs a GetCallerIdentity query using the AWS Signature v4 algorithm 
        and sends it to the Vault server. The credentials used to sign the GetCallerIdentity request 
        can come from the EC2 instance metadata service for an EC2 instance, or from the AWS environment
        variables in an AWS Lambda function execution, which obviates the need for an operator to manually
        provision some sort of identity material first. However, the credentials can, in principle, come 
        from anywhere, not just from the locations AWS has provided for you.

        AWS Security Token Service (AWS STS) is a web service that enables you to request temporary, 
        limited-privilege credentials for AWS Identity and Access Management (IAM) users

        GetCallerIdentity
            Returns details about the IAM user or role whose credentials are used to call the operation. 
            https://docs.aws.amazon.com/STS/latest/APIReference/API_GetCallerIdentity.html

    EC2 auth method
        Amazon EC2 instances have access to metadata which describes the instance. 
        The Vault EC2 auth method leverages the components of this metadata to authenticate and 
            distribute an initial Vault token to an EC2 instance.

ABC
    An enterprise-level FTP Client is included in the Core edition, which provides an intuitive
    browser-based administrator, extensive security features, user management, file triggers, and 
    detailed audit trails.

Lambda
    https://docs.aws.amazon.com/lambda/latest/dg/with-s3.html&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ankush Agarwal</name></author><summary type="html"></summary></entry><entry><title type="html">12 Factor App</title><link href="https://ankushagarwal87.github.io/continuouslearning/12%20factor%20app/design/2020/05/31/12-Factor-App.html" rel="alternate" type="text/html" title="12 Factor App" /><published>2020-05-31T00:00:00-05:00</published><updated>2020-05-31T00:00:00-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/12%20factor%20app/design/2020/05/31/12-Factor-App</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/12%20factor%20app/design/2020/05/31/12-Factor-App.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-05-31-12 Factor App.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;I.-Codebase&quot;&gt;I. Codebase&lt;a class=&quot;anchor-link&quot; href=&quot;#I.-Codebase&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;One codebase tracked in revision control, many deploys
Multiple apps sharing the same code is a violation of twelve-factor. 
The solution here is to factor shared code into libraries which can be included through 
    the dependency manager.
A deploy is a running instance of the app. This is typically a production site, and one or 
    more staging sites.

Observations:
    Done for all apps&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;II.-Dependencies&quot;&gt;II. Dependencies&lt;a class=&quot;anchor-link&quot; href=&quot;#II.-Dependencies&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Explicitly declare and isolate dependencies
The full and explicit dependency specification is applied uniformly to both production and development.

Questions:
Check if any app uses any server dependency for execution
    How easy/difficult to migrate it to another server
    Can we just run build command to do local setup 
    Tivoli agent on server ?
    Data Source configuration ?

Observations:
    Maven take care of dependency in Java
    Virtual env in Python            &lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;III.-Config&quot;&gt;III. Config&lt;a class=&quot;anchor-link&quot; href=&quot;#III.-Config&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Store config in the environment
Strict separation of config from code. 
Config varies substantially across deploys, code does not.    
The twelve-factor app stores config in environment variables (often shortened to env vars or env). 
Env vars are easy to change between deploys without changing any code; unlike config files, 
    there is little chance of them being checked into the code repo accidentally; 
    and unlike custom config files, or other config mechanisms such as Java System Properties, 
    they are a language- and OS-agnostic standard.    
Based on environment application itself point to correct setting

Questions:
    How to manage environment properties, we generally don't track them in codebase 
    Should we keep all properties in codebase with suffix ?

Observations:
    Generally done for environment related properties &lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;IV.-Backing-services&quot;&gt;IV. Backing services&lt;a class=&quot;anchor-link&quot; href=&quot;#IV.-Backing-services&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Treat backing services as attached resources
A backing service is any service the app consumes over the network as part of its normal operation. 
    Examples include datastores (such as MySQL or CouchDB), messaging/queueing systems 
    (such as RabbitMQ or Beanstalkd),SMTP services for outbound email (such as Postfix), 
    and caching systems (such as Memcached).
To the app, both are attached resources, accessed via a URL or other locator/credentials 
    stored in the config.
A deploy of the twelve-factor app should be able to swap out a local MySQL database with 
    one managed by a third party (such as Amazon RDS) without any changes to the app’s code.

Observations:
    Generally done for all database, queue&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;V.-Build,-release,-run&quot;&gt;V. Build, release, run&lt;a class=&quot;anchor-link&quot; href=&quot;#V.-Build,-release,-run&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Strictly separate build and run stages    
The twelve-factor app uses strict separation between the build, release, and run stages. 
    For example, it is impossible to make changes to the code at runtime, 
    since there is no way to propagate those changes back to the build stage.

Observations:
    Generally done for all apps&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;VI.-Processes&quot;&gt;VI. Processes&lt;a class=&quot;anchor-link&quot; href=&quot;#VI.-Processes&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Execute the app as one or more stateless processes
Twelve-factor processes are stateless and share-nothing. 
Any data that needs to persist must be stored in a stateful backing service, typically a database.
The twelve-factor app never assumes that anything cached in memory or on disk 
    will be available on a future request or job        
Some web systems rely on “sticky sessions” – that is, caching user session data in memory
    of the app’s process and expecting future requests from the same visitor to be routed 
    to the same process. 
Sticky sessions are a violation of twelve-factor and should never be used or relied upon. 
Session state data is a good candidate for a datastore that offers time-expiration, 
    such as Memcached or Redis.

Observation:
       Generally done for all apps&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;VII.-Port-binding&quot;&gt;VII. Port binding&lt;a class=&quot;anchor-link&quot; href=&quot;#VII.-Port-binding&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Export services via port binding
The twelve-factor app is completely self-contained and does not rely on runtime injection 
    of a webserver into the execution environment to create a web-facing service
The web app exports HTTP as a service by binding to a port, and listening to requests
    coming in on that port.        
Spring Boot, apart from many other benefits, provides us with a default embedded application server. 
Hence, the JAR we generated earlier using Maven is fully capable of executing in any 
    environment just by having a compatible Java runtime

Observations:
    Work fine for Sprint Boot application - don't need any runtime container&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;VIII.-Concurrency&quot;&gt;VIII. Concurrency&lt;a class=&quot;anchor-link&quot; href=&quot;#VIII.-Concurrency&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Scale out via the process model
Application must also be able to span multiple processes running on multiple physical machines.
The share-nothing, horizontally partitionable nature of twelve-factor app processes means that 
    adding more concurrency is a simple and reliable operation.

Observation:
    Genrally done for all handler applications

Question:
    How to achieve it in Batch mode&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;IX.-Disposability&quot;&gt;IX. Disposability&lt;a class=&quot;anchor-link&quot; href=&quot;#IX.-Disposability&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Maximize robustness with fast startup and graceful shutdown
The twelve-factor app’s processes are disposable, meaning they can be started or stopped 
    at a moment’s notice. 
This facilitates fast elastic scaling, rapid deployment of code or config changes, 
    and robustness of production deploys.
The application should expose idempotent services. 
This gives the flexibility to stop, move, or spin new services at any time without any other considerations.

Observations:
    Generally done for all applications

Question:
    If any handler is processing request from queue will it stay in queue or thrown away.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;X.-Dev/prod-parity&quot;&gt;X. Dev/prod parity&lt;a class=&quot;anchor-link&quot; href=&quot;#X.-Dev/prod-parity&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Keep development, staging, and production as similar as possible

The time gap: A developer may work on code that takes days, weeks, or even months to go into production.
The personnel gap: Developers write code, ops engineers deploy it.
The tools gap: Developers may be using a stack like Nginx, SQLite, and OS X, while the production deploy 
    uses Apache, MySQL, and Linux

The twelve-factor app is designed for continuous deployment by keeping the gap between 
    development and production small. Looking at the three gaps described above:        

Make the time gap small: a developer may write code and have it deployed hours or even just minutes later.
Make the personnel gap small: developers who wrote code are closely involved in deploying it and watching 
    its behavior in production.
Make the tools gap small: keep development and production as similar as possible.

All deploys of the app (developer environments, staging, production) should be using the same type and 
    version of each of the backing services.

Observation:
    Time gap can be improved&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;XI.-Logs&quot;&gt;XI. Logs&lt;a class=&quot;anchor-link&quot; href=&quot;#XI.-Logs&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Treat logs as event streams
A twelve-factor app never concerns itself with routing or storage of its output stream. 
It should not attempt to write to or manage logfiles. 
Instead, each running process writes its event stream, unbuffered, to stdout. 
During local development, the developer will view this stream in the foreground of their 
    terminal to observe the app’s behavior.
The capture, storage, curation, and archival of such stream should be handled by the execution environment.
To begin with, we can use SLF4J to handle logging abstractly within our application. 
Moreover, we can use a tool like Fluentd to collect the stream of logs from applications and backing services.
This we can feed into Elasticsearch for storage and indexing. 
Finally, we can generate meaningful dashboards for visualization in Kibana.

Observations:
    Generally application log data

Question:
    What are the alternative to achieve this.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;XII.-Admin-processes&quot;&gt;XII. Admin processes&lt;a class=&quot;anchor-link&quot; href=&quot;#XII.-Admin-processes&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Run admin/management tasks as one-off processes
The twelve-factor methodology strongly suggests keeping such admin scripts together with the 
    application codebase. 
In doing so, it should follow the same principles as we apply to the main application codebase. 
It's also advisable to use a built-in REPL tool of the execution environment to run such scripts 
    on production servers.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ankush Agarwal</name></author><summary type="html"></summary></entry><entry><title type="html">AWS Notes</title><link href="https://ankushagarwal87.github.io/continuouslearning/aws/2020/05/19/AWS-Certified-Solutions-Architect-Associate.html" rel="alternate" type="text/html" title="AWS Notes" /><published>2020-05-19T00:00:00-05:00</published><updated>2020-05-19T00:00:00-05:00</updated><id>https://ankushagarwal87.github.io/continuouslearning/aws/2020/05/19/AWS-Certified-Solutions-Architect-Associate-</id><content type="html" xml:base="https://ankushagarwal87.github.io/continuouslearning/aws/2020/05/19/AWS-Certified-Solutions-Architect-Associate.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-05-19-AWS-Certified-Solutions-Architect-Associate .ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Overview&quot;&gt;Overview&lt;a class=&quot;anchor-link&quot; href=&quot;#Overview&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;![](my_icons/Overview.png)&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;AWS Global Infrastructure
    A region is a geographical area
    Each region consists of 2+ Availability Zones
    AZ is a data center facility 
    Edge location are endpoints for AWS which are used for caching content

Important Services      
    Compute
    Storage
    Database
    Network &amp;amp; Content Delivery
    Security, Identity &amp;amp; Compliance&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;IAM&quot;&gt;IAM&lt;a class=&quot;anchor-link&quot; href=&quot;#IAM&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Allow you to manage users &amp;amp; their level of access to the AWS Console.
Features
    Centralised Control of your AWS account
    Shared access to your AWS account
    Granular Permission
    Identity Federation (Including active directory, Facebook, Linkedin)
    Multifactor Authentication
    Temporary access for users/devices
    Password rotation policy
    Integrates with many different AWS services
    Support PCI DCS Compliance
 Terminology 
    Users
    Groups
    Policies
    Roles
 IAM is universal
 New user have no permission by default
 Type of Access
     Console
     Programmatic

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Billing-Alarm&quot;&gt;Billing Alarm&lt;a class=&quot;anchor-link&quot; href=&quot;#Billing-Alarm&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Management &amp;amp; Governance
    CloudWatch
        Billing Alarm
            SNS Topic&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;S3&quot;&gt;S3&lt;a class=&quot;anchor-link&quot; href=&quot;#S3&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Secure, durable, highly scalable object storage.
Files - 0 to 5 TB
Unlimited storage
Universal Namespace - names must be unique globally
HTTP 200 - Successful response
Can enable MFA for delete

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Object-contains-following&quot;&gt;Object contains following&lt;a class=&quot;anchor-link&quot; href=&quot;#Object-contains-following&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Key - Name of the object
Value - Data Sequence of bytes
Version ID
Metadata
Subresources
    Access Control List
    Torrent

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Data-Consistency-Model&quot;&gt;Data Consistency Model&lt;a class=&quot;anchor-link&quot; href=&quot;#Data-Consistency-Model&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Read after Write Consistency for PUTS of new object
Eventual Consistency for overwrite PUTS &amp;amp; DELETE
    Can take some time for changes to propogate

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Gurantees&quot;&gt;Gurantees&lt;a class=&quot;anchor-link&quot; href=&quot;#Gurantees&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Built for 99.99% Availablity for S3 platform
Amazon Gurantees 99.9% Availability
Amazon Gurantees 99.999999999% Durability

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Storage-Class&quot;&gt;Storage Class&lt;a class=&quot;anchor-link&quot; href=&quot;#Storage-Class&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;S3 Standard
    99.99% Availability
    99.999999999% Durability
    Stored redundantly across multiple devices in multiple facilities
    Sustain loss of 2 facilities concurrently

S3 IA Infrequent Accessed
    For data that is accessed less frequently but require rapid access when needed
    Lower fee than Standard but charged a retrieval fee

S3 One Zone IA 
    Lower cost option for S3 IA
    Do not require mutiple availability zone data resilience

S3 Inteliigent Tiering
    Designed to optimise costs by automatically moving data to the most 
        cost effective access tier without performance impact or operational overhead

S3 Glacier
    Secure, Durable &amp;amp; low cost storage class for data archiving

S3 Glacier Deep Archive
    Lowest Cost storage option
    Retrieval time of 12 hour is acceptable

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;![](my_icons/S3.png)&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;Charges&quot;&gt;Charges&lt;a class=&quot;anchor-link&quot; href=&quot;#Charges&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Storage
Requests
Storage Management - Pricing
Data Transfer
Transfer Acceleration
Cross region replication pricing

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Pricing-Tiers&quot;&gt;Pricing Tiers&lt;a class=&quot;anchor-link&quot; href=&quot;#Pricing-Tiers&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Standard - 0.023 - 0.021 Per GB
Intelligent - 0.023 - 0.0125 Per GB
Standard IA - 0.023 - 0.0125 Per GB
One Zone IA - 0.01 Per GB
Glacier - 0.004 Per GB
Glacier Deep Archive - 0.00099 Per GB

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Security-&amp;amp;-Encryption&quot;&gt;Security &amp;amp; Encryption&lt;a class=&quot;anchor-link&quot; href=&quot;#Security-&amp;amp;-Encryption&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;All newly created bucket by default are Private
Setp access control to bucket using
    Bucket Policies
    Access Control Lists
        At individual object level

Encryption in transit - SSL/TLS
Encryption at rest Server Side 
    S3 Managed Key - Serverside Encryption S3 - SSE-S3
    AWS Key Management Service, Managed Keys - SSE-KMS
    Server Side Encryption with Customer provided keys - SSE-C
Client side Encryption

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Version-Control&quot;&gt;Version Control&lt;a class=&quot;anchor-link&quot; href=&quot;#Version-Control&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Stores all version of an object
Once enabled, Versioning cannot be disabled, only suspended.
Integrates with Lifecycle rules
MFA Delete capability

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Lifecycle-Management&quot;&gt;Lifecycle Management&lt;a class=&quot;anchor-link&quot; href=&quot;#Lifecycle-Management&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Automates moving object between the different storage tiers
Can be used in conjuction with versioning
Can be applied to current versions &amp;amp; previous versions

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;AWS-Organizations-&amp;amp;-Consolidated-Billing&quot;&gt;AWS Organizations &amp;amp; Consolidated Billing&lt;a class=&quot;anchor-link&quot; href=&quot;#AWS-Organizations-&amp;amp;-Consolidated-Billing&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;AWS Organization is an account management service that enables you to consolidate 
    multiple AWS accounts into an organization that you create &amp;amp; centrally manage.

Consolidated Billing
    One bill for all AWS accounts

Service Control Policies
    Control access for organization unit

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Sharing-S3-buckets-across-Accounts&quot;&gt;Sharing S3 buckets across Accounts&lt;a class=&quot;anchor-link&quot; href=&quot;#Sharing-S3-buckets-across-Accounts&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Using Bucket Policy &amp;amp; IAM 
    Applies across entire bucket
    Programmatic access only
Using Bucket ACL &amp;amp; IAM
    Individual object
    Programmatic access only
Cross account IAM roles
    Programmatic &amp;amp; Console acccess

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Cross-Region-Replication&quot;&gt;Cross Region Replication&lt;a class=&quot;anchor-link&quot; href=&quot;#Cross-Region-Replication&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Versioning must be enabled on both source &amp;amp; destination bucket
Existing object need to replicated manually
Delete marker are not replicated
Deleting individual version will not be replicated

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Transfer-Acceleration&quot;&gt;Transfer Acceleration&lt;a class=&quot;anchor-link&quot; href=&quot;#Transfer-Acceleration&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Enables fast, easy &amp;amp; secure transfer of files over long duration between user &amp;amp; S3.
Takes advantage of CloudFront distributed edge locations.
As data arrives at an edge location it is routed over an optimized network path.   
Use distinct URL to upload directly to an edge location which will then transfer it to S3.

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;CloudFront&quot;&gt;CloudFront&lt;a class=&quot;anchor-link&quot; href=&quot;#CloudFront&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Can be used to deliver entire website using a global network of edge locations.
Request for content are automatically routed to nearest edge location

Two Types
    Web distribution - Website
    RTMP - Media streaming

Origin
    This is the origin of all the files that CDN will distribute.
    This can be either an S3 bucket,an EC2 instance,an elastic load balancer or route 53.

Objects are cached for the life of TTL(Time to Live)
Can clear cached objects but it will be charged

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Snowball&quot;&gt;Snowball&lt;a class=&quot;anchor-link&quot; href=&quot;#Snowball&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Snowball is a petabyte scale data transport solution that uses secure appliances to
    transfer large amounts of data into &amp;amp; out of AWS.
Come in size of 50 TB or 80TB size
256 bit encryption
Snowball Edge 
    100 TB data transfer device with onboard storage &amp;amp; compute capabilities.
Snow Mobile
    Exabyte scale data transfer service
    Data Center migration

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Storage-Gateway&quot;&gt;Storage Gateway&lt;a class=&quot;anchor-link&quot; href=&quot;#Storage-Gateway&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Service that connect an on-premises software appliance with cloud storage to provide
    seamless &amp;amp; secure integration between an organization's IT environment &amp;amp; 
    AWS's storage infrastructure.

Types    
    File Gateway
        NFS &amp;amp; SMB
        Files are stored as objects in S3 buckets accesses through a Network File System
            mount point.                
    Volume Gateway
        Volume Interface present applications with Disk Volumes using the iSCSI block protocol
        Data written to these volume can be asynchronously backed up as a point in time snapshots
            of volumes &amp;amp; stored in the cloud as Amazon EBS snapshots.                
        Stored Volume
            Store data locally while asynchronouly backing up that data to AWS
            Provide on-premises application with low latency access while providing
                durable offsite backup
        Cached Volume
            Use S3 as your primary data storage while retaining frequent data locally 
                in Storage Gateway.                    
    Type Gateway
        Offer a durable cost effective solution to archive data in AWS cloud.

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Athena-vs-Macie&quot;&gt;Athena vs Macie&lt;a class=&quot;anchor-link&quot; href=&quot;#Athena-vs-Macie&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Athena
    Interactive query service which enables to anaylse &amp;amp; query data located in S3
        using standard SQL
    Can be used to query log files.
    Generate business reports
    Analyse AWS cost &amp;amp; usage reports
    Run queries on click strem data

Macie
    Security Service uses ML &amp;amp; NLP to discover,classify &amp;amp; protect sensitive data 
        stored in S3.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;EC2&quot;&gt;EC2&lt;a class=&quot;anchor-link&quot; href=&quot;#EC2&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Web service that provides resizable compute capacity in the cloud

On Demand
    Fixed rate by hour(second) - No commitment        
Reserved
    Capacity preservation(1-3 year commitment)
    Types
        Standard
            75% off On Demand
        Convertible
            54% off on Demand
            Change the attribute of the RI
        Scheduled
            Available to launch within the time windows you reserve                
Spot
    Bid whatever price you want for instance (flexible timing)        
Dedicated Hosts
    Physical EC2 server dedicated for your use.
    Useful for regulatory requirements
    Great for licensing 

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Security-Group&quot;&gt;Security Group&lt;a class=&quot;anchor-link&quot; href=&quot;#Security-Group&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Rule apply automatically
By default - No inbound rule, allow all outbound
When inbound rule allow - outbound rule allow automatically - stateful
Can apply security group to more than 1 instances
Can add more than 1 security group to an instance
Can specify only allow rules
Can not bloclist any individual IP

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;EBS&quot;&gt;EBS&lt;a class=&quot;anchor-link&quot; href=&quot;#EBS&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Provides persistent block storage volume for use with Amazon EC2 instances.
Each EBS volume replicate within its AZ to protect you from component failure 
    offering high availability &amp;amp; durabilty    
Types
    General Purpose (SSD)
    Provisioned IOPS (SSD)
    Throughput Optimsed (HDD)
    Cold (HDD)
    Magnetic (HDD)

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;![](my_icons/EBS.png)&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;Volumes-&amp;amp;-Snapshots&quot;&gt;Volumes &amp;amp; Snapshots&lt;a class=&quot;anchor-link&quot; href=&quot;#Volumes-&amp;amp;-Snapshots&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Volume is going to be in same AZ as EC2 instances
Snapshot - For moving volume from one region to another region
If running EC2 instance gets terminated additional volume will persist
Snapshots are stored in S3
Snapshots are incremental
To move an EC2 volume from one AZ to another 
    Take a snapshot
    Create an AMI from the snapshot
    Use the AMI to launch the EC2 instance in a new AZ
To move an EC2 volume from one region to another 
    Take a snapshot
    Create an AMI from the snapshot
    Copy the AMI from one region to another
    Use the AMI to launch the EC2 instance in a new AZ

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;AMI-Types---Amazon-Machine-Image&quot;&gt;AMI Types - Amazon Machine Image&lt;a class=&quot;anchor-link&quot; href=&quot;#AMI-Types---Amazon-Machine-Image&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Select your AMI based on
    Region
    Architecture
    OS
    Launch Permission
    Storage for the root device
        Instance Store(EPHEMERSL STORAGE)
            Root device for an instance launched from the AMI is an instance store volume
                created from a template stored in S3.
            Instance Store volumes cannot be stopped
            If the underlying host fails you will lose your data.
        EBS Backed Volumes
            Root device for an instance launched from the AMI is an Amazon EBS volume
                created from an Amazon EBS snapshot.

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;ENI-vs-ENA-vs-EFA&quot;&gt;ENI vs ENA vs EFA&lt;a class=&quot;anchor-link&quot; href=&quot;#ENI-vs-ENA-vs-EFA&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;ENI - Elastic Network Interface
      Virtual Network card
      Low budget high availability solution

ENA - Enhanced Networking
      Uses single root I/O virtualization
      SR - IOV to provide high performance networking capabilities 
      Provides higher I/O Performance &amp;amp; lower CPU utilization
      No additional charges for using EN
      Use where we want good network performance
      Can be enabled using EN Adaptor or Intel 82599 Virtual Function 

EFA - Elastic Fabric Adaptor
      A network device that can be attach to EC2 instance to accelerate High Performance
      Computing HPC &amp;amp; machine learning aaplications.
      Provides lower &amp;amp; more consistent latency &amp;amp; higher througput
      OS by pass

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Encrypted-Root-Device-Volumes-&amp;amp;-Snapshots&quot;&gt;Encrypted Root Device Volumes &amp;amp; Snapshots&lt;a class=&quot;anchor-link&quot; href=&quot;#Encrypted-Root-Device-Volumes-&amp;amp;-Snapshots&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Snapshot of encrypted volumes are encrypted auomatically
Can share snapshots if they are encrypted

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;CloudWatch&quot;&gt;CloudWatch&lt;a class=&quot;anchor-link&quot; href=&quot;#CloudWatch&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Monitoring service to monitor AWS resources as well as the applications.
Can monitor
    Compute
        EC2 instances
            CPU
            Network
            Disk
            Status Check                
        Autoscaling groups
        Elastic Load Balancer
        Route53 Health Checks
    Storage &amp;amp; Content Delivery
        EBS Volumes
        Storage Gateways
        CloudFront
Will monitor events every 5 minutes by default
Can have 1 minute intervals by turning on detailed monitoring
Can create Cloudwatch Alarms which trigger notifications    

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;CloudTrail&quot;&gt;CloudTrail&lt;a class=&quot;anchor-link&quot; href=&quot;#CloudTrail&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Increases visbility into user &amp;amp; resource activity by recording AWS management 
    console actions &amp;amp; API calls

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;AWS-Command-Line&quot;&gt;AWS Command Line&lt;a class=&quot;anchor-link&quot; href=&quot;#AWS-Command-Line&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Need to setup access in IAM
Roles help us to use command line without storing credential
Roles can be attach to EC2 instance

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Bootstrap-Scripts&quot;&gt;Bootstrap Scripts&lt;a class=&quot;anchor-link&quot; href=&quot;#Bootstrap-Scripts&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Setup script which run during instance boot up

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Instance-Metadata&quot;&gt;Instance Metadata&lt;a class=&quot;anchor-link&quot; href=&quot;#Instance-Metadata&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;From CLI can get instance metadata
curl http://169.254.169.254/latest/user-data
curl http://169.254.169.254/latest/meta-data

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;EFS-Elastics-File-System&quot;&gt;EFS Elastics File System&lt;a class=&quot;anchor-link&quot; href=&quot;#EFS-Elastics-File-System&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;File storage available for EC2 instances
Allow to configure &amp;amp; create file system quickly &amp;amp; easily
Can be shared across instances
Elastic in nature
Support NFSv4 protocol
Can scale up to Petabyte
Data is stored across multiple AZ within a region
Read after Write consistency
Pay for the storage used

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;FSx-for-Windows&quot;&gt;FSx for Windows&lt;a class=&quot;anchor-link&quot; href=&quot;#FSx-for-Windows&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Provides a fully managed native Windows file system 
Built on Windows server
Manages Window server that runs Windows Server Message Block(SMB) based file services.

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;FSx-for-Lustre&quot;&gt;FSx for Lustre&lt;a class=&quot;anchor-link&quot; href=&quot;#FSx-for-Lustre&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Fully managed files system that is optmised for compute intesive workloads such as 
    high performance computing machine learning, media data processing workflow.
Directly stored on S3

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;EC2-Placement-Group&quot;&gt;EC2 Placement Group&lt;a class=&quot;anchor-link&quot; href=&quot;#EC2-Placement-Group&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Clustered
    Grouping of instances in a single AZ
    Low network latency &amp;amp; high througput
    Can't span multiple AZ
Spread
    Group of instances placed on distinct underlying hardware
    Small number of critical instances that should be kept separate from each other.
    Individual Instances
Partitioned
    Each group into logical segments called partition
    No partition share the same rack
    Mutiple Instances

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;WAF---Web-Application-Firewall&quot;&gt;WAF - Web Application Firewall&lt;a class=&quot;anchor-link&quot; href=&quot;#WAF---Web-Application-Firewall&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Monitor the HTTP &amp;amp; HTTPs request that are forwarded to Amazon CloudFront, an Application 
    Load Balancer or API Gateway
Also let you control access to your content
Allow all request except the one you specify
Block all request except the one you specify
Count the request that matches the properties specify.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Database-on-AWS&quot;&gt;Database on AWS&lt;a class=&quot;anchor-link&quot; href=&quot;#Database-on-AWS&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&quot;Realation-Databases-on-AWS&quot;&gt;Realation Databases on AWS&lt;a class=&quot;anchor-link&quot; href=&quot;#Realation-Databases-on-AWS&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;SQL Server
Oracle
MySQL
PostgreSQL
Aurora
MariaDB

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;RDS-has-two-features&quot;&gt;RDS has two features&lt;a class=&quot;anchor-link&quot; href=&quot;#RDS-has-two-features&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Multi AZ for Disaster Recovery
    If databse failed at any instance AWS will point to another instance on different AZ
    Available for all relational except Aurora
Read Replicas for Performance
    Whenever write is happening it gets replicated to another instance at another AZ
    Manually need to tell AWS when to start reading from replicas (Can have 5 replicas)
    Available for all relational except SQL Server
    Used for Scaling
    Must have Automatic backup turned on 
    Each read replica will have its own DNS end point
    Can have read replica in a second region

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Non-Relational&quot;&gt;Non Relational&lt;a class=&quot;anchor-link&quot; href=&quot;#Non-Relational&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;DynamoDB
Collection - Table
Documents - Rows
Key value pair - Fields

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Data-Warehouse&quot;&gt;Data Warehouse&lt;a class=&quot;anchor-link&quot; href=&quot;#Data-Warehouse&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;OLTP vs OLAP
Red Shift - Amazon's Data Warehouse Solution

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Elastic-Cache&quot;&gt;Elastic Cache&lt;a class=&quot;anchor-link&quot; href=&quot;#Elastic-Cache&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Elastic Cache is a web service that makes it easy to deploy,operate and scale an in memory cache
    in the cloud.
Support two open source in cache memory caching engines:
    Memcached - Simple , multithreading
    Redis - Sopisticated Any other needs - Multi AZ, Backup/restore 

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Pointers&quot;&gt;Pointers&lt;a class=&quot;anchor-link&quot; href=&quot;#Pointers&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;RDS runs on virtual machines
We cannot login to those VM
Patching of RDS OS &amp;amp; DB is Amazon's reponsibilty
RDS is not serverless
Aurora Serverless is Serverless

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Backup&quot;&gt;Backup&lt;a class=&quot;anchor-link&quot; href=&quot;#Backup&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Automated
    Retention period (1-35 days)
    Enabled by default
    Data stored in S3 (Free storage upto size of db storage)
    During window cycle 
Database Snapshots
    Created manually
    Persist even after RDS is deleted

 Whenever we restore - New RDS instance with new end points get created

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Encryption&quot;&gt;Encryption&lt;a class=&quot;anchor-link&quot; href=&quot;#Encryption&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Supported for all relational database
Done by AWS Key Management Service
When RDS instance encrypted - data stored at rest, replica, snapshots, backup - all get encrypted

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;DynamoDB&quot;&gt;DynamoDB&lt;a class=&quot;anchor-link&quot; href=&quot;#DynamoDB&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Fully managed database &amp;amp; supports both documents &amp;amp; key-value data models.
Stored on SSD storage
Spread across 3 geagraphically distinct data centers
Eventaul Consistent Read (Default)  - Consistency usually reached within a second
Strongly Consistent Read - Return a result that relects all successful writes

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Redshift&quot;&gt;Redshift&lt;a class=&quot;anchor-link&quot; href=&quot;#Redshift&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Petabyte scale data warehouse service in the cloud
Configuration
    Single Node(160Gb)
    Multiple Node
        Master Node
        Compute Node (upto 128)
 Columnar data stores can be compressed more than row based storage 
     since similar data is stored sequentially
 Doesn't require indexes or materialized views
 Automatically distribute data &amp;amp; query load to all nodes
 Backup enable by default of 1 day (Can keep 35 days)
 Always attempt to keep atleast 3 copies of data
 Original &amp;amp; replica on compute nodes &amp;amp; backup on S3
 Can replicate snapshots to S3 in another region
 Pricing
     Compute node per hour charged
     Leader node not charged
     Backup
 Security
     Encrypted in transit using SSL
     Encrypted at rest using AES-256 encryption
 Available only in 1 AZ

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Aurora&quot;&gt;Aurora&lt;a class=&quot;anchor-link&quot; href=&quot;#Aurora&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;MySQL &amp;amp; PostgreSQL compatible relational database engines
5 times better performance than MySql
3 times better performance than PostgreSQL
Start with 10 GB &amp;amp; then scale in increment of 10 GB until 64 TB
Compute resource can scale upto 32vCPU &amp;amp; 244 GB of memory
2 copies of data is contained in each AZ with minumum of 3 AZ
Handles loss of upto 2 copies of data without affecting write availability
&amp;amp; upto 3 copies of data without affecting read availability
Storage is self healing
Replicas
    Aurora (15)
    MySQL(5)
    PostgreSQL(1)
Backup
    Automated backup always enabled
    can share snapshots across AWS accounts
Serverless
    On demand, autoscaling configurations for MySQL &amp;amp; PostgreSQL compatible editions of Aurora
    An Aurora Serverless DB Cluster automatically starts up,shuts down,and 
        scale as per applications's needs.
    Cost effective for infrequent,intermittent, unpredictable loads.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;DNS&quot;&gt;DNS&lt;a class=&quot;anchor-link&quot; href=&quot;#DNS&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&quot;Intro&quot;&gt;Intro&lt;a class=&quot;anchor-link&quot; href=&quot;#Intro&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;DNS
Domain Registrar
SOA Record - Start of Authority
NS - Name Server  
    Used by top level domain server to direct traffic to content DNS server
A record - Address record
TTL - Time to Live
C Name - Canonical Name
Alias record
Elastic Load Balancer
    Do not have pre defined IPv4 address, resolve them using DNS name

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Routing-Policies&quot;&gt;Routing Policies&lt;a class=&quot;anchor-link&quot; href=&quot;#Routing-Policies&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Simple - Random
Weighted - Based on traffic weight specified
Latency Based - Based on the region which gives lowest latency to user
Failover - active/passive setup
Geolocation - Based on the region of user
Geoproximity - Traffic policy - Based on the region of user &amp;amp; resources
Multivalue - Simple with health check&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;VPC&quot;&gt;VPC&lt;a class=&quot;anchor-link&quot; href=&quot;#VPC&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&quot;Intro&quot;&gt;Intro&lt;a class=&quot;anchor-link&quot; href=&quot;#Intro&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Provision a logically isolated section of the AWS cloud where you can launch AWS resources
    in a virtual network that you define.
Selection of own ip address range, creation of subnet, configuration of route tables &amp;amp; 
    network gateways.
Create a public facing subnet for your webservers that has access to the internet.
Place backend systems in a private subnet with no internet access.
Leverage security group &amp;amp; network control access list to control access to EC2 instance in subnet.
Create a VPN connection between corporate data center &amp;amp; VPC
1 subnet can't spread across AZ
Security groups - Statful
ACL - Stateless


&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;CIDR&quot;&gt;CIDR&lt;a class=&quot;anchor-link&quot; href=&quot;#CIDR&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;IP Address - 4 section of 8 bits 
10.0.0.0/16 
    10.0.0.1 - First
    10.0.255.254 - Last 
    2^(32-16) - Number of addres - 65K
    255.255.0.0 - netmask
 10.0.1.0/24 
    10.0.1.1 - First
    10.0.1.254 - Last 
    2^(32-24) - Number of addres - 256
    255.255.255.0 - netmask 

 /28 - smallest in Amazon VPC

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Default-VPC&quot;&gt;Default VPC&lt;a class=&quot;anchor-link&quot; href=&quot;#Default-VPC&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;All subnet have route out to the internet
Each EC2 instance have both a public &amp;amp; private ip address

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;VPC-Peering&quot;&gt;VPC Peering&lt;a class=&quot;anchor-link&quot; href=&quot;#VPC-Peering&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Connect one VPC with other via direct network route using ip addresses
Instances behave as if they were on same private network
Can do peering across AWS accounts
No transitive peering
Can peer across region

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Lab&quot;&gt;Lab&lt;a class=&quot;anchor-link&quot; href=&quot;#Lab&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;When we create VPC, below all also gets created
    Route Table
    Security Group
    Network ACL
Internet Gateway tied to VPN
Amazon reserve 5 ip address within subnets

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;NAT&quot;&gt;NAT&lt;a class=&quot;anchor-link&quot; href=&quot;#NAT&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Network Addres Translation - Allow private subnet to communicate to Internet 
NAT Instance - single EC2 instance 
    Disable source/destination check
    Must be on public subnet
    Behind a security group
NAT Gateway
    Redundant inside AZ
    Start at 5 Gbps &amp;amp; scale currently to 45 Gbps
    No need to patch
    Not associated with Secuity groups
    Automatically assigned a public ip address
Edit route table to use NAT 

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Network-ACL&quot;&gt;Network ACL&lt;a class=&quot;anchor-link&quot; href=&quot;#Network-ACL&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Default ACL which gets created with VPN allows everything
Deny everything by default when created new NACL
Specify Inbound &amp;amp; Outbound rule
Rule apply in numerical order 
Block individual Ip address

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;ELB&quot;&gt;ELB&lt;a class=&quot;anchor-link&quot; href=&quot;#ELB&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Application LB
    Atleast two public subnet must be speified
Network LB
Classic LB

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;VPC-Flow-Logs&quot;&gt;VPC Flow Logs&lt;a class=&quot;anchor-link&quot; href=&quot;#VPC-Flow-Logs&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Capture information about IP information going to &amp;amp; from network interface in VPC
Flow Logs data is stored using CloudWatch Logs
Can be stored at 3 levels
    VPC
    Subnet
    Network Interface Level
Can't change flow log configuration once created
Peer VPC need to be in same account for enabling Flow Logs
Not all traffic is monitored

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Bastions-Host&quot;&gt;Bastions Host&lt;a class=&quot;anchor-link&quot; href=&quot;#Bastions-Host&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Special purpose computer on a network specially designed &amp;amp; configured to withstand attacks.
SSH or RDP to private subnet through it
Jump Boxes in Australia

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Direct-Connect&quot;&gt;Direct Connect&lt;a class=&quot;anchor-link&quot; href=&quot;#Direct-Connect&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Establish a dedicated network connection between on premise to AWS

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Global-Accelerator&quot;&gt;Global Accelerator&lt;a class=&quot;anchor-link&quot; href=&quot;#Global-Accelerator&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Direct traffic to optimal endpoints over the AWS global network
Improves availability &amp;amp; performance of internet applications that are used by global audience
By defualt provides two static IP addresses
Accelerator
DNS Name
Network Zone
Listener
Endpoint group
Endpoint

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;VPC-End-Points&quot;&gt;VPC End Points&lt;a class=&quot;anchor-link&quot; href=&quot;#VPC-End-Points&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Enables you to privately connect VPC to supported AWS services &amp;amp; VPC endpoints services
    powered by PrivateLink without requiring an internet gateway, NAT devices, VPN 
    connection or AWS Direct Connect connection.
Instances in VPC does not require public ip addresses to communicate with the 
    resources in the service
End points are virtual devices.
They are horizontally scaled, redundant &amp;amp; highly avaliable VPC components that allow 
    commuinication between instances in your VPC &amp;amp; services without imposing availability 
    risks or bandwidth constraint on your network traffic.
Two types
    Interface End Point
        Elastic network interface with a private IP address that serves as an entry point
            for traffic designated to a supported service.
    Gateway End Point
        Amazon S3
        DynamoDB&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;HA-Architecture&quot;&gt;HA Architecture&lt;a class=&quot;anchor-link&quot; href=&quot;#HA-Architecture&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&quot;Load-Balancer&quot;&gt;Load Balancer&lt;a class=&quot;anchor-link&quot; href=&quot;#Load-Balancer&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Application LB
   Operate at level 7 &amp;amp; are application aware
Network LB
    Best suited for TCP traffic where extreme performance is required
    Operating at level 4 
Classic LB
    Legacy ELB - Balance HTTP/HTTPS application &amp;amp; use Layer-7 specific feature
        such as X-Forwarded &amp;amp; sticky sessions.
    Also use strict level 4 balancing for applications that rely on TCP protocol 
    Cost effective

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Lab&quot;&gt;Lab&lt;a class=&quot;anchor-link&quot; href=&quot;#Lab&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Never get ip address for ELB

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Advanced-ELB&quot;&gt;Advanced ELB&lt;a class=&quot;anchor-link&quot; href=&quot;#Advanced-ELB&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Sticky Session
    Allow you to bind user to particular EC2 instances
Cross Zone Load Balancing
    Cross balance across AZ
Path Pattern
    Create a listener with rules to forward requests based on the url path.

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Autoscaling&quot;&gt;Autoscaling&lt;a class=&quot;anchor-link&quot; href=&quot;#Autoscaling&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Groups
    Logical components - Webserver groups , application group or database groups
Configuration Template
    Groups uses launch template or launch configuration as a configuration template 
        for its EC2 instances.
Scaling Options
    Configure a group to scale based on the occurence of specified conditions or schedule
    Maintain current instance levela at all times
    Scale manually
    Scale based on a schedule
    Scale based on demand
    Use predictive scaling

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;HA-Architecture&quot;&gt;HA Architecture&lt;a class=&quot;anchor-link&quot; href=&quot;#HA-Architecture&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Use mutiple AZ &amp;amp; multiple regions
Multi-AZ for DR and Read Replicas for RDS
Scaling out &amp;amp; scaling up

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Cloud-Formation&quot;&gt;Cloud Formation&lt;a class=&quot;anchor-link&quot; href=&quot;#Cloud-Formation&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Way of completely scripting your cloud environment

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Elastic-Beanstalk&quot;&gt;Elastic Beanstalk&lt;a class=&quot;anchor-link&quot; href=&quot;#Elastic-Beanstalk&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Quickly deploy &amp;amp; manage applications in the AWS Cloud without worrying about the 
    infrastucture that runs those applications.
Beanstalk does capacity provisions, load balancing, scaling &amp;amp; application health monitoring.&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Applications&quot;&gt;Applications&lt;a class=&quot;anchor-link&quot; href=&quot;#Applications&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&quot;SQS---Simple-Queue-Service&quot;&gt;SQS - Simple Queue Service&lt;a class=&quot;anchor-link&quot; href=&quot;#SQS---Simple-Queue-Service&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Web service that gives access to a message queue
Message can contain up to 256 KB of text in any format.
Can be kept from 1 minute to 14 days (default 4 days)
Pull based
Type of queue
    Standard
        best effort ordering 
        more than 1 copy of message might be delivered out of ordered
    FIFO
        Only once
        Order maintained
        Limited to 300 transactions per second 
 Visibility Timeout
     Amout of time message is invisible after a reader picks up that message.
     Maximum is 12 hours
 Polling
     Short - return immediately
     Long - Doesn't return a response until message arrives in the message queue or timeout

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;SWF---Simple-Workflow-Service&quot;&gt;SWF - Simple Workflow Service&lt;a class=&quot;anchor-link&quot; href=&quot;#SWF---Simple-Workflow-Service&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Web service that coordinate work across distributed application components
Task oriented 
Manually interwention can happen
Workflow executions can last for 1 year
SWF Actors
    Workflow Starter - Application that can initiate the workflow
    Decider - Control the flow of activity task in a workflow execution.
    Activity Workers - Carry out the activity tasks

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;SNS---Simple-Notification-Service&quot;&gt;SNS - Simple Notification Service&lt;a class=&quot;anchor-link&quot; href=&quot;#SNS---Simple-Notification-Service&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Web service that makes it easy to set up, operate &amp;amp; send notification from the cloud.
Push model
In expensive pay as you go model
SNS Topic

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Elastic-Transcoder&quot;&gt;Elastic Transcoder&lt;a class=&quot;anchor-link&quot; href=&quot;#Elastic-Transcoder&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Convert media files format

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;API-Gateway&quot;&gt;API Gateway&lt;a class=&quot;anchor-link&quot; href=&quot;#API-Gateway&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Makes it easy to publish, maintain, monitor &amp;amp; secure API at any scale.
Expose HTTPS endpoints to define a Restful API
Serverless-ly connect with Lambda &amp;amp; DynamoDB
Send each API endpoint to a different target
Configure
    Define an API
    Define resources &amp;amp; nested resources
    For each resource
        Select supported HTTP method
        Set security
        Choose Target
        Set request &amp;amp; response

 API Caching
 Same Origin Policy
     Web browser permits scripts contained in a first page to access data in a 
     second web page but only if both web pages have the same origin
 CORS
     Mechanism that allows restricted resources(fonts) on a web page to be requested 
     from another domain outside the domain from which the first resource was served.

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Kinesis&quot;&gt;Kinesis&lt;a class=&quot;anchor-link&quot; href=&quot;#Kinesis&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Platform on AWS to send streaming data to.
Easy to load &amp;amp; analyse streaming data.
Retention - 24 hours to 7 days
Types
    Streams
        Shards
    Firehose
        Lambda can be running
        Data is not persistent
    Analytics
        S3 / Redshift / Elastic search cluster

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;Web-Identity-Federation---Cognito&quot;&gt;Web Identity Federation - Cognito&lt;a class=&quot;anchor-link&quot; href=&quot;#Web-Identity-Federation---Cognito&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;User Pools
    Users can sign in directly
    Cognito acts as Identity Broker between the Identity Provider &amp;amp; AWS.
Identity Pools
    Provide temporary AWS credentials to access AWS services like S3 or DynamoDB&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Serverless&quot;&gt;Serverless&lt;a class=&quot;anchor-link&quot; href=&quot;#Serverless&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&quot;Lambda&quot;&gt;Lambda&lt;a class=&quot;anchor-link&quot; href=&quot;#Lambda&quot;&gt; &lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Compute service where you can code &amp;amp; create a lambda function.
Event Driven
In reponse to http request
Pricing
    Number of requests
    Duration
Scales out automatically&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name>Ankush Agarwal</name></author><summary type="html"></summary></entry></feed>